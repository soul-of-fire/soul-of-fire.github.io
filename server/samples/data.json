[
    {
        "id": 1451767284258,
        "article": {
            "title": "Java",
            "header": null,
            "content": "Java Basics\n\n    Define the scope of variables\n    Define the structure of a Java class\n    Create executable Java applications with a main method\n    Import other Java packages to make them accessible in your code\n\nWorking With Java Data Types\n\n    Declare and initialize variables\n    Differentiate between object reference variables and primitive variables\n    Read or write to object fields\n    Explain an Object's Lifecycle (creation, \"dereference\" and garbage collection)\n    Call methods on objects\n    Manipulate data using the StringBuilder class and its methods\n    Creating and manipulating Strings\n\nUsing Operators and Decision Constructs  \n\n    Use Java operators\n    Use parenthesis to override operator precedence\n    Test equality between Strings and other objects using == and equals ()\n    Create if and if/else constructs\n    Use a switch statement\n\nCreating and Using Arrays\n\n    Declare, instantiate, initialize and use a one-dimensional array\n    Declare, instantiate, initialize and use multi-dimensional array\n    Declare and use an ArrayList\n\nUsing Loop Constructs\n\n    Create and use while loops\n    Create and use for loops including the enhanced for loop\n    Create and use do/while loops\n    Compare loop constructs\n    Use break and continue  \n\nWorking with Methods and Encapsulation\n\n    Create methods with arguments and return values\n    Apply the static keyword  to methods and fields  \n    Create an overloaded method\n    Differentiate between default and user defined constructors\n    Create and overload constructors\n    Apply access modifiers\n    Apply encapsulation principles to a class\n    Determine the effect upon object references and primitive values when they are passed  into methods that change the values\n\nWorking with Inheritance\n\n    Implement inheritance\n    Develop code that demonstrates the use of polymorphism\n    Differentiate between the type of a reference and the type of an object\n    Determine when casting is necessary\n    Use super and this to access objects and constructors\n    Use abstract classes and interfaces\n\nHandling Exceptions\n\n    Differentiate among checked exceptions, RuntimeExceptions and Errors\n    Create a try-catch block and determine how exceptions alter normal program flow\n    Describe what Exceptions are used for in Java\n    Invoke a method that throws an exception\n    Recognize common exception classes and categories",
            "footer": null,
            "personal": false
        },
        "children": [
            {
                "id": 1451767588292,
                "article": {
                    "title": "Basics",
                    "header": null,
                    "content": "Обекта е инстанция на клас, неговите методи и променливи са копие на класът, обектите променят своето състояние с методите. new създава нов обект и връща референция към него, чрез тази референция се променя състоянието на обекта, статичните нямат състояние. В един обект не се съдържат други обекти а референции към други обекти.\n\nequals, hashCode, toString, getClass, notify, notifyAll, wait\n\nИмена на класове, методи и полета започват с буква или _$ и може да съдържат само букви и цифри\n\n\"\\377\" octal - това и по-малко са букви",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451767640940,
                        "article": {
                            "title": "Class",
                            "header": null,
                            "content": "Класът е основа за обекти от определена категория. Свойствата на класът са описани от атрибути наречени полета. Поведението се определя от операциите декларирани в методи. \nmembers - полетата и методите",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451767675083,
                        "article": {
                            "title": "Object",
                            "header": null,
                            "content": "Създаване на обекти от класове - инстанция\nПолзването и достъпа до обектите е чрез референция. Нужна е променлива която да държи референцията.\nИзвикване на конструктора на класът с new създава обект.\nРеференцията има име но самия обект не.\naliases - няколко референции към един обект.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451767729670,
                        "article": {
                            "title": "Instance",
                            "header": null,
                            "content": "При създаването на обекта се правят копия на променливите и методите на класът. Състоянието на обект се определя от тях, така различните обекти могат да имат различно състояние.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451767773751,
                        "article": {
                            "title": "Static",
                            "header": null,
                            "content": "Статичните методи и променливи се инициализират когато класът се зареди при ползване на приложението.\nНе се създава обект и стойностите може да се ползват от различни инстанции.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451767809851,
                        "article": {
                            "title": "Inheritance",
                            "header": null,
                            "content": "extends - разширява клас, това е под-клас. Може да се наследи само един супер-клас. Може да ползва някои от променливите и методите на супер класът като свои.\nprivate на супер-класът не са достъпни.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451767844783,
                        "article": {
                            "title": "Aggregation",
                            "header": null,
                            "content": "Когато в един обект се съдържат други обекти. При създаването на инстанция на обекта се създават и референции към обектите от които се състои. Обекта съхранява примитивни стойности или референции.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451767921163,
                "article": {
                    "title": "Fundamentals",
                    "header": null,
                    "content": "Имена на класове, специални знаци в кавички, коментари.\nПримитивните стойности имат обгръщаш клас, byte,short,int,long,char,float,double,boolean\nПроменливи тип-име-стойност, могат да съдържат само примитивни стойности и референции към обекти. Инициализират се по-подразбиране, или в {} задължително. Референциите се приравняват на null ако няма обект преди да се ползват.\nhexadecimal (\\u0031) може да се ползва като буква в типът на променлива или като име на променливата.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451768032292,
                        "article": {
                            "title": "Language elements",
                            "header": null,
                            "content": "Имена състоят се от букви и цифри, първия знак трябва да е буква или _ $ €, но не и цифра.\ngoto и други думи команди не се използват за имена.\nliteral - константна стойност Integer, Float, Character, Boolean, String (null).\nscientific notation 1.1E-2\n.4 е 0.4\n'1' е \\u0031 hexadecimal number\n\\t \\n \\\\ escape\n//, /* */, /** */ коментари, вътрешен коментар не може.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451768138621,
                        "article": {
                            "title": "Primitive data types",
                            "header": null,
                            "content": "Не са обекти. имат обгръщаш клас\nbyte, short, int, long, char, float, double, boolean\nchar и long принадлежат към Integral type\nbyte(127)\nshort(32'767)\nint(2147'483'647)\nlong(9223372036854775807L)",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451768171868,
                        "article": {
                            "title": "Variables",
                            "header": null,
                            "content": "Тип име и стойност. Съхранява примитивна стойност или референция към обект.\nСтатичните променливи когато се зареди класът и тези на инстанциите при нова инстанция приемат стойност по-подразбиране. false,0,'',null ако не им се зададе стойност.\nЛокалните променливи (в метод, конструктор или блок) трябва задължително да се инициализират, и то не трябва да е след условие, освен ако не е в if else или if(true).\nЛокална референция не-инициализирана се компилира но не може да се ползва, не е null.\nпроменливи на инстанция определят състоянието на обекта и съществуват колкото и обект, тези на класът докато класът е достъпен.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451768315531,
                "article": {
                    "title": "Declarations",
                    "header": null,
                    "content": "members - статичните могат да обменят информация само със статични. Всички могат да са декларирани в различен ред.\nСтандарти за достъп до полетата на обект.\nМетода има блок в които се декларират statements променливите са локални, може да ползва всички members на класът с this.\nКонструктора се свързва със своя супер клас Object и се създава нова инстанция и полетата се инициализират. Когато има само конструктор с параметри и при нова инстанция се подават параметри. Първо се създава новата инстанция със super() и после може да се ползват и нейните мembers от конструктора.\noverload - различен подпис, типът няма значение.\nЕнумератори - ползват константи които са обекти под-класове на енумератора final static инициализират се с параметрите ако има такива и тяхното състояние може да бъде променяно.\nМасив - обект, колекция с еднородни елементи (полиморфизъм), големината не може да се променя, задава се при създаването. \nПредаване на параметри - по стойност, примитивите се копират което позволява локална промяна без да се промени оригинала, референциите сочът към един обект. При предаването когато се очаква примитив, може да има разширяване и unbox, когато се очаква референция, трябва да е от същия тип.\nvarargs - създава масив от еднакви елементи.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451768385778,
                        "article": {
                            "title": "Java Beans",
                            "header": null,
                            "content": "Стандарт за изграждане на компоненти които служат за основа в по-сложни приложения (J2SE).\nprivate полета които имена започват с малка буква.\ngetter и setter - set или get и добавено полето с главна буква\nis за boolean\nlistener - няма декларирани стандарти за тях",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451768446952,
                        "article": {
                            "title": "Method",
                            "header": null,
                            "content": "Параметрите на метода са локални променливи. Тялото е блок. Може да са на инстанцията или на класът.\nstatemants - деклариране на променливи, управление на потока или тези които завършват с ;\n{} блок обединява statements, може да се ползва навсякъде и да има вътрешен блок.\nинстанция - може да ползва и статичните members.\nthis - final референция към настоящия обект. може да се ползва от не-статични members. това е полезно при засенчване на променлива this.x=x или да се изпрати като аргумент в метод.\noverloading - методи с еднакво име и различни параметри или различен ред на параметрите (подпис). Типът няма значение.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451768509672,
                        "article": {
                            "title": "Constructors",
                            "header": null,
                            "content": "Задават началното състояние на обекта когато е създаден с new. Нямат тип, могат да имат return.\nsuper(); извиква супер-класът Object които създава обекта и инициализира променливите.\nКогато има само един конструктор и той има параметри, за създаване на нов обект трябва да се подадат и параметрите, или да се създаде конструктор без параметри.\nКонструктора има достъп до всички members на класът дори и тези на инстанцията, която се създава първа.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451768547804,
                        "article": {
                            "title": "Enums",
                            "header": null,
                            "content": "Наименувани константи, обикновените константи static final могат да бъдат заменени с други стойност при имплементацията и връщат само стойност. \nНе може да се декларират в методи и блокове, само във вътрешни класове и то ако са статични.\nenum Name {A,B,C;}\nЕнумератора е статичен и няма нужда да бъде деклариран като такъв.\nКонстантите се декларират първи в енумератора.\nМоже да има стойности като аргументи за всяка константа, тогава се слага и конструктор с отговарящи параметри.\nОт String с помоща на toUpperCase() може да се генерира енумератор Name.valueOf()\nНе могат да бъдат клонирани.\nordinal - връща позицията на константата в масива.\nenum не е абстрактен ако има абстрактен метод, може да имплементира интерфейс.\n\nПолзване на анонимен клас в енумератор за различна имплементация на метод:\nenum One {\n\tONE(1), TWO(2), THREE(0), FOUR(4){\n\t\tpublic int calculate(){\n\t\t\treturn FOUR.getValue()*4;\n\t\t}\n\t};\n\tprivate int i;\n\tprivate One(int i) {\n\t\tthis.i = i;\n\t}\n\tpublic int getValue() {\n\t\treturn i;\n\t}\n\tpublic int calculate(){\n\t\treturn i*2;\n\t}\n}\n\nОбявяването на абстрактен метод задължава всички константи да го имплементират с анонимен клас.\nenum AbstractUse {\n\tONE(1){\n\t\tpublic Integer num(Integer i){\n\t\t\treturn i*ONE.getInt();\n\t\t}\n\t}\n\t,TWO(2){\n\t\tpublic Integer num(Integer i){\n\t\t\treturn i*TWO.getInt();\n\t\t}\n\t};\n\tabstract Integer num(Integer s);\n\tprivate int i;\n\tAbstractUse(Integer i){\n\t\tthis.i=i;\n\t}\n\tpublic Integer getInt(){\n\t\treturn i;\n\t}\n}\nКонстантите са static final под-класове на основния, затова и абстрактния метод ги задължава да го наследяват, при създаването на константата се инициализират техните полета с параметрите, възможно е да се промени състоянието им.\nEnumSet, EnumMap",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451768595636,
                        "article": {
                            "title": "Arrays",
                            "header": null,
                            "content": "Масив (обект) - данни под формата на структорирана колекция от еднородни елементи с индекси.\nГолемината не може да се променя, има поле length\nПри създаването на масив с new се задава и неговата големина.\nПри инициализирането елементите получават стойност по-подразбиране.\nint[] array={1,2,3,}; подобно на анонимен клас може да се ползва само при декларация и инициализация на един ред. Добавената запетая не означава елемент\ntoCharArray() от String\nint[] array=new int[]{} празен масив\nРазположението на [] може да е преди или след името.\nМасив може да се декларира без да се създаде int[][] empty=new int[5][]; но за да се ползва после трябва да се създаде empty[0]=new int[]{1};",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451768680159,
                        "article": {
                            "title": "Parameter passing",
                            "header": null,
                            "content": "Параметрите в метод се предават по стойност, примитивите и референциите се копират, масива предава своите данни. Така при промяна на локалните променливи не се променя оригинала за примитиви.\nПредаването на параметрите става от ляво на дясно, така one(i++,i) предава 1 2.\n\nПредаване на примитиви - разширяване или unbox и разширяване, по-малък може да се предаде като по-голям int-long, обект може да се предаде на примитив Integer-int-long, но когато се очаква референция не може да се предаде примитив, освен ако няма box или референцията е тип супер на box-а. Избира разширяване пред box.\n\nПредаване на референции - създава се нова референция към същия обект, може да се правят промени на обекта, приравняване на нула в едната референция оставя другата активна.\nМасива е обект предава се като референция и при промяна на някой от елементите се променя оригинала.\n\nПриемащия параметър може да се обяви final и се третира кто константа от компилатора. ако референция се обяви final нейното състояние може да се променя.\n\nvarargs - (String...s) това е равно на (String[] s), винаги е последен параметър. от параметрите се създава автоматично масив, освен ако не се подаде масив, тогава се предава референция. Когато се подаде под-тип Object[]-String[] се предава референция, при масивите наследяването работи. Метода може да се извика без аргумент и тогава прави нулев масив.\n\npublic static void main(String[] args) - масива никога не е null, може да се обяви final",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451768759058,
                "article": {
                    "title": "Access",
                    "header": null,
                    "content": "Импортване на класове от други пакети, * импортва всичко в пакета. Статичен импорт може да позволи ползването на константа с нейното име, може да се направи статичен импорт на интерфейс константите в него ще може да се ползват директно.\n\nКомпилиране с javac -d . Name.java или javac -cp Dir -d . Name.java задаване на структора в насточщия пакет. Задействане с java -cp Dir package.Name ползва се и  / за почване от централната директория и ../ връща едно назад. Компилиране на jar с jar cf name.jar resource, пуска файл в jar-а с java -cp name.jar package.Name\n\nSytem.getProperties();\n\nmembers на инстанцията имат достъп до статични или не, статичните имат достъп само до статични. Полета могат да се засенчват в метод или крият ако са статични. Референция в обекта от тип самия обект може да ползва и private полетата точно както конструктор, извън обекта не.\n\nБлок {} обединява команди, може да има вътрешен блок, полетата вътре са локални, те имат достъп до външните но не и до тези във вътрешен блок. Подобно на безименен клас условията (if) съдържат локални променливи за блока и са декларирани извън него.\n\nКласове public само един във файла, static не се ползва с класове. абстрактен, подобно на интерфейса има имплементация в подкласовете, но може и да няма декларирани абстрактни методи, полетата не са константи, не може да е final освен ако подкласът не е имплементирал всичко което трябва. final не може да се наследява, тоест няма под-класове.\n\nМетоди public вижда се от всякъде, protected в пакета и в други пакети чрез подклас, като референция в под-класът към супер-класът в друг пакет не работи. default не се изписва и е сам за пакета, private само за класът. Абстрактен не може да е статичен, нито final и трябва да е public,protected или default. synchronized ползва се само от една нишка.\n\nПолета final не се променя може да се декларира без да се инициализира,но после трябва да му се зададе стойност преди да се използва, в класът става с {}. transient не се записва. volatile не кешира, важно за конкурентна среда.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451768899840,
                        "article": {
                            "title": "Packages classes",
                            "header": null,
                            "content": "Класът съдържа не повече от един public клас, при компилирането се отделят всички класове в отделни файлове.\nimport Name; - път до файла, не включва под-директории\nimport directory.*;\nimport static Name.member;\ninterface Constants {\n\tdouble PI=3.14;\n\tint FIRST=0;\n}\nimport static package.Constants.*; директен достъп до константи в интерфейс, без да се имплементира интерфейса. Енумераторите също могат да се ползват така.\nКогато два импорта връщат едно име, има конфликт и не може да се компилира. Импортване на специфичен път решава проблема.\nМоже да се направи статичен импорт към нестатично поле.\n\njavac Name.java - компилира в същата директория без структора.\njavac -d . Name.java - компилира структората на пакета и фаила в нея. Ако има зависим файл трябва да си е на мястото в структората.\njavac -cp DirName Name.java - задава път към директория в която има необходим за компилирането ресурс, от настоящата, когато има деклариран пакет не работи.\n\nКлас в пакет се изпълнява от основната директория спрямо структората на пакета. С -cp се задава път към основната директория. С : се разделят няколко пътя, търси от ляво на дясно.\njava base.A - от главната директория се задава пакета и името\njava -cp Temp base.A - намираш се в предходната директория\njava -cp /Temp base.A - намираш се в директория различна от Temp\njava -cp ../ base.A - намираш се в base\n\"\" заграждаш разделено име на директория.\n\nStartBy.txt :\nMain-Class: package.Name\n! има нов ред\njar cmf StartBy.txt name.jar fileordirectory\njar cf name.jar fileordirectory - име на архива и директория или файл които да са вътре.\njava -jar name.jar стартира програмата, вече знае къде е main метода:\njava -cp name.jar package.Name - в този файл има main метод\n\nProperties p=System.getProperties();\nfor(Object key:p.keySet()){\n\tSystem.out.printf(\"%40s %s \\n\",key,p.get(key));\n}\nс -Dkey=value се задава системна променлива, между -D и key няма празен знак, променливата е валидна само за насточщото изпълнение",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451768937049,
                        "article": {
                            "title": "Scope rules",
                            "header": null,
                            "content": "Статичен member има достъп само до други статични members. Инстанцията също има достъп до статични members.\nПоле на инстанцията може да се засенчи в метод на инстанцията с локална променлива или в подклас.\nПоле статично може да се засенчи в статичен или метод на инстанцията с локална променлива или да се скрие в под-клас.\nМетод на инстанцията може да се overrid-не в под-клас.\nМетод статичен може да се скрие в под-клас.\nРеференция в обекта от тип самия обект може да ползва и private полетата точно както конструктор, извън обекта не.\n\nБлок {} променлива декларирана вътре може да скрие клас променлива но не и локална, не се вижда отвън, външните обаче са видими вътре.\nКогато има някакво условие преди блока if(index i){} това действа подобно на безименен клас, тоест като локална променлива за блока, с разликата че не е част от вътрешния блок и не може да повтаря външна променлива.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451769001820,
                        "article": {
                            "title": "Modifiers",
                            "header": null,
                            "content": "Public class е достъпен от всякъде, default class само от пакета в които е. static не се прилага на класове.\n\nаbstract class не може да се прави инстанция от него, подкласовете осигуряват специфична имплементация. Ако има поне един абстрактен метод и класът трябва да е абстрактен. Разликата с интерфейса е че може да не съдържа никакви методи, да има методи които не са абстрактни, може и да се обяви абстрактен и да не  имплементира задължителните методи. Полетата в абстрактния клас не са константи. Интерфейса също е абстрактен, както и методите му са абстрактни.\n\nfinal class не може да се наследява, тоест няма подкласове в които методите му да бъдат overriden и да се промени целта му. Клас които наследява абстрактен клас трябва да имплементира задължителните му методи преди да може да се обяви final.\n\nМетоди и полета\n+ public - достъпен за всички\n# protected - достъпен за тези в пакета и за подкласовете в други пакети. От референция към съпер-клас в под-класът в друг пакет не работи.\n  default - достъпен само в пакета, не се изписва!\n- private - достъпни само в класът\n\nstatic при зареждане на класът се инициализира, статичен може да ползва само други статични променливи или методи, не е част от състоянието на обекта. members на инстанцията могат да ползват статични.\nfinal - промитив не може да смени стойността си, референция не може да смени към кой обект сочи, но може да се смени състоянието на обекта, метод не може да се overrid-нe. final може да се декларира и локално (единствено). Локално може да се декларира без инициализация и да се инициализира преди ползване. Поле на класът може да се декларира без да е инициализирано, но задължително се инициализира в блок.\nabstract само метод на инстанцията, не може да е статичeн не се overrid-ват а се крият. не може да е final трябва да се имплементира. Може да е само public,protected или default за да се наследява. \nsynchronized за методи и блокове,само една нишка може да го ползва. поле не може да се синхронизира.\ntransient поле на инстанцията което не се запива, ползва се за допълнителна информация. статичните полета не част от обекта и не се записват, може да се декларира но няма смисъл.\nvolatile за поле, не позволява стойността на полето да се кешира от JVM по време на изпълнение, което е много важно при ползване от няколко нишки в конкурентна среда.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451769509766,
                "article": {
                    "title": "Operator expressions",
                    "header": null,
                    "content": "Кастване между примитив и референция не е разрешено.\n\nПри два оператора binary по-малките от int се разширяват до int, ако има по-голямо от int, се разширяват до него.\n*/ са с предимство пред другите, когато има няколко с еднакво предимство се обединяват в групи от ляво-надясно, също така преди да се извърши операцията всички се оценяват от ляво-надясно. Операция между две int връща int не float.\nКаст не е необходим, когато по-малката променлива е byte|short|char и се приравнява към по-голяма която е в обхвата (може да се определи ако е от константа final или стойност) и е най-много int.\nКогато по-голям примитив се каства към по-малък и е извън обхвата се компилира и връща нереална стойност.\nx += 1 не променя оператора, short си остава short.\n\nstrictfp - еднакво смятане на плаваща запетая на различните JVM, слага се на class,interface и методи.\n\nConcat събира цифри докато не срещне дума, след това добавя към думата.\n\nОперации - първо се проверява всеки оператор (може да е метод) от ляво-надясно после се обединяват в групи по важност, освен || където при успешно първо условие второто дори не се проверява, && e с предимство пред ||\nПри операции a<b<c и а==b==c хвърля грешка защото се променя оператора true - число.\nСравняване на референци с == или instanceof трябва да са от един тип.\nequals - сравнява стойностите на обекти, когато е имплементиран от класът, ако не е тогава се сравнява дали референциите сочът към един обект. Всички обгръщащи класове имат имплементиран equals и hashCode.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451769568574,
                        "article": {
                            "title": "Conversions",
                            "header": null,
                            "content": "Разширяване по-малко се съдържа в по-голямо, но при long-float има загуба на точност. Намаляване е от по-голямо към по-малко може да има загуба на точност защото големината е различна, изисква cast. Изключение е char за да се приравни към byte или short първо се приравнява на int.\n\nПриравняване към по-малко може да е без кастване, ако променливата към която се приравнява е константа в обхвата и е определима (не x=y=z).\n\nbox от примитив в неговия обгръщаш клас.\nunbox от обгръщащия клас в примитив.\n\nОператора + ползва имплементацията на toString на обекта. тоест представя обекта като String.\n\nКастване между примитиви и референции не е разрешено!, освен ако референцията не сочи към обект които е обгръщаш клас. Тоест кастване между примитиви и примитиви, както и между референции е разрешено.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451773374833,
                        "article": {
                            "title": "Precedence",
                            "header": null,
                            "content": "unary един оператор (unbox и разширяване) по-малко от int става int, по-голямо не се променя. промените върху оператора се прилагат от дясно наляво (- - x) е(-(-x))\nbinary два оператора ({*/%}{+-}{<>}{==}{&&}) най-малкото което ще се получи е int, тоест когато има оператор по-голям от int другия се разширява към него, ако не се разширяват до int. Редът на изпълнение ({*/%}{+-}{<>}{==}{&&}) се спазва, когато има оператори с еднакво предимство се групират от ляво-надясно ((1+2)-3). Делене на int връща int не float.\n\nПри пресмятане операторите се проверяват от ляво-надясно преди да се използват, така int i=10; ((i=3)+3) е равно на 6.\n\nAssignment \n= няма предимство, другите операции се изпълняват преди него. за примитиви презаписва стойността, за референции сочат към един обект.\ni=k=1 това е възможно.\nКаст не е необходим, когато по-малката променлива е byte|short|char и се приравнява към по-голяма която е в обхвата (може да се определи ако е от константа final или стойност) и е най-много int.\nКогато по-голям примитив се каства към по-малък и е извън обхвата се компилира и връща нереална стойност.\n\nAritmetic */%+-\nПърво се проверява всеки оператор (може да е метод) от ляво-надясно после се обединяват в групи по важност.\nInfinity 4.0/0 Float.POSITIVE_INFINITY\n-Infinity -4.0/0 Float.NEGATIVE_INFINITY\nNaN 0.0/0.0 Float.isNaN(x)\nstrictfp - еднакво смятане на плаваща запетая на различните JVM, слага се на class,interface и методи.\nx/0 и x%0 хвърлят грешка, второто връща остатъка от деленето.\n+- са с предимство само пред =\nсмяна на знака на по-малко от int го разширява и изисква каст ако се пеиравнява към същото.\nx++ и x+=1 не променят оператора на int, запазва се оригинала. Към плаващата запетая се добавя единица.\n+ от ляво-надясно събира цифри докато не срещне буква, след буквата добавя операторите като String. Когато събир5а само цифри + + + е възможно.\n\nRelational < <= > >= По-важни само от =. Сравнява числа и връща boolean, затова и a<b<c е (true)<c което е грешка.\n\nEquality == != По-маловажни от Relational, но по-важни от Assignment. Сравняване на примитиви сравнява тяхната стойност, сравнява boolean с boolean или число с число, затова и a==b==c дава грешка (true)==1. Сравняване на референции дали сочат към един обект, може да срванява само тези референции които могът да се кастват една към друга, тоест от един тип. От ляво-надясно при вярно първо условие може дане се проверяват другите условия.\n\nequals - сравнява стойностите на обекти, когато е имплементиран от класът, ако не е тогава се сравнява дали референциите сочът към един обект. Всички обгръщащи класове имат имплементиран equals и  hashCode.\n\n^ само единия оператор е true\n~ NOT\nCompound assignment подобно на инкрементирането b3=b3|b1&b2 е b3|=b1&b2\n&& e с предимство пред || при групирането. Когато първото условие отговаря второто дори не се проверява, от ляво-надясно.\n\n(a?b?c?d:e:f:g) е равно на (a?(b?(c?d:e):f):g)\n\ninstanceof сравнява само тези които могат да се кастват един към друг, от един тип.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451773531315,
                "article": {
                    "title": "Flow",
                    "header": null,
                    "content": "if(){}else{}\nКогато няма блок, else се отнася за най-близкото if.\nSwitch приема за стойност енумератор или int и по-малко.За стойност на case може да служи само константа (final примитив, референцията не е константа) уникални са.\n\nwhile()\ndo{}while()\nfor(;;)\nfor(:) Подобрен цикъл оценява колекцията веднъж, не променя стойностите и не може да я променя.\n\nLabel : {} може да повтаря имената на полетата. главно за контрол на loop.\nbreak,continue,return, throw за loop.\n\nThrowable супер-класът на Exception (RuntimeException) и Error\n\ntry{}catch(Exception e){}finally{} може да има само finally, ако има finally то е последно и се изпълнява винаги, може да има няколко catch по-малка към по-голяма грешка задължително (само един се задейства), може да има вътрешни блокове. Когато в catch е деклариран метод които не хваща конкретната грешка, я пропуска от блока.\n\nthrows и в метода throw еднакъв тип.\n\nassert false:\"Error\"; така се задава със специфична грешка, пуска се с -ea във VM arguments. Това хвърля AssertionError() която е Error.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451773622219,
                        "article": {
                            "title": "Selection",
                            "header": null,
                            "content": "boolean b=false;\nif(b=true){} едновременно задава и връща стойност.\nКогато няма блок, else се отнася за най-близкото if\nif(true)\n\tif(true);\n\telse;\nif(){}else if(){}else if(){}else{} - започва от първото и изпълнява първото което е true или последното else.\n\nSwitch приема за стойност енумератор или int и по-малко.\nint i1=3;\nswitch(i1){\n\tcase 1:case 3:case 5:case 7:case 9: System.out.println(\"even\"); break;\n\tdefault: System.out.println(\"odd\");\n}\nЗа стойност на case може да служи само константа (final примитив, референцията не е константа) уникални са, когато някои от случаите съвпадне изпълнява и тези след него, освен ако няма break. default се изпълнява ако не съвпадне случай, може да е на различно място в кода. Може да няма case,default или изобщо нищо. Може да има вътрешен switch. при ползване на енумератор в case се слага само стойността (А) не (Тип.А)",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451773708760,
                        "article": {
                            "title": "Iteration",
                            "header": null,
                            "content": "boolean b=true;\nwhile(b) System.out.println(b=false);\ndo{ System.out.println(\"Once\"); }while(b);\n\nfor(int i=1,k=2;i<1;); декларира две променливи.\nint i,k;\nfor(i=1,k=2,System.out.println(\"ha\");i<1;); инициализира променливи и принтира.\nfor(int i=0;i<3;System.out.println(i)){i++;} инициализира, проверява, изпълнява блока и принтира(123).\nВъзможни for(;;) for(;true;) безкрайни.\nint[] array={1,2,3,4,5,6};\nfor(double l:array);\nfor(Number l:array);\nПодобрен цикъл оценява колекцията веднъж, не променя стойностите и не може да я променя.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451773790753,
                        "article": {
                            "title": "Transfer",
                            "header": null,
                            "content": "Label : {} имената може да повтарят тези на полетата, може да има две декларации една след друга, със или без блок.\nbreak след него не може да се декларира нищо, освен ако не е в каквото и да е условие. Ползва се с надпис out : for(;;){for(;;){break out;}}\ncontinue пропуска ред. когато има надпис от вътрешен loop към външен, с continie се прескачат всички останали итерации на вътрешния next: for(int i=0;i<3;i++){for(;;){continue next;}}\nreturn във void след него не може да се декларира нищо, ако има каквото и да е условие може.\nthrow в метод които връща може и без return.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451773829888,
                        "article": {
                            "title": "Exception types",
                            "header": null,
                            "content": "Throwable е супер-клсът на всички Exception, съдържа методите getMessage() и printStackTrace()\n\nException хвърля проверени грешки, задължително се улавят в кода. Под-класът RuntimeException хвърля непроверени грешки, пропуски в програмата.\nError хвърля непроверени грешки, нещо липсва или не може да се инициализира.\n\nclass MException extends Exception {\n\tMException(String message){\n\t\tsuper(\"MException \"+message);\n\t}\n}\n\nUnchecked \nArrayIndexOutOfBoundsException\t\nClassCastException \nIllegalArgumentException \nIllegalStateException \nNullPointerException \nNumberFormatException \nAssertionError \nExceptionInInitializerError \nStackOverflowError \nNoClassDefFoundError \n\nChecked \nException \nIOException \nFileNotFoundException \nParseException \nClassNotFoundException \nCloneNotSupportedException \nInstantiationException \nInterruptedException\t\nNoSuchMethodException\t\nNoSuchFieldException",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451773883585,
                        "article": {
                            "title": "Excepion handling",
                            "header": null,
                            "content": "try{}catch(Exception e){}finally{} може да има само finally, ако има finally то е последно и се изпълнява винаги, може да има няколко catch по-малка към по-голяма грешка задължително (само един се задейства), може да има вътрешни блокове. Когато в catch е деклариран метод които не хваща конкретната грешка, я пропуска от блока.\n\nvoid method() throws Exception {} метод хвърля грешка. може да хвърли и непроверена грешка. Когато са няколко са разделени със запетая.\nthrow new Exception(\"Mesagge\"); при определено условие хвърли грешка със съобщение.\nthrow и throws трябва да съвпадат или да са от един тип.\nМетод които overrid-ва throw може да не декларира нищо, или същото като оригинала, но не може да слага други грешки или по-голяма грешка.\n\nРеференция може да се ползва в throw но само ако е обект (не null).\nКогато се хвърли грешка в catch finally се изпълнява но не и кода след него.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451774004747,
                        "article": {
                            "title": "Assertions",
                            "header": null,
                            "content": "Проверки за надеждност на програмата.\nassert false:\"Error\"; така се задава със специфична грешка, пуска се с -ea във VM arguments. Това хвърля AssertionError() която е Error.\nНа мястото на съобщението може да се извика метод,но не трябва да е void.\n\nпреди jvm 1.4 не е било ключова дума, компилиране на стар код javac -source 1.3 Name.java\njava -ea package.Main - задейства всичко което се ползва, -esa и системните\njava -ea:package... package.Main - задейства пакет и неговите под-пакети\njava -ea:package.Main package.Main - задейства само един клас\njava -ea:package.Main -еа:package1.Main1 package.Main - задейства два класа",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451935454927,
                "article": {
                    "title": "Object",
                    "header": null,
                    "content": "Типът на референцията определя кое поле ще се извика и кои статичен метод, но реалния обект определя коя имплементация на метод ще се използва.\nПри override може да се ползва под-клас, тои е супер-клас.\nПолетата не може да се overrid-ват, достатъчно е само името да е еднакво и те крият тези в супер-класът.\nКонструктор може да извика друг конструктор с this(parameter) или super(parameter), като това трябва да е първи ред.\ninterface Name {public void method();} методите са абстрактни и public и нямат собствена имплементация (в никакъв случай не са static нужна е имплементация).\nМасива е обект, Object[] може да приеме всички масиви които съдържат референции, но не и тези които са съставени от примитиви.\nПри трансформации референция-примитив и обратното, първо е обгръщащия обект, после е разширяването.\n\noverloading - методи с еднакво име и различни параметри или различен ред на параметрите (подпис). Типът няма значение.\n\nИзбор на overloaded метод по параметрите му:\nПърво търси точно съвпадение на параметрите.\nВторо трансформира примитив в обект или обратното.\nТрето проверява дали параметрите не могат да се предадът на vararg.\n\nПримитива се каства към примитив и референцията към референция\n\nКогато един клас е инстанция на под-клас е инстанция и на всички негови супер-класове също.\n\nПолиморфизма е когато референция може да достваи различни обекти от един тип по време на изпълнение.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451935557923,
                        "article": {
                            "title": "Inheritance",
                            "header": null,
                            "content": "Наследяването (extends) изключва private,overriden и hidden.\n\nпод-класът IS супер-класът.\nклас HAS референция към друг клас.\n\nSuper s=new Sub(); референцията е от типът на супер-класът и с нея може да се ползват само методите на супер-класът, но реално си остава под-клас.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451935628122,
                        "article": {
                            "title": "Overriding",
                            "header": null,
                            "content": "Тези правила се отнасят и за интерфейсите.\nИмето, типът и параметрите са еднакви. Освен final което може да бъде прибавено към метода или параметрите.\nТипът може да е под-клас той е супер-клас. Не за примитиви.\nВидимостта може да е по-голяма.\nМоже да хвърля всичко, част или нищо, но не може да декларира нови (освен RuntimeException). Може да декларира под-клас той е супер-клас.\n\nСтатичния метод е част от класът и не може да се overrid-не в под-клас, но може да се скрие с друг статичен метод.\nОригиналния метод може да се извика със super().\n\nA a=new B(); Супер референция към под-клас обект, по време на изпълнение се задействат имплементациите на под-класът, не на супер-класът.\n\nИнстантен метод не може да overrid-не статичен и обратното.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451935735867,
                        "article": {
                            "title": "Hiding",
                            "header": null,
                            "content": "Полетата не може да се overrid-ват, достатъчно е само името да е еднакво и те крият тези в супер-класът. \nТипът на използваната референция определя дали полета на супер-класът или под-класът ще се извикат.\n\nПри статични методи типът на използваната референция определя кои метод ще се ползва, не обекта.\n\nthis може да се предаде като параметър name(this) или да се създаде референция X x=this, super не.\nsupr дава достъп към непосредствения супер-клас, за по-горен клас не може да се достъпи метод, само полета чрез референцията която се каства към желания супер-супер-клас.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451935790653,
                        "article": {
                            "title": "Chaining constructor",
                            "header": null,
                            "content": "Конструктор може да извика друг конструктор с this(parameter) или super(parameter), като това трябва да е първи ред, също така ако са навързани няколко конструктора изпълнението на останалия код в конструкторите е в обратен ред. Първо се създава обекта от Object после се инициализира състоянието му в обратен ред.\nКогато в супер-класът няма конструктор по-подразбиране е задължително в под-класът да се извика super() с подходящите параметри, когато има такъв конструктор, той може да се извика и автоматично.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451935849924,
                        "article": {
                            "title": "Interfaces",
                            "header": null,
                            "content": "interface Name {public void method();} методите са абстрактни и public и нямат собствена имплементация (в никакъв случай не са static нужна е имплементация). Може да extends-ва други интерфейси, както и да е с празно тяло.\ninterface A extends B,C интерфейс имплементира други интерфейси, може да има еднакви методи.\nclass X implements A,B клас имплементира няколко интерфейса\n\nПолетата са public static final по-подразбиране. Може да има засенчване на константи от различни интерфейси, тогава определени константи може да се достъпят с пълното им име.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451935900109,
                        "article": {
                            "title": "Arrays",
                            "header": null,
                            "content": "Масива е обект, Object[] може да приеме всички масиви които съдържат референции, но не и тези които са съставени от примитиви.\nSuper[] s=new Sub[5]; това е възможно, полиморфизма при масивите го позволява, но в един масив може да има само еднородни елементи, тоест може да има само Sub обекти, прибавянето на Super се компилира, но хвърля runtime.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451935979399,
                        "article": {
                            "title": "Conversions",
                            "header": null,
                            "content": "Примитивите се разширяват автоматично, но се се намаляват с cast. Референцийте се разширяват автоматично към съпер-клас, но се намаляват към под-клас с cast.\nКогато се разширяват към обгръщащ обект, първо се създава обгръщащия обект, после той може да се разшири и към супер-клас. int-Integer-Number\nКогато се намалява към примитеив, първо се отделя примитива съответстващ на обгръщащия обект, после се разширява примитива ако е необходимо. Integer-int-long\nПърво е обгръщащия обект, после е разширяването.\nИнтерфейс може да служи за тип на масив, класовете които го имплементират са елементите на масива. Interface[] i=new InterfaceImpl[10];\n\nРеференция приема стойност:\nПриемната референция е супер-клас или интерфеис на източника.\nКогато приемната референция е Object може да приеме всияка референция.\nПриемната референция е супер-интерфейс на интерфейс interface extends interface\nПриемната референция е масив към които източника може да се разшири.\n\nИзбор на overloaded метод по параметрите му:\nПърво търси точно съвпадение на параметрите.\nВторо трансформира примитив в обект или обратното.\nТрето проверява дали параметрите не могат да се предадът на vararg.\n(при повече от 1 параметър и примитив и обгръщаш клас не може да избере метод)\n\ncast обикновено се ползва за намаляване, може да се сложи и при разширяване. Може да има и обгръщащ обект. Примитива се каства към примитив и референцията към референция, може да има и втори каст който ползва обгръщаш обект.\ninstanceof лявата част е под-тип на дясната и може да се каства безопасно. оценява се реалния обект а не референцията. \nКогато един клас е инстанция на под-клас е инстанция и на всички негови супер-класове също.\nСравнение с == при стойности -128 до 127 е като да се сравняват с equals, освен ако обекта не е създаден с new\nАвтоматичното създаване на обгръщаш обект е както с new",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936019787,
                        "article": {
                            "title": "Polymorphism",
                            "header": null,
                            "content": "Полиморфизма е когато референция може да достваи различни обекти от един тип по време на изпълнение. Може да се осъществи с наследяване и интерфейс или ако няма очевидна Е връзка агрегат и интерфейс. \n\nEncapsulation имплементацията е скрита от клиента, вижда се само контролния метод.\nCohasion класът има точно определена цел и методите са добре дефинирани и свързани, целта е висока кохезия.\nCoupling има договореност как взаимодействат обектите (interface), взаимодействията трябва да са намелени, това се нарича lose coupling.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451936132176,
                "article": {
                    "title": "Nested types",
                    "header": null,
                    "content": "Декларирани в класът emum и interface са статични по-подразбиране. Статични вътрешни класове могат да бъдат декларирани само във външния клас или в други статични members.\nВътрешен статичен клас може да има инстантни полета и методи които може да се свързват по между си, но могат да се свързват само със статични външни.\nOuter.Inner.Member m=new Outer().new Inner().new Member(); за да се създаде инстанция на вътрешен клас се създават инстанции и на външните класове.\nВътрешните инстантни класове не могат да имат статични members освен final защото те са константи.\nВътрешния клас може да има полета и методи със същите имена като външния, понеже няма наследяване не е нито override нито overload, просто ги крият, достъпни са с Outer.this.field\nЛокален вътрешен клас (деиклариран в блок) може да ползва само final константи и не може да има декларирана достъпност, когато блока е инстантен ползва всичко от външния клас, когато е статичен само статичните външни. Чрез интерфейс локален клас може да бъде върнат с return и ползван с метода на интерфейса.\nАнонимен клас new Name(){ bublic void override(){} }; може да се ползва само като Overrid-ва или имплементира метод с нова имплементация.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451936280472,
                        "article": {
                            "title": "Static members",
                            "header": null,
                            "content": "static Class,interface и enum са статични и могат да бъдат декларирани само във външния клас или в други статични members.\nСтатични виждат само статични.\nкогато Member е private тази референция Outher.Inner.Member ref=null; може да се създаде вътре в Outher класът, от външен клас обаче не може.\nМоже да се направи статичен импорт на вътрешен клас.\nВътрешен статичен клас може да има инстантни полета и методи които може да се свързват по между си, но могат да се свързват само със статични външни.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936348427,
                        "article": {
                            "title": "Non static members",
                            "header": null,
                            "content": "Outer.Inner.Member m=new Outer().new Inner().new Member(); за да се създаде инстанция на вътрешен клас се създават инстанции и на външните класове. Много вътрешни класове могат да имат една външна инстанция.\nВътрешните инстантни класове не могат да имат статични members освен final защото те са константи.\nВътрешните статични класове могат да имат и статични и инстантни members.\nВътрешните класове може да са public,protected,default и private.\nOuter.this.new Inner() от вътрешния клас създава инстанция, специално използване на this може и просто да се напише new Inner()\nВътрешния клас може да има полета и методи със същите имена като външния, понеже няма наследяване не е нито override нито overload, просто ги крият, достъпни са с Outer.this.field",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936412139,
                        "article": {
                            "title": "Local members",
                            "header": null,
                            "content": "Деклариране на клас в блок (метод,конструктор или инициализиращ) включително и статични.\nОт блока може да ползва само final константи и не може да има декларирана достъпност, когато блока е инстантен ползва всичко от външния клас, когато е статичен само статичните външни.\nЛокален клас не може да е статичен и не може да има статични методи.\nСкрита от вътрешния клас променлива във външния статичен блок не може да бъде достъпена. Няма специалното .this.\nПодклас които е локален може да има в суперкласът променливи които крият тези на външния клас.\nЧрез интерфейс локален клас може да бъде върнат с return и ползван с метода на интерфейса.\nможе да се декларира abstract",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936458101,
                        "article": {
                            "title": "Anonymous members",
                            "header": null,
                            "content": "Деклариране и създаване на инстанция едновременно.\nclass AExtend {\n\tpublic void one(){}\n}\nnew AExtend (){\n\tint i=0;\n\tpublic void one(){\n\t\tSystem.out.println(\"Extended \"+i);\n\t}\n}.one();\n\ninterface IImplement {\n\tpublic void one();\n}\nreturn new IImplement() {\n\tpublic void one(){\n\t\tSystem.out.println(\"Implemented \"+z);\n\t}\n};\nМоже да се ползва имплементация само ако класът наследява или имплементира, само така може да се декларира метод които overrid-ва и да се извика новата имплементация.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451936569580,
                "article": {
                    "title": "Lifetime",
                    "header": null,
                    "content": "Докато има референция към обект достъпна от нишка ресурса не може да бъде освободен автоматично.\nЗануляването на референция е крайно средство за подтикване освобождаването на ресурс.\noverrid-ването на метода finalize дава информация кога един ресурс е освободен.\nСъздаване на обект без деклариране на референция към него го прави готов за освобождаване веднага след създаването.\nметода public/protected void finalize() throws Throwable може да се извика само веднъж.\nОбект които няма референция може да бъде унищожен преди да се изпълни негов метод.\n\nSystem.gc();\nRuntime environment=Runtime.getRuntime(); методи за информация за паметта.\n\nИнстантно поле може да ползва декларираните преди него инстантни полета и всички статични. Инстантно поле може да използва this.nextFieald; за да достъпи поле декларирано след него, но то ще е със стойност по подразбиране.\nСтойност може да се зададе на две полета едновременно int x=y=1;\n\nКогато се ползва метод или блок за да се инициализира поле, тои може да ползва следващо поле без this.\n\nПри инициализиране на полета с метод RuntimeException може да нямат try-catch блок, докато Exception задължително имат.\n\nПолетата и блоковете се изпълняват в реда в които се декларират, първо статичните после инстантните.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451936638996,
                        "article": {
                            "title": "Environment",
                            "header": null,
                            "content": "System.gc();\nSystem.runFinalization();\n\nRuntime environment=Runtime.getRuntime();\nSystem.out.println(environment.freeMemory());\nSystem.out.println(environment.totalMemory());",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936687241,
                        "article": {
                            "title": "Finalization",
                            "header": null,
                            "content": "Преди унищожаването на обект се изпълнява finalize така може да се освободят други ресурси.\nНяма гаранция че този метод ще бъде извикан, на него не трябва да се разчита.\nЕнумератора няма такъв метод.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936735361,
                        "article": {
                            "title": "Fyld initializer",
                            "header": null,
                            "content": "Инстантно поле може да ползва декларираните преди него инстантни полета и всички статични, те се инициализират преди инстантните.\nИнстантно поле може да използва this.nextFieald; за да достъпи поле декларирано след него, но то ще е със стойност по подразбиране.\nСтойност може да се зададе на две полета едновременно int x=y=1; дори когато \"y\" е след \"x\".\n\nКогато се ползва метод или блок за да се инициализира поле, тои може да ползва следващо поле без this.\n\nПри инициализиране на полета с метод RuntimeException може да нямат try-catch блок, докато Exception задължително имат.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936808866,
                        "article": {
                            "title": "Static initializer",
                            "header": null,
                            "content": "Статичния блок се изпалнява веднъж, когато класът се зареди.\nstatic int i=0;\nstatic {\n\ti=1;\n}\nСтатичните полета и блокове се изпълняват в реда в които се декларират.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936863589,
                        "article": {
                            "title": "Instance initializer",
                            "header": null,
                            "content": "Блока {} изпълнява функции като конструктор, изпълнява се всеки път когато има инстанция.\nПолзва се за инициализация на полета и в анонимни класове вместо конструктор.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451936967769,
                        "article": {
                            "title": "Instance init order",
                            "header": null,
                            "content": "Super static variable зависи от реда на деклариране\nSuper static block\nSub static variable\nSub static block\nSuper instance variable зависи от реда на деклариране\nSuper instance block\nSuper constructor\nSub instance variable\nSub instance block\nSub constructor\n\nПри overrid-ване на метод, се ползва версията на реалния обект.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451937274786,
                "article": {
                    "title": "Fundamental classes",
                    "header": null,
                    "content": "Обгръщащи класове Void,Boolean,Character,Number,String...\nВсички обекти наследяват Object.\n\nLong.valueOf(1) този метод е по-бърз от new ползва се когато не се изисква нова инстанция. \nLong.toString(1) примитива се предава като параметър на метода, за да се получи String.\nВсички обгръщащи класове имат typeValue() които връща различни примитиви.\nВсички обгръщащи класове имплементират equals за сравняване на стоиностите им.\nByte.parseByte(\"1\") примитив от String\n\nРеференцията към дума може да се променя но не и самата дума. Когато втора референция към дума я променя, първата запазва оригинала.\nString.format(Locale.CANADA,\"%.2f\", Math.PI)\n\"1bb2\".replaceAll(\"\\\\d\", \"a\") замества цифрите\nString[] array=\"aA1bB2cC3\".split(\"\\\\d\");\n\nStringBuffer сунхронизиран final позволява промяна на масива от знаци, начален капацитет 16.\nCharSequence c=\"abc\"; c.subSequence(0,2); ползва String като масив от знаци.\nЗа да се сравняват се ползва String, sb.toString()",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451937516718,
                        "article": {
                            "title": "Wrapper classes",
                            "header": null,
                            "content": "Всички примитиви имат обгръщащи класове, техните стойноси са final тоест не може да се променят. String не е обгръщащ клас.\nКонструкторите на обгръщаш клас приемат примитива или String които съдържа примитива. Освен Character които приема само примитива.\nБоксването е равносилно на създаване на обгръщаш клас с new.\nLong.valueOf(1) този метод е по-бърз от new ползва се когато не се изисква нова инстанция. Също така този метод приема и String които съдържа примитива.\nobject.toString() връща представяне на обекта като String. \nLong.toString(1) примитива се предава като параметър на метода, за да се получи String.\nВсички обгръщащи класове имат typeValue() които връща различни примитиви.\nВсички обгръщащи класове имплементират equals за сравняване на стоиностите им.\n\nNumeruc - Byte,Short,Integer,Long,Float,Double \nByte.parseByte(\"1\") примитив от String\n\nCharacter.isDigit(c) проверява дали е цифра, има и още подобни методи на този.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451937600042,
                        "article": {
                            "title": "String",
                            "header": null,
                            "content": "не могат да се променят, но една референция може да се замени с друга.\nКонстантите (\"word\") се съхраняват в отделен басейн и всички референции сочат към един обект, обаче ако при съставянето на думата има променлива или се ползва new са различни обекти.\nКонструкторите приемат примитивни масиви на byte и char както и StrinBuilder.\n\n\"string\".getChars(from, to-Inclusive, charArray, begin-charArray); пълни масив от дума\n\nДумите могат да се сравняват защото са съставени от char които имат стойност (97).\n\nРеференцията към дума може да се променя и с +\"х\" или с concat метода.\n\n\"select * from x where y=?\".replace(\"x\", \"table\").replace('?', '3') приема char и String\n\"012345\".substring(0, 3) 012 до 3 но то не е включено.\n\nString.format(Locale.CANADA,\"%.2f\", Math.PI)\n\nPattern.matches(\"\\\\d+\", \"12\") \n\"12\".matches(\"\\\\d+\") проверка за цифра\n\nPattern.compile(\"\\\\d\").matcher(\"1bb2\").replaceAll(\"a\") \n\"1bb2\".replaceAll(\"\\\\d\", \"a\") замества цифрите\n\nString[] array=\"aA1bB2cC3\".split(\"\\\\d\");\n\nlastIndexOf(\"а\",10); търси отзад напред от 10 знак.\nКогато втора референция към дума я променя, първата запазва оригинала.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451937641836,
                        "article": {
                            "title": "String buffer",
                            "header": null,
                            "content": "Сунхронизиран final позволява промяна на масива от знаци, начален капацитет 16.\nНяма имплементация на equals когато се сравняват връща false\nCharSequence c=\"abc\"; c.subSequence(0,2); ползва String като масив от знаци.\nЗа да се сравняват се ползва String, sb.toString()\nappend(string,from,toNotIncuded)\noffset за масива които ще се добавя \"от\" знак.\ninsert знака идва на позицията, не след нея.\ndeleteCharAt изтрива знака на посочената позиция\nreverse метод\nsb.setLength(5); задава дължина като премахва знаците след посочената позиция.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451937677425,
                "article": {
                    "title": "Files",
                    "header": null,
                    "content": "Път до файл или директория.\nFile.separator \"/\"\nnew File(File.separator+\"root\",\"wget-log\")\nnew File(File.separator+\"root\"+File.separator+\"Temp\").list();\n\nString[] filtered=new File(File.separator+\"root\"+File.separator+\"Temp\").list(new FilenameFilter(){\n\tpublic boolean accept(File dir, String name) {\n\t\treturn name.endsWith(\"msb\")?true:false;\n\t}\n});\n\nOutputStream os=new FileOutputStream(X);\nDataOutputStream ds=new DataOutputStream(os);\nds.writeUTF(\"Малин\");\nds.flush();\nds.close();\n\nInputStream is=new FileInputStream(A);\nint i=0;\nwhile((i=is.read())!=-1){\n\tSystem.out.println(i);\n}\n\nPrintWriter direct=new PrintWriter(E); директно записва във фаил.\ndirect.print(\"Боянов\");\n\nOutputStream is=new FileOutputStream(A);\nObjectOutputStream o=new ObjectOutputStream(is);\no.writeObject(\"Hello\");\no.flush();\no.close();",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451937856269,
                        "article": {
                            "title": "File",
                            "header": null,
                            "content": "Път до файл или директория.\nFile.separator \"/\"\nFile file=new File(File.separator+\"root\",\"wget-log\") път до директория, име на файл\nequals е имплементирно и сравнява двата пътя.\nfile.exists() \nnew File(\"\").getAbsolutePath() /root/workspace/SegmentedJava\nfile.length() големина на файла\ndir.listFiles(); масив от файловете в директория\ndir.list(); масив от имената на файловете в директория\n\nString[] filtered=new File(File.separator+\"root\"+File.separator+\"Temp\").list(new FilenameFilter(){\n\tpublic boolean accept(File dir, String name) {\n\t\treturn name.endsWith(\"msb\")?true:false;\n\t}\n});\n\nname.createNewFile()\nname.renameTo(new File(File.separator+\"root\"+File.separator+\"Temp\"+File.separator+\"x.x\"));\nname.delete(); ако еползвах стрим на пътя той трябва да е затворен за да работи.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451937917796,
                        "article": {
                            "title": "Byte streams",
                            "header": null,
                            "content": "InputStream OutputStream\nЗапазване на UTF-8 знаци.\nFile A=new File(File.separator+\"root\"+File.separator+\"Temp\"+File.separator+\"A.msb\");\n\nOutputStream os=new FileOutputStream(X);\nDataOutputStream ds=new DataOutputStream(os);\nds.writeUTF(\"Малин\");\nds.flush();\nds.close();\n\nInputStream is=new FileInputStream(A);\nint i=0;\nwhile((i=is.read())!=-1){\n\tSystem.out.println(i);\n}\n\nbyte[] array=new byte[Long.valueOf(A.length()).intValue()];\nis.read(array);\nread чете един знак, или пълни масив.\n\nФилтри:\nBufferedInputStream прочита всички знаци наведнъж, след него източника е празен.\nDataInputStream чете и примитиви, както и ред\n\nInputStream is=new FileInputStream(X);\nDataInputStream di=new DataInputStream(is);\ndi.readUTF();",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451937988465,
                        "article": {
                            "title": "Character streams",
                            "header": null,
                            "content": "Reader Writer\nFile C=new File(File.separator+\"root\"+File.separator+\"Temp\"+File.separator+\"C.chr\");\n\nOutputStream os=new FileOutputStream(C);\nWriter w=new OutputStreamWriter(os,\"UTF-8\"); може да зададе кодиране на знаците\nw.write(\"aha\");\nw.append('1');\nw.flush();\nw.close();\n\n//PrintWriter p=new PrintWriter(w); използва Writer, които може да зададе кодиране.\nPrintWriter p=new PrintWriter(os); използва OutputStream с кодиране по-подразбиране.\np.print(\"Малин\"); може да записва примитиви, думи и обекти.\n\nWriter fw=new FileWriter(D); директен достъп до файл, създава ако няма.\nPrintWriter pf=new PrintWriter(fw);\npf.print(3.14);\n\nPrintWriter direct=new PrintWriter(E); директно записва във фаил.\ndirect.print(\"Боянов\");\n\nWriter fw=new FileWriter(F);\nWriter br=new BufferedWriter(fw); използване на буфер.\nPrintWriter buffered=new PrintWriter(br);\n\nInputStream is=new FileInputStream(C);\nReader r=new InputStreamReader(is); може да се зададе декодиране.\nr.read()\n\nFileReader fr=new FileReader(E);\nfr.read(); директно чете от файл, но само по един знак.\n\nInputStream isb=new FileInputStream(F);\nInputStreamReader rb=new InputStreamReader(isb,\"UTF-8\");\nBufferedReader br=new BufferedReader(rb);\nbr.readLine(); // console didn't support UTF-8\nchar се записва и чете като int\nПри достигане края на знаците връща null",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451938035660,
                        "article": {
                            "title": "Object stream",
                            "header": null,
                            "content": "class Ser implements Serializable {...}\n\nFile A=new File(File.separator+\"root\"+File.separator+\"Temp\"+File.separator+\"A.dat\");\n\nOutputStream is=new FileOutputStream(A);\nObjectOutputStream o=new ObjectOutputStream(is);\no.writeObject(\"Hello\");\no.writeObject(new int[]{1,2,3});\no.writeObject(new Ser(\"Malin\"));\no.flush();\no.close();\n\nclass SerCase implements Serializable{\nprivate NonSer non;\nprivate void writeObject(ObjectOutputStream os){\n\ttry {\n\t\tos.defaultWriteObject();\n\t\tos.writeInt(3);\n\t} catch (IOException e) {\n\t\te.printStackTrace();\n\t}\n}\nprivate void readObject(ObjectInputStream is){\n\ttry {\n\t\tis.defaultReadObject();\n\t\tnon=new NonSer(is.readInt());\n\t} catch (IOException e) {\n\t\te.printStackTrace();\n\t} catch (ClassNotFoundException e) {\n\t\te.printStackTrace();\n\t}\n}\nЕдиния метод се задеиства при записването, другия при четенето.\n\nПри изграждането на обекта не се ползва конструктора, когато е serializable, но ако суперклас не е сериализиран, може да има нарушение на състоянието на записания обект.\n\navailable()!=0 дали има още обекти за четене.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451938089692,
                "article": {
                    "title": "Localization",
                    "header": null,
                    "content": "Locale l=new Locale(\"en\",\"GB\"); език,държава.\n\nCalendar c=Calendar.getInstance(Locale.CANADA);\nc.add(Calendar.DAY_OF_WEEK, 1); прибавя, ако надхвърли започва от начало, като добавя към \n\nDateFormat df=DateFormat.getDateInstance(DateFormat.SHORT, Locale.CANADA);\nString s=df.format(new Date()); 06/03/14\n\nPattern p=Pattern.compile(\"\\\\d\");\nMatcher m=p.matcher(\"1\");\nm.matches(); true\n\nPattern.matches(\"\\\\d\", \"2\"); true\n\nString[] strings=\"a1b2c\".split(\"\\\\d\"); a b c\n\nPattern pf=Pattern.compile(\"\\\\d\");\nMatcher mf=pf.matcher(\"1.2.3.4.5\");\nwhile(mf.find())\n\tmf.group(); 12345\n\nScanner scanner=new Scanner(\"123 3.14 abc true\");\nwhile(scanner.hasNext()){ по подразбиране празен знак разделя\n\tif(scanner.hasNextInt()){\n\t\tscanner.nextInt();\n\t}else{\n\t\tscanner.next(); задължителен е за да мести напред\n\t}\n}\n\nString s=String.format(Locale.CANADA,\"%tD\", new Date()); Locale за запетаята",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451938262095,
                        "article": {
                            "title": "Locale",
                            "header": null,
                            "content": "Locale l=new Locale(\"en\",\"GB\"); език,държава.\nen_US - default\nUnited Kingdom - country\nEnglish - language\nEnglish (United Kingdom) - name\n\nCalendar c=Calendar.getInstance(Locale.CANADA);\nc.get(Calendar.MONTH) връща числото на месеца но започва от нула.\nc.add(Calendar.DAY_OF_WEEK, 1); прибавя, ако надхвърли започва от начало, като добавя към по голямото.\nc.compareTo(Calendar.getInstance()) когато \"с\" е по-голямо е 1\n\nDateFormat df=DateFormat.getDateInstance(DateFormat.SHORT, Locale.CANADA);\nString s=df.format(new Date());\nDate d=df.parse(\"06/03/14\");\ngetTimeInstance\ngetDateTimeInstance\n\nNumberFormat n=NumberFormat.getNumberInstance(new Locale(\"bg\",\"BG\"));\nn.setMaximumFractionDigits(2);\nString number=n.format(231.2222d); 231,22\nNumber nu=n.parse(\"22,5333\"); 22.5333\n\nNumberFormat c=NumberFormat.getCurrencyInstance(new Locale(\"bg\",\"BG\"));\nc.getCurrency(); BGN\nc.format(231.2222d); лв.231,22\nNumber nu=c.parse(\"лв.12,5666\"); 12.5666\n\nparse работи само когато думата е в правилния зададен формат.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451938318776,
                        "article": {
                            "title": "String pattern",
                            "header": null,
                            "content": "match(\"b\", \"absdbe\"); търси знак\nmatch(\"ab\", \"absdbe\"); два знака\nmatch(\"\\\\t\", \"1\t2\"); таб\nmatch(\"[^bc]\", \"abca\"); изключва знаците от думата независимо от реда\nmatch(\"[a-z]\", \"aBCe\"); интервал последователността е азбучен ред\nmatch(\"[a-z&&[c]]\", \"abcde\"); и двете условия\nmatch(\"[a-z&&[^b]]\", \"abc\"); от a до z без b\nmatch(\"\\\\d\", \"a1b\"); цифра\nmatch(\"\\\\D\", \"1a2\"); не е цифра\nmatch(\"\\\\w\", \"1 2\"); празен знак\nmatch(\":$\", \"1:2:3:\"); края е : ако не е не връща празен знак\nmatch(\"[aA]|[bB]\", \"acb\"); или\nmatch(\"\\\\d\\\\d?-\\\\d\\\\d?-\\\\d\\\\d\", \"1-3-14 01-01-14\"); нула или един път се среща\nmatch(\"b([b]*)\", \"ababba\"); нула или много пъти\nmatch(\"b+\", \"ababba\"); един или повече пъти\nmatch(\"1.+3\", \"512341234\"); един или повече каквито и да са знаци\nmatch(\"1.+?3\", \"512341234\"); модела се повтаря нула или един път\n\nPattern p=Pattern.compile(\"\\\\d\");\nMatcher m=p.matcher(\"1\");\nm.matches(); true\n\nPattern.matches(\"\\\\d\", \"2\"); true\n\nPattern ps=Pattern.compile(\"\\\\D\");\nString[] array=ps.split(\"1a2b3\"); 1 2 3\nString[] sub=ps.split(\"1a2b3\",2); 1 2b3\n\nString[] strings=\"a1b2c\".split(\"\\\\d\"); a b c\n\nPattern pf=Pattern.compile(\"\\\\d\");\nMatcher mf=pf.matcher(\"1.2.3.4.5\");\nwhile(mf.find())\n\tmf.group(); 12345\n\nmf.reset(); връща от началото\n\nStringBuffer sb=new StringBuffer();\nwhile(mf.find())\n\tmf.appendReplacement(sb, \"0\"); замества намереното с нули 0.0.0.0.0\n\nmf.reset();\nSystem.out.println(mf.replaceAll(\"1\")); замества всички съвпадения.\n\nScanner scanner=new Scanner(\"123 3.14 abc true\");\nscanner.useLocale(new Locale(\"en\",\"US\")); от това зависи запетаята на 3.14\nwhile(scanner.hasNext()){ по подразбиране празен знак разделя\n\tif(scanner.hasNextInt()){\n\t\tSystem.out.println(\"int \"+scanner.nextInt());\n\t}else if(scanner.hasNextDouble()){\n\t\tSystem.out.println(\"double \"+scanner.nextDouble());\n\t}else if(scanner.hasNextBoolean()){\n\t\tSystem.out.println(\"boolean \"+scanner.nextBoolean());\n\t}else{\n\t\tSystem.out.println(scanner.next()); задължителен е за да мести напред\n\t}\n}\n\n.useDelimiter(\"-\");\n.hasNext(\"\\\\d+\")\n\nза много редове:\n.findInLine(pattern); намира и връща думата\n.nextLine() ако не намери продължава напред",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451938351727,
                        "article": {
                            "title": "Format",
                            "header": null,
                            "content": "System.out.printf(\"|%-5d|%-5.2f|%-5s|%n\",16,3.145,\"Malin\");\nSystem.out.printf(\"%2$d %1$d %n\",1,2); размества аргументите\nSystem.out.printf(\"%b %.2b %2.3b %b %n\",false,123,\"hello\",null); приема всякакъв обект\nSystem.out.printf(\"%c %c %c %n\",(byte)120,(short)121,'z'); няма точност\nSystem.out.printf(\"%d %d %d %d %n\",(byte)1,(short)2,3,4l); няма точност\nSystem.out.printf(\"%.2f %n\",3.12345); точност 2 знака, ако е повече от ширината я разширява\nSystem.out.printf(Locale.CANADA,\"%tD %n\",new Date()); 03/31/14\n\n- текст в ляво\n5 широчина 5 знака, не може да е нула\n+ показва знака\n0 водещи нули\n( отрицателна стойност в скоби\n%% показва %\n%n нов ред\n\nStringBuilder sb=new StringBuilder();\nFormatter f=new Formatter(sb);\nf.format(\"%.2f\", 3.12345);\nf.flush();\nf.close();\nSystem.out.println(sb.toString());\n\nString s=String.format(Locale.CANADA,\"%tD\", new Date()); Locale за запетаята\nSystem.out.println(s);\n\n%.0f е възможна комбинация\n%3$d %d втория нама $ и взима първия аргумент",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451938418483,
                "article": {
                    "title": "Threads",
                    "header": null,
                    "content": "class FirstRun implements Runnable {public void run() {}}\nFirstRun firstRun = new FirstRun();\nThread t=new Thread(firstRun);\nt.start();\n\nnew Thread(){public void run(){}}.start();\n\nt.setDaemon(true); прекратява се заедно с main tread\n\npublic synchronized void setOne() синхронизиран метод.\n\nsynchronized(s){ синхронизира обект.\n\nNEW създадена но не е стартирана.\nRUNNABLE стартирана и не е изпълнен кода в run метода, start е асинхронен.\nTIMED_WAITING sleep(500); wait(500);\nTERMINATED метода run е изпълнен\n\nThread.yield(); пропуска ред.\n\nwait() освобождава заключалката върху обекта.\nnotify() дава сигнал само на една нишка.\nnotifyAll() дава сигнал на всички чакащи нишки за обект.",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451938527172,
                        "article": {
                            "title": "Thread creation",
                            "header": null,
                            "content": "class FirstRun implements Runnable {public void run() {}}\nFirstRun firstRun = new FirstRun();\nThread t=new Thread(firstRun,new Date().toString());\nt.start();\n\nnew Thread(){public void run(){}}.start();\n\nclass SelfRun extends Thread {public SelfRun(){start();} public void run(){}}\n\nThread t=new Thread(new FirstRun(){\n    public void run(){}\n});\nt.setDaemon(true); прекратява се заедно с main tread\nt.start();\n\nThread.currentThread().getName();\n\n.run() не създава нова нишка, но имплементира runable ако има такава.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451938604077,
                        "article": {
                            "title": "Synchronization",
                            "header": null,
                            "content": "public synchronized void setOne() синхронизиран метод, за да се ползва трябва да е освободена заключалката. Докато една нишка ползва метода друга нишка чака, когато има два синхронизирани метода те се заключват един друг, тоест докато се ползва единия другия чака за ключът.\n\npublic static synchronized void setThree() статичните методи ползват ключалката на класът за да синхронизират статичен метод, но не могат да заключът инстанциите на класът които заключват обекта, различни неща са.\n\nsynchronized(s){ синхронизира обект, нишките които искат да ползват обекта трябва да чакат за ключът. не може да се заключи примитив.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451938668659,
                        "article": {
                            "title": "Transitions",
                            "header": null,
                            "content": "NEW създадена но не е стартирана.\nRUNNABLE стартирана и не е изпълнен кода в run метода, start е асинхронен.\nTIMED_WAITING sleep(500); wait(500);\nTERMINATED метода run е изпълнен\n\nThread.yield(); пропуска ред, връща се в басейна с нишки и може да бъде извикана пак преди другите.\n\nwait() освобождава заключалката върху обекта, чака условие да се изпълни за да продължи. трябва да е в синхронизиран блок или метод.\nnotify() дава сигнал само на една нишка от чакащите за обект че условието е изпълнено.\nnotifyAll() дава сигнал на всички чакащи нишки за обект.\n\njoin() закачва към текущата нишка друга която да се изпълни веднага след нея.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451938757225,
                "article": {
                    "title": "Generics",
                    "header": null,
                    "content": "class EImpl<E> implements AllTypes<E> { конкретната имплементация също е generic\n\tprivate E e;\n\tpublic void setE(E e) {\n\t\tthis.e=e;\n\t}\n\tpublic E getE() {\n\t\treturn e;\n\t}\n}\n\nList<? super InstanceB> parent=new ArrayList<InstanceA>();\n//parent=C;\t// not super of InstanceB\n//parent.add(new InstanceA(1));\t// which super type of InstanceB is\n\t\t\nList<? extends InstanceB> child=new ArrayList<InstanceB>();\n//child=A;\t// didn't extends InstanceB\n//InstanceC oneC=child.get(0);\t// which specific type of InstanceB is\n\nclass Bound<E extends Comparable<E>> { типът не се знае но се знае че трябва да е Comarable\n\nstatic <E,K extends E> void superSub(E[] e,K k){} статичен е и може да ползва само своите параметри, не и тези на класът ако има декларирани такива.\n\nprivate static <E> String captureType(List<E> e){\n\treturn e.get(0).getClass().getSimpleName();\n}\nпри ползването на генеричния метод може да се определи типът на променливата.\n\nprivate static <E> Container<?> move(Container<? extends E> from, Container<? super E> to){\n\tto.setE(from.getE());\n\treturn to;\n}\nпозволява прехвърляне на информация от под-тип към супер-тип, които иначе не е възможно, симулация на наследяване.\n\nE[] a1=new E[3]; // error\nList<E>[] l5={}; // error\nList<String>[] l7={}; // error\nList<String>[] l8=new List<String>[3]; // error\nList<?>[] l2={};\nList<?>[] l3=new List<?>[]{};\nT[] newarray=(T[])Array.newInstance(array.getClass().getComponentType(), array.length);",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451938808111,
                        "article": {
                            "title": "Types",
                            "header": null,
                            "content": "class Universal<E> {\n\tpublic Universal(){} конструктора няма тип.\n\tprivate E e;\n\tpublic void setE(E e) {\n\t\tthis.e = e;\n\t}\n\tpublic E getE() {\n\t\treturn e;\n\t}\n}\nUniversal<String>() u=new Universal<String>(); задава тип на класът, има типове само при инстанцийте, статични методи или променливи не могат да ползват generic тип, защото няма инстанция която да го зададе.\n\ninterface AllTypes<E> {\n\tpublic void setE(E e);\n\tpublic E getE();\n}\n\nclass EImpl<E> implements AllTypes<E> { конкретната имплементация също е generic\n\tprivate E e;\n\tpublic void setE(E e) {\n\t\tthis.e=e;\n\t}\n\tpublic E getE() {\n\t\treturn e;\n\t}\n}\nEImpl<Integer> a=new EImpl<Integer>();\n\nclass StringImpl implements AllTypes<String>{ имплементацията не е generic\n\tprivate String s;\n\tpublic void setE(String s) {\n\t\tthis.s=s;\n\t}\n\tpublic String getE() {\n\t\treturn s;\n\t}\n}\nStringImpl s=new StringImpl(); типът е зададен в самата имплементация.\n\nclass SubUse<E> {}\nclass NonGeneric extends SubUse<String>{} подобно на implements.\n\ninterface Get<E> {}\nclass BaseList<E> {}\nclass Composite<E> extends BaseList<E> implements Get<E> {} не може с различни параметри",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451938883827,
                        "article": {
                            "title": "super extends",
                            "header": null,
                            "content": "List<TypeSuper> != List<TypeSub> основно ограничение.\nList, List<?>, List<? extends Object> може да ползва всеки тип.\nList<Type> = List предупреждение че не знае кои е типът\nList<? extends Type> != List<? super Type> вярно за всички освен Object\n\nПриравняване на един лист към друг е възможно с super/extends, но това не влияе на add/get\nList<? super InstanceB> parent=new ArrayList<InstanceA>();\nparent=A;\t// InstanceB or super\nparent=B;\n//parent=C;\t// not super of InstanceB\n//parent.add(new InstanceA(1));\t// which super type of InstanceB is\nparent.add(new InstanceB(2));\nparent.add(new InstanceC(3));\n\t\t\nList<? extends InstanceB> child=new ArrayList<InstanceB>();\n//child=A;\t// didn't extends InstanceB\nchild=B;\nchild=C;\t// InstanceB or extends\nInstanceA oneA=child.get(0);\nInstanceB oneB=child.get(0);\n//InstanceC oneC=child.get(0);\t// which specific type of InstanceB is\n\nclass Bound<E extends Comparable<E>> { типът не се знае но се знае че трябва да е Comarable\n\tprivate List<E> e;\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451938935036,
                        "article": {
                            "title": "Methods",
                            "header": null,
                            "content": "static <E,K extends E> void superSub(E[] e,K k){} статичен е и може да ползва само своите параметри, не и тези на класът ако има декларирани такива.\n\npublic <T> void note(T t){} може да дефинира свои собствен тип различен от този на класът ако има деклариран тип.\nClassName.<Long>note(2l); типът може да се зададе така или да не се задава, когато не е зададен го слага само като ако са няколко типа взима най-високия или Object",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451938983934,
                        "article": {
                            "title": "Type capture",
                            "header": null,
                            "content": "List<? extends Number> list=longList;\nSystem.out.println(captureType(list));\n\nprivate static <E> String captureType(List<E> e){\n\treturn e.get(0).getClass().getSimpleName();\n}\n\nпри ползването на генеричния метод може да се определи типът на променливата.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939029033,
                        "article": {
                            "title": "Wildcard",
                            "header": null,
                            "content": "Enheritance\nклас не може да се декларира с тип <?>, също така и ? не може да го има в extends или implements клаузата\n\nContainer<Integer> full=new Container<Integer>();\nfull.setE(1);\nContainer<Number> empty=new Container<Number>();\nmove(full,empty);\n\nprivate static <E> Container<?> move(Container<? extends E> from, Container<? super E> to){\n\tto.setE(from.getE());\n\treturn to;\n}\nпозволява прехвърляне на информация от под-тип към супер-тип, които иначе не е възможно, симулация на наследяване.\n\n---\n\nCompSuper i1=new CompSuper();\nCompSuper i2=new CompSuper();\nCompSub i3=new CompSub();\nCompSub i4=new CompSub();\n\none(i1,i2);\n//one(i3,i4);\ntwo(i1,i2);\ntwo(i3,i4);\n\npublic static <E extends Comparable<E>> void one(E e1,E e2){\n\te1.compareTo(e2);\n}\npublic static <E extends Comparable<? super E>> void two(E e1,E e2){\n\te1.compareTo(e2);\n}\n\nclass CompSuper implements Comparable<CompSuper>{\n\tpublic int compareTo(CompSuper i) {\n\t\treturn 0;\n\t}\n}\nclass CompSub extends CompSuper{}\nограничава само Comparable, two позволява сравнение на типове и техните под-типове.\n\n---\n\nExtRec rec=new ExtRec();\nrec.add(new ArrayList<ExtRec>(),new ExtRec());\n\nclass Rec<E extends Rec<E>> {\n\tpublic List<E> add(List<E> list,E e) {\n\t\tlist.add(e);\n\t\treturn list;\n\t}\n}\nclass ExtRec extends Rec<ExtRec> {}\nОграничава ползването само на под-класове.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939073778,
                        "article": {
                            "title": "Implication",
                            "header": null,
                            "content": "Компилирането:\n- премахва типовете\n- замества с обект\n- взима първия тип ако са няколко\noverloading - след премахването на типът има същия подпис и хвърля грешка:\nstatic <E> void merge (MyStack<E> s1, MyStack<E> s2) {}\nstatic <E> void merge (MyStack<E> s1, MyStack<? extends E> s2) {}\nstatic <E> void merge (MyStack<E> s1, MyStack<? super E> s2) {}\n\nOverriding:\nsuper { \n   void one(List<Integer> l){}\n}\nsub extends super{ \n   void one(List l){} // override\n} \n\n---\n\nклас наследяващ generic без той да е - създава допълнителен невидим метод в generic, които замества типът с Object освен метода заместен с реалния клас (Number). Допълнителния метод се създава за да няма cast.\nsuper<E> { \n   void one(E e){}\n}\nsub extends super<Number> { \n   void one(Number obj){} // override\n   void one(Object obj){} // error name clash - ина такъв метод автоматично генериран в супер.\n}\n\n---\n\nsuper { \n   void one(Object o){}\n}\nsub extends super{ \n   <E> void one(E e){} // name clash\n}\n\n---\n\ninstanceof не може да се ползва с типове само с ?\ninstanceof MyClass<Integer>; // error\ninstanceof MyClass<E>; // error\ninstanceof E; // error\ninstanceof MyClass<?>;\n\n---\n\ncast:\n(List<String>) warning\n(List<?>) error\n(List)\n\n---\n\narrays:\nE[] a1=new E[3]; // error\nList<E>[] l5={}; // error\nList<String>[] l7={}; // error\nList<String>[] l8=new List<String>[3]; // error\nList<?>[] l2={};\nList<?>[] l3=new List<?>[]{};\nT[] newarray=(T[])Array.newInstance(array.getClass().getComponentType(), array.length);\n\n---\n\nException - не са разрешени типове, освен в throws\n\n---\n\nЕнумераторите нямат тип.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451939162826,
                "article": {
                    "title": "Collections",
                    "header": null,
                    "content": "String[] array = {\"A\", \"C\", \"B\", \"E\", \"D\"};\n\t\t\nHashSet<String> set=new HashSet<String>(Arrays.asList(array));\nLinkedHashSet<String> lset=new LinkedHashSet<String>(Arrays.asList(array));\nTreeSet<String> tset=new TreeSet<String>(Arrays.asList(array));\n\nList<String> l=new ArrayList<String>(Arrays.asList(array));\nLinkedList<String> ll=new LinkedList<String>(Arrays.asList(array));\nPriorityQueue<String> pq=new PriorityQueue<String>(Arrays.asList(array));\n\nCollection<?>[] collections={set,lset,tset,l,ll,pq};\n\nset не може да има повтарящи се стойности.\n\nnext() премества но не изтрива от цолекцията при итерация\n\nNavigableSet<Fill> treeSet=new TreeSet<Fill>(Arrays.asList(fills)); трябва да е имплементиран Comparable иначе се компилира но после хвърля грешка. \ntreeSet.first() първия елемент\ntreeSet.last() последния елемент\n\ntreeSet.headSet(new Fill(\"C\")) преди С [A, B]\ntreeSet.headSet(new Fill(\"C\"),true) включва С [A, B, C]\ntreeSet.floor(new Fill(\"H\")) елемент, по-малко или равно - Н\ntreeSet.lower(new Fill(\"G\")) елемент, по-малко - F\n\ntreeSet.tailSet(new Fill(\"F\")) след F [F, H, K] включително него\ntreeSet.tailSet(new Fill(\"F\"),true)); след F [F, H, K]\ntreeSet.ceiling(new Fill(\"H\")) елемент, по-голямо или равно - Н\ntreeSet.higher(new Fill(\"G\")) елемент, по-голямо - Н\n\ntreeSet.subSet(new Fill(\"B\"), new Fill(\"E\")) не включва Е\ntreeSet.descendingSet() обратен ред\n\nList<Integer> arrayList=new ArrayList<Integer>(Arrays.asList(ints)); има повтарящи се\narrayList принтира когато има имплементиран toString метода\narrayList.get(arrayList.size()-1) принтира последния елемент\narrayList.set(6, 8) замества елемента на 6 позиция с нов (8) и връща стария (7) \narrayList.add(6, 7) добавя нов елемент на позиция 6 и измества другите назад\narrayList.addAll(arrayList.size(), arrayList.subList(8, arrayList.size())); добавя на позиция (последна) под лист (от позиция)\narrayList.remove(0) маха елемента от първата позиция и го връща\narrayList.remove(new Integer(2)) маха елемент, ако са няколко първия\narrayList.lastIndexOf(new Integer(3)) последната позиция на елемент",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451939308388,
                        "article": {
                            "title": "Equals hashCode",
                            "header": null,
                            "content": "o1 == o2 проверява дали референциите сочът към един обект.\no1 equals o2 ако не е имплементиран equals е като == иначе сравнява състоянието на обекта.\nlist.contains(o1) когато не е имплементиран equals намира само обект със същата референция, иначе може да намери и същото състояние.\nset.contains(o1) без имплементирани equals и hashCode намира само същата референция, особеното е че само с equals пак не е достатъчно да намери обект със същото състояние.\n\n@Override\npublic boolean equals(Object o){\n\tif(o == this) // same object\n\t\treturn true;\n\tif(!(o instanceof Eh)) // not null and can be cast, but sub class\n\t\treturn false;\n\treturn this.title.equals(((Eh)o).title); // important field\n}\n\n@Override\npublic int hashCode(){\n\treturn title.length(); // weak implementation\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939349152,
                        "article": {
                            "title": "Comparable",
                            "header": null,
                            "content": "class Eh implements Comparable<Eh> { // задава типът на обекта които ще се сравнява\n\tprivate String title;\n\t@Override\n\tpublic boolean equals(Object o){\n\t\tif(o == this)\n\t\t\treturn true;\n\t\tif(!(o instanceof Eh))\n\t\t\treturn false;\n\t\treturn this.title.equals(((Eh)o).title);\n\t}\n\t@Override\n\tpublic int hashCode(){\n\t\treturn title.length();\n\t}\n\tpublic int compareTo(Eh eh){\n\t\treturn this.title.compareTo(eh.title);\n\t}\n}\nСравняват се важните полета, когато са повече се проверява дали са equals преди да се сравнят за да се постигне консистентност.\nКогато добавя елемент в TreeSet който е еднакъв според compareTo не го замества а връща false",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939379440,
                        "article": {
                            "title": "Comparator",
                            "header": null,
                            "content": "TreeSet<String> ts=new TreeSet<String>(new Compar());\nclass Compar implements Comparator<String> {\n\tpublic int compare(String e0, String e1) {\n\t\treturn e1.compareTo(e0);\n\t}\n}\nредаът на сравнение е обърнат.\n\nTreeSet<String> ts=new TreeSet<String>(new Compar<String>());\nclass Compar<E extends Comparable<E>> implements Comparator<E> {\n\tpublic int compare(E e0, E e1) {\n\t\treturn e1.compareTo(e0);\n\t}\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939427943,
                        "article": {
                            "title": "Operations",
                            "header": null,
                            "content": "Set<Integer> A=new TreeSet<Integer>(Arrays.asList(new Integer[]{1,2,3,4,5}));\nSet<Integer> B=new TreeSet<Integer>(Arrays.asList(new Integer[]{5,6,7}));\nA.containsAll(B) дали А съдържа всички елементи на B\nA.addAll(B)\nA.retainAll(B) маха елементите от А които ги няма в В\nA.removeAll(B) \n\nIterator<Integer> i=B.iterator();\nwhile(i.hasNext()){\n\tInteger next = i.next();\n\tSystem.out.print(next+\" \");\n\tif(next==6)\n\t\ti.remove(); // само така може да маха динамично (от итератора)\n}\n\nfor(Iterator<Integer> it=B.iterator();it.hasNext();)\n\tSystem.out.print(it.next()+\" \");\n\nObject[] o=B.toArray();\nInteger[] nullArray=new Integer[0];\nInteger[] a1=B.toArray(nullArray); // не може да разшири nullArray и създава нова\n\nInteger[] bigArray=new Integer[5];\nInteger[] a2=B.toArray(bigArray); // пълни bigArray тези които са в повече са нули.\n\nfor(:) не може да променя колекцията.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939515673,
                        "article": {
                            "title": "Set",
                            "header": null,
                            "content": "A < B\nA C B A D F E H K // маха повтарящите, трябва да са имплементирани и equals и hashCode, иначе не разпознава повтарящите се.\nSet<Fill> hashSet=new HashSet<Fill>(Arrays.asList(fills)); няма ред на показване - най-бързо\nSet<Fill> linkedHashSet=new LinkedHashSet<Fill>(Arrays.asList(fills)); има ред на показване, този в които са въведени\nNavigableSet<Fill> treeSet=new TreeSet<Fill>(Arrays.asList(fills)); трябва да е имплементиран Comparable иначе се компилира но после хвърля грешка. \ntreeSet.first() първия елемент\ntreeSet.last() последния елемент\n\ntreeSet.headSet(new Fill(\"C\")) преди С [A, B]\ntreeSet.headSet(new Fill(\"C\"),true) включва С [A, B, C]\ntreeSet.floor(new Fill(\"H\")) елемент, по-малко или равно - Н\ntreeSet.lower(new Fill(\"G\")) елемент, по-малко - F\n\ntreeSet.tailSet(new Fill(\"F\")) след F [F, H, K] включително него\ntreeSet.tailSet(new Fill(\"F\"),true)); след F [F, H, K]\ntreeSet.ceiling(new Fill(\"H\")) елемент, по-голямо или равно - Н\ntreeSet.higher(new Fill(\"G\")) елемент, по-голямо - Н\n\ntreeSet.subSet(new Fill(\"B\"), new Fill(\"E\")) не включва Е\ntreeSet.descendingSet() обратен ред\n\nclass Fill implements Comparable<Fill> {\n\tprivate String title;\n\tFill(String title){\n\t\tthis.setTitle(title);\n\t}\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\t@Override\n\tpublic boolean equals(Object o){\n\t\treturn this.title.equals(((Fill)o).title);\n\t}\n\t@Override\n\tpublic int hashCode(){\n\t\treturn 1;\n\t}\n\t@Override\n\tpublic int compareTo(Fill fill) {\n\t\treturn this.title.compareTo(fill.getTitle());\n\t}\n\t@Override\n\tpublic String toString(){\n\t\treturn title;\n\t}\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939602584,
                        "article": {
                            "title": "List",
                            "header": null,
                            "content": "Integer[] ints={1,2,3,4,5,6,7,1,2,3};\nList<Integer> arrayList=new ArrayList<Integer>(Arrays.asList(ints)); има повтарящи се\narrayList принтира когато има имплементиран toString метода\narrayList.get(arrayList.size()-1) принтира последния елемент\narrayList.set(6, 8) замества елемента на 6 позиция с нов (8) и връща стария (7) \narrayList.add(6, 7) добавя нов елемент на позиция 6 и измества другите назад\narrayList.addAll(arrayList.size(), arrayList.subList(8, arrayList.size())); добавя на позиция (последна) под лист (от позиция)\narrayList.remove(0) маха елемента от първата позиция и го връща\narrayList.remove(new Integer(2)) маха елемент, ако са няколко първия\narrayList.lastIndexOf(new Integer(3)) последната позиция на елемент\n\nIterator<Integer> iterator=arrayList.iterator();\nwhile(iterator.hasNext()){\n\tInteger i=iterator.next();\n\tif(i.equals(8))\n\t\titerator.remove();\n}\n\nList<Integer> filter=Arrays.asList(new Integer[]{4,5,6}); не може да добавя.\narrayList.retainAll(filter); маха елементите от колекция на базата на друга колекция, остават общите.\n\nLinkedList - по-бърз за чести добавяния и премахвания на елементи, само това е разликата.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939687200,
                        "article": {
                            "title": "Priority queue",
                            "header": null,
                            "content": "Елементите трябва да имат имплементиран Comparable или при създаването на колекцията да се зададе comparator, иначе runtime. Колекцията действа като обикновена, разликата е в pool метода той взима елементите спрямо реда от компаратора.\n\nQueue<Order> queue=new PriorityQueue<Order>(3,comparator()); инициална големина (>0), задава компаратор, в този случай Order може да не имплементира Comparable\n\nQueue<Order> queue=new PriorityQueue<Order>(); конструктора приема колекции\nqueue.offer(new Order(\"A\")); или add\nqueue.offer(new Order(\"C\"));\nqueue.offer(new Order(\"B\"));\n\npeek - само го показва без да го маха от колекцията\n\nПоказва реда подреден спрямо компаратора:\t\nwhile(!queue.isEmpty())\n\tSystem.out.print(queue.poll()+\" \"); \n\nПоказва редът като обикновен лист по реда на въвеждане:\nSystem.out.println(queue); \nfor (Order order : queue) {\n\tSystem.out.print(order.getTitle()+\" \");\n}\nIterator<Order> iterator=queue.iterator();\nwhile(iterator.hasNext())\n\tSystem.out.print(iterator.next()+\" \");\n\npublic static Comparator<Order> comparator(){\n\treturn new Comparator<Order>(){\n\t\tpublic int compare(Order o1, Order o2) {\n\t\t\treturn o2.getTitle().compareTo(o1.getTitle()); обратен ред\n\t\t}\n\t};\n}\n}\nclass Order implements Comparable<Order>{\n\tprivate String title;\n\tOrder(String title){\n\t\tthis.setTitle(title);\n\t}\n\tpublic void setTitle(String title) {\n\t\tthis.title = title;\n\t}\n\tpublic String getTitle() {\n\t\treturn title;\n\t}\n\tpublic boolean equals(Object o){\n\t\treturn title.equals(((Order)o).title);\n\t}\n\tpublic int hashCode(){\n\t\treturn title.hashCode();\n\t}\n\tpublic int compareTo(Order o) {\n\t\treturn title.compareTo(o.getTitle());\n\t}\n\tpublic String toString(){\n\t\treturn title;\n\t}\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939728828,
                        "article": {
                            "title": "Deque",
                            "header": null,
                            "content": "Елементите може да се добавят и вземат от двете страни. Не е нужно да се имплементира equals и compareTo\n\nArrayDeque<Integer> deque=new ArrayDeque<Integer>(); // по добро от linkedList\ndeque.offerFirst(0) // добавя отпред\ndeque.offer(9) deque.offerLast(10) // добавя отзад\n\ndeque.peekFirst() deque.peekLast() \n\nfor(Integer i:deque){ // върти по реда на въвеждане\n\tSystem.out.print(i+\" \");\n}\n\ndeque.pop() ако няма елементи хвърля грешка\n\nwhile(!deque.isEmpty())\n\tSystem.out.print(deque.poll()+\" \"); // връща null ако няма повече елементи FIFO\n\nwhile(!deque.isEmpty())\n\tSystem.out.print(deque.pollLast()+\" \"); // обратен ред\n\nIterator<Integer> iterator=deque.descendingIterator();\nwhile(iterator.hasNext())\n\tSystem.out.print(iterator.next()+\" \");",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939776198,
                        "article": {
                            "title": "Map",
                            "header": null,
                            "content": "Map<Integer,String> hashMap=new HashMap<Integer,String>();\nfor(String s:Arrays.asList(\"A\",\"B\",\"C\",\"D\",\"E\")){\n\thashMap.put(Integer.valueOf(s.charAt(0)), s);\n}\nString last=hashMap.put(69, \"H\"); връща обекта които замества или null\nString removed=hashMap.remove(69); връща обекта които изтрива\nhashMap.containsKey(65)\nhashMap.containsValue(\"A\");\n\nMap<Integer,MA> ma=new HashMap<Integer,MA>();\nma.put(1, new MA(\"A\"));\nma.put(2, new MAA(\"B\")); под-клас\nMap<Integer,MAA> maa=new HashMap<Integer,MAA>();\nmaa.put(3, new MAA(\"C\"));\nma.putAll(maa); типът на map-а е под-клас\n\nSet<Integer> set=ma.keySet(); няма повтарящи се\nCollection<MA> collection=ma.values(); може да има повтарящи се\nset.remove(1); маха и от картата редът\n//set.add(5); не може\ncollection.remove(new MA(\"D\")); маха и от картата редът\n//collection.add(new MA(\"F\")); не може\n\nSet<Entry<Integer, MA>> entrySet=ma.entrySet(); ред<ключ,стойност>\nfor (Entry<Integer, MA> entry : entrySet) {\n\tSystem.out.print(entry.getKey()+\" \"+entry.getValue()+\" \");\n\tif(entry.getKey().equals(2))\n\t\tentry.setValue(new MA(\"E\")); променя стойността и в картата\n}\n\nHashMap, LinkedHashMap позволяват една null за ключ и много за стоиност, второто е под-клас на първото.\nHashTable не позволява null нито за ключ нито за стойност, thread safe\n\nNavigableMap<Integer,Integer> nm=new TreeMap<Integer,Integer>();\nfor(Integer i:Arrays.asList(1,2,3,4,5,6,7)){\n\tnm.put(i, i);\n}\nnm.firstKey() първия ключ\nnm.firstEntry() първия ред\nnm.pollFirstEntry() взима първия ред\nnm.headMap(3) до 3 без него\nnm.tailMap(3) от 3 до края\nnm.subMap(3, 5) от 3 до 5 без него\nnm.ceilingEntry(0) първия от нулата нагоре\nnm.floorEntry(8) първия от 8 надолу\nnm.higherEntry(2) по голямо\nnm.lowerEntry(5) по малко\n\nTreeSet ако в конструктора се подаде цолекция с компаратор, тои приема редът на компаратора.\n\nLinkedHashMap реда на достъпване може да е този на въвеждане или този на най-често извикваните.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939809532,
                        "article": {
                            "title": "Collections",
                            "header": null,
                            "content": "List<String> list=new ArrayList<String>(Arrays.asList(\"A\",\"C\",\"B\",\"F\",\"E\",\"D\",\"a\"));\nCollections.sort(list); сортира\nCollections.sort(list,Collections.reverseOrder()); компаратор обратен ред\nCollections.sort(list,String.CASE_INSENSITIVE_ORDER); големи малки букви компаратор\nCollections.copy(list, Arrays.asList(\"a1\",\"A1\")); в първия лист копира елементите от втория започвайки отначало и замествайки ги колкото е голям.\nCollections.fill(list.subList(2,5), \"A\"); замества елементи с един елемент\nCollections.swap(list, 3, 0); размества елементи\nCollections.replaceAll(list, \"A\", \"B\"); замества всики А с В\n\nSet<String> set=new TreeSet<String>(Collections.reverseOrder());\nset.addAll(Arrays.asList(\"A\",\"C\",\"B\",\"F\",\"E\",\"D\",\"a\"));\n\nList<SortA> sortA=new ArrayList<SortA>(Arrays.asList(new SortA(\"A\"),new SortA(\"C\"),new SortA(\"B\"))); няма компаратор\nCollections.reverse(sortA); обратен ред\nCollections.sort(sortA,comp()); сортира с компаратор\nint c=Collections.binarySearch(sortA, new SortA(\"C\"),comp()); търси с компаратор\nCollections.rotate(sortA, -1); първия утива отзад\n\nSet<Integer> ints=new LinkedHashSet<Integer>(Arrays.asList(3,1,5,8,4,9,2));\nCollections.min(ints)\nCollections.max(ints)\nCollections.addAll(ints, 11,10,12);\n\nprivate static Comparator<SortA> comp() {\nreturn new Comparator<SortA>(){\n\tpublic int compare(SortA o1, SortA o2) {\n\t\treturn o1.getTitle().compareTo(o2.getTitle());\n\t}\n};",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451939865165,
                        "article": {
                            "title": "Arrays",
                            "header": null,
                            "content": "int[] ints={1,3,5,2,4};\nArrays.sort(ints, 1, 4); сортира в интервала\nArrays.toString(ints)\nArrays.sort(ints);\n//  Arrays.sort(ints, Collections.reverseOrder()); компаратора се ползва само с обекти\n\nString[] s={\"A\",\"B\",\"D\",\"C\"};\nArrays.sort(s,Collections.reverseOrder());\n\nint[] i={1,3,2,4,1,5};\nArrays.sort(i); търси само ако е сортиран !\nArrays.binarySearch(i, 3); \nArrays.binarySearch(i, 1); има две, не се знае кои индекс ще върне\nArrays.binarySearch(i,1,5,1); търси от позиция 1-5, елемент 1\n\nInteger[] o={1,2,3,4,5,6,1};\nList<Integer> list=Arrays.asList(o); листа е свързан с масива и промените се отразяват на двете\n//\t\tlist.add(7); не може да се променя големината на масива\n//\t\tlist.remove(0);\nlist.set(5,7); може да се сменя стойност\n\nSet<Integer> set=new HashSet<Integer>(Arrays.asList(o)); маха повтарящите се\nInteger[] n=set.toArray(new Integer[0]);\n\nArrays.fill(o, 9); замества",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            }
        ]
    },
    {
        "id": 1451940022130,
        "article": {
            "title": "Microsoft",
            "header": null,
            "content": "Certificate...",
            "footer": null,
            "personal": false
        },
        "children": [
            {
                "id": 1451941159829,
                "article": {
                    "title": "Recognize browser",
                    "header": null,
                    "content": "<!--[if lte IE 7]> <=IE7 <hr> <![endif]-->\n<!--[if lt IE 7]> <IE7 <hr> <![endif]-->\n<!--[if IE 8]> isIE8 <hr> <![endif]-->\n<!--[if gt IE 8]> >IE8 <hr> <![endif]-->\n<!--[if gte IE 9]> >=IE9 <hr> <![endif]-->\n<!--[if !IE]> --> This is not Internet Explorer! <hr> <!-- <![endif]-->",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451941264397,
                "article": {
                    "title": "Tags",
                    "header": null,
                    "content": "<!DOCTYPE html> <!-- No-quirks mode causes the browser to operate in an HTML5-compliant manner -->\n\n<title>Basic HTML5 Tags</title>\n<meta charset=\"utf-8\">\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<meta name=\"description\" content=\"Template\">\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<link rel=\"stylesheet\" href=\"css/app.css\">\n<script src=\"lib/jquery.js\"></script>\n\n&amp; &gt; &lt; &quot; &copy; &reg; &trade; A&nbsp;B\n<a>\n<a href=\"#end\"> Jump down </a>\n<a href=\"http:/abv.bg\"> abv.bg </a>\n<a href=\"https://jquery.com/\" target=\"MyIframe\"> Iframe </a>\n<a href=\"https://jquery.com/\" target=\"_blank\"> Open in new tab </a>\n<a href=\"mailto:malin2014sb@yahoo.com?subject=hi&body=call me.\"> Email </a>\n<a href=\"mailto:malin2014sb@yahoo.com?subject=hi&body=call me.\"> <img src=\"img/mail.png\" /> </a> <!-- http://apps.pixlr.com/editor/ -->\n\n<div>\n<div data-customName=\"Data\"></div>\n<div id=\"div\" class=\"div\" contenteditable=\"contenteditable\" draggable=\"draggable\" spellcheck=\"spellcheck\" style=\"\" tabindex=\"1\" title=\"title\" > Sample DIV</div>\n<div hidden=\"hidden\"> Sample DIV</div>\n<div> Generic division </div>\n\n<embed>\n<embed src=\"video/car.swf\" height=\"50\"></embed>\n\n<iframe>\n<a href=\"https://jquery.com/\" target=\"MyIframe\"> Iframe </a>\n<iframe name=\"MyIframe\" sandbox=\"allow-forms allow-same-origin allow-scripts allow-top-navigation\"></iframe>\n\n<img>\n<img src=\"img/eva.jpg\" alt=\"Eva\" height=\"300\" usemap =\"#eva\"/>\n<map name=\"eva\">\n<area shape=\"rect\" coords=\"0,250,220,300\" href=\"http:/abv.bg\" target=\"MyIframe\" />\n<area shape=\"circle\" coords=\"110,75,50\" href=\"http:/abv.bg\" target=\"MyIframe\" />\n<area shape=\"poly\" coords=\"110,200,80,230,140,230\" href=\"http:/abv.bg\" target=\"MyIframe\" />\n<!-- <area shape=\"default\" href=\"InvalidChoice.html\" alt=\"Invalid\" /> -->\n</map>\n\n<input>\n<input disabled=\"disabled\" value=\"Disabled\">\n<input readonly=\"readonly\" value=\"Read only!\">\n<input type=\"checkbox\" value=\"Apple\" checked=\"checked\" > Checked </input>\n\n<object>\n<object type=\"image/png\" data=\"img/mail.png\"></object>\n\n<select>\n<select>\n\t<option> Selection choice 1 </option>\n\t<option selected=\"selected\"> Selection choice 2 </option>\n</select>\n\n<table>\n<table>\n\t<tbody>\n\t\t<thead> \n\t\t\t<th> Table header cell </th>\n\t\t</thead>\n\t\t<tr>\n\t\t\t<td> TD </td>\n\t\t</tr>\n\t\t<!-- <tfoot> Table footer </tfoot> -->\n\t</tbody>\n</table>\n\n<audio controls>\n\t<source src=\"audio/tada.wav\" type=\"audio/mpeg\">\n\tYour browser does not support the audio tag.\n</audio>",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451941394628,
                "article": {
                    "title": "Java Script",
                    "header": null,
                    "content": "typeof\nvar undefined;  // undefined\nvar n = null;  // null\nvar s = 'String'; // string\nvar nu = 3;  // number\nvar fu = function(){}; // function\nvar a = [];  // object\nvar o = new fu();  // object\nvar b = true;  // boolean\nNAN:\nvar nan = 1 * 'a';\nvar Infinity = '2'/'0';\n\nif(0) - false - 0 is false\n\nFunction loaded first:\nconsole.log(after());\nfunction after(){\n\treturn 'after';\n}\ntry{\n\tfunctionHolder();\n} catch(e){\n        console.log(e);\n} finally{\n\tconsole.log('Finally block executed');\n}\nvar functionHolder = function(){return 'aha'}; // function expression is not loaded first!\nvar change = function(){return 1;}\nif...\nchange = function(){return 2;}\n\nOnly first argument is used in function:\narg(3,4);\nfunction arg(a){\n\tconsole.log(a)\n}\n\nUser interface:\nvar promptValue = prompt(\"Set a number\",1);  // 1 is default\nvar confirmValue = confirm(\"Confirm this\");\n\nLocal scope is only for function:\n(function(){\n\tfor(var i=0;i<3;i++){\n\t\tvar localToScopes = i;  // local to function not to for\n\t}\n\tconsole.log('local',localToScopes);  // local 2\n\tglobalVariableTest = 'GVT';  // global no declaration\n})();\nconsole.log(globalVariableTest);\n(function(){\n\tvar firstLevel = 'level1';\n\t//console.log(secondLevel);\n\treturn function(){\n\t\tvar secondLevel = 'level2';\n\t\treturn\tfirstLevel + secondLevel;\n\t}\n})();\n\nNumber check:\nif(!isNaN(one))  // ! is not a number\n\tconsole.log(Number(one)+1,String(Number(one) + 1));  // string-number number-string\nelse\n\tconsole.log('not a number!');\n\nSWITCH:\nvar color = \"red\";\nswitch(color){\n\tcase 'black':\n\t\tconsole.log('black');\n\t\tbreak;\n\tcase 'red':\n\t\tconsole.log('red');\n\t\tbreak;\n\tdefault: \n\t\tconsole.log('default');\n}\nvar range = 5;\nswitch(true){\n\tcase isNaN(range):\n\t\tconsole.log('not a number!');\n\t\tbreak;\n\tcase (range < 10):\n\t\tconsole.log('< 10');\n\t\tbreak;\n}\n\nChecks:\nvar nothing;\nif(!nothing)  // check undefined OR null\nvar app = app || {}; // if not create object - namespace\nconsole.log('123'==123,'123'===123); // true false (equal and the same type)\n\nGet elements from page:\nvar elementById = document.getElementById('byId');  //static\nvar arrayByTagName = document.getElementsByTagName('img');  //live (change with DOM)\nvar arrayByName = document.getElementsByName('byName');  //live\nvar elementQueryId = document.querySelector('.byClass');  //static\nvar arrayClasses = document.querySelectorAll('.byClass');  //static\n\nEvents:\nvar btn = document.getElementsByTagName('button')[0];\nbtn.addEventListener('click', function(e){ console.log(e); }, false);  // false-bubling; true-capture;\nbtn.addEventListener('click', clickData, false);  // false-bubling; true-capture;\nfunction clickData(e){  // second event to the same button\n\tbtn.removeEventListener('click', clickData, false);\n}\nbtn.onclick = function(e){ console.log('third simplified ',e); };  // short\n>\n<span onclick=\"console.log('propagation');\"><button>Stop propagation</button></span>\nvar prop = document.getElementsByTagName('button')[1];\nprop.addEventListener('click', function(e){\n\te.stopPropagation();\t//span onclick is not activated, not working on <a>\n}, false);\t// false-bubling; true-capture;\n>\n<a href=\"#\"><button>Prevent default</button></a>\nvar def = document.getElementsByTagName('button')[2];\ndef.addEventListener('click', function(e){\n\te.preventDefault();  // <a> is not activated\n}, false);\t// false-bubling; true-capture;\n>\nelement.oninput = function (e){ console.log(e.target.value); }\nelement.onfocus = function (e){ console.log(e,'one on focus'); }\noneInput.addEventListener('keypress', function(e) { console.log(e.keyCode); }, false);\n>\nelement.onclick = function(){console.log(this.innerHTML,'click')};\nelement.onmouseover = function(){console.log(this.innerHTML,'over')};\n>\nvar video = document.getElementById('audio');\nvideo.addEventListener('play', function(e) {\n\tconsole.log('Playing');\n}, false);\n\nWindow events:\nwindow.addEventListener('load', function(e) {\n\tconsole.log('Window Load'); \n}, false);\nwindow.onresize = function (e){ console.log('Window resize',e); }\nwindow.onerror = function (e){ console.log('Window error',e); }\nwindow.onstorage = function (e){ console.log('Window storage (Web)',e); }\nwindow.onmessage = function (e){ console.log('Window message',e); }\nwindow.postMessage('hi',\"*\");",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451941500831,
                        "article": {
                            "title": "Error",
                            "header": null,
                            "content": "Unhandled errors:\nwindow.onerror = function(e){\n\tconsole.log(e);\n};\n\nError:\nthrow new Error(100,\"aha\");",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451941560147,
                        "article": {
                            "title": "stopPropagation",
                            "header": null,
                            "content": "<input type=\"text\" id=\"username\" onclick=\"stopPropagation();\"/>\nfunction stopPropagation(event){\n\tevent = event || window.event;\n\tif(event.stopPropagation){  // check if stopPropagation exist\n\t\tevent.stopPropagation();\n\t}else{\n\t\tevent.cancleBubble = true;  // IE compatability\n\t}\n}\n\n<div onclick=\"no(this,event);\">\nfunction no(el,event){\n\tvar t = event.srcElement || event.target;\n\tif(el === t){\n\t\tshowEvent();\n\t}\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451941653582,
                        "article": {
                            "title": "XML parse",
                            "header": null,
                            "content": "var xhttp, xmlDoc, txt, x, i;\nxhttp = new XMLHttpRequest();\nxhttp.onreadystatechange = function() {\n\tif (xhttp.readyState == 4 && xhttp.status == 200) {\n\t    xmlDoc = xhttp.responseXML;\n\t    txt = \"\";\n\t    x = xmlDoc.getElementsByTagName(\"ARTIST\");\n\t    for (i = 0; i < x.length; i++) {\n\t      txt = txt + x[i].childNodes[0].nodeValue + \"<br>\";\n\t    }\n\t    document.getElementById(\"demo\").innerHTML = txt;\n    }\n}\nxhttp.open(\"GET\", \"test.xml\", true);\nxhttp.send();",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451941739837,
                        "article": {
                            "title": "Return false",
                            "header": null,
                            "content": "<form>\n\t<select>\n\t\t<option>Please choose</option>\n\t\t<option>A</option>\n\t\t<option>B</option>\n\t</select>\n\t<button onclick=\"return choose(document.getElementsByTagName('select')[0])\">Submit</button>\n</form>\nfunction choose(el){\n\tif(el.value == 'Please choose'){\n\t\treturn false;\n\t}\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942074089,
                        "article": {
                            "title": "Namespace",
                            "header": null,
                            "content": "var myApp = {};\n(function(){\n\tthis.a = 100;\n}).apply(myApp);\nconsole.log(myApp.a);\n\n(function(){\n        this.namespace = this.namespace || {};\n        var ns = this.namespace;\n        ns.test = 3;\n})();\nconsole.log(namespace.test);",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942146300,
                        "article": {
                            "title": "Callback",
                            "header": null,
                            "content": "function back(callback){\n\tcallback.call({data:'value'});\n};\nback(function(){\n\tconsole.log(this.data);\n});\n\nfunction args(value){\n\tconsole.log(value);\n}\nwindow[\"args\"]('argument');",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942195825,
                        "article": {
                            "title": "Event",
                            "header": null,
                            "content": "var go = document.getElementsByTagName('input')[0];\n\ngo.addEventListener(\"order\", function(e) {\n  console.log(e.detail);\n});\n\ngo.dispatchEvent(new CustomEvent(\"order\", { \n\tdetail: \"Example of an event\",\n\tbubbles: false,\n\tcancellable: true\n}));\n\ndetail: {...}\nbubbles: false - do not trigger other elements\ncancellable: true\n\nAlso:\ndocument.addEventListener",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942224728,
                        "article": {
                            "title": "Invoke function",
                            "header": null,
                            "content": "function add(a,b){\n\tconsole.log(a, b, this.c, this.d);\n}\nadd.call({c:3,d:4},1,2);  //1 2 3 4\nobject send with call become part of add object.\n\nadd.apply({c:3,d:4},[1,2]);  // area",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942261380,
                        "article": {
                            "title": "IsOnline",
                            "header": null,
                            "content": "navigator.onLine",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942313446,
                        "article": {
                            "title": "Regex",
                            "header": null,
                            "content": "i\tPerform case-insensitive matching\ng\tPerform a global match (find all matches rather than stopping after the first match)\nm\tPerform multiline matching\n\nvar patt = new RegExp(\"e\");\nvar res = patt.test(\"The best things in life are free\");\n\nvar patt = /Hello/g;\nvar result = patt.test(\"Hello\");\n\n/[A_Za-z1-9_]/.test('a1_')  // true,false all characters apply to condition\n\nMatch:\n'a1_'.match('\\\\w')  // letter, digit or _ - return null or object (object can be trimed to character that not apply to condition)\n'A'.match(new RegExp(\"\\\\w\"));",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942380946,
                        "article": {
                            "title": "Download JSON",
                            "header": null,
                            "content": "var a = document.createElement(\"a\");\nvar blob = new Blob([JSON.stringify({'a':'5'})], {type: \"octet/stream\"});\nurl = window.URL.createObjectURL(blob);\na.innerHTML = 'Download';\na.href = url;\na.download = 'fileName.txt';\n$('body').append(a);",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942541021,
                        "article": {
                            "title": "isPrototypeOf instanceof",
                            "header": null,
                            "content": "var A = { a:1 };\nvar B = Object.create(A);\nB.b = 2;\nvar C = { c:3 };\n\nconsole.log(A, B, A.isPrototypeOf(B), A.isPrototypeOf(C), B.a);\n\nvar ClassA = (function(){\n\tfunction ClassA(){\n\t\tthis.a = 1;\n\t}\n\treturn ClassA;\n})();\n\nvar ClassB = (function(){\n\tfunction ClassB(){\n\t\tthis.b = 2;\n\t\tClassA.call(this);\n\t}\n\tClassB.prototype = ClassA.prototype;\n\tClassB.prototype.constructor = ClassB; \n\treturn ClassB;\n})();\n\nconsole.log(new ClassA(), new ClassB(), new ClassB() instanceof ClassA)",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451942603482,
                        "article": {
                            "title": "Input prevent enter",
                            "header": null,
                            "content": "<input type=\"text\" onkeypress='return event.charCode >= 48 && event.charCode <= 57'>\n<input id=\"ha\">\n\n$(ha).keypress(function(e){\n\tif(e.keyCode == 97){\n\t\tconsole.log('wrong');\n\t\treturn false;\n\t}\n});\n\n<input id=\"test\" onkeydown=\"return test(event);\">\nfunction test(e){\n\tif(e.keyCode == 65){\n\t\tconsole.log('wrong');\n\t\treturn false;\n\t}\n}\n\n$(\"#field\").keypress(function(e) {\n\tvar key = e.charCode || e.keyCode;\n\tif(key == 8 || key == 46 || (e.ctrlKey && key==99) || (e.ctrlKey && key==118)){\n\t\treturn true;\n\t}\n\tvar charValue = String.fromCharCode(key);\n    var valid = /^[0-9]+$/.test(charValue);\n    if (!valid) {\n        return false;\n    }\n});",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451942663784,
                "article": {
                    "title": "Array",
                    "header": null,
                    "content": "var arrayObject = new Array(); // array object 0: 7, 1: 1, 3: 3\narrayObject[0] = 0;\narrayObject[1] = 1;\narrayObject[3] = 3;\nvar arrayArguments = new Array('2');  // 0: \"2\" array with one element\nvar array = [3];  // 0: \"3\" array with one element\nfunction changeArray(array){  // copy reference\n\tarray[0] = 7;  // reference change arrayObject\n\tarray = null;\t// different reference, arrayObject is not null\n}\nchangeArray(arrayObject);\narrayObject[2]  // undefined\narrayObject.length  // 4 , two is counted\n\narrayObject.concat(array);  // add to the end\n\njoinedArrays.indexOf(7); // 0 - return position in array, first match\njoinedArrays.lastIndexOf(3)  // 4 last index\n\njoinedArrays.join('|');  // 7|1||3|3\narrayObject.push(4);  // add last\narrayObject.pop();  // get last\n\narrayObject.reverse(); \t// reverse original array\n\narrayObject.shift()  // get first\n\narrayObject.slice(1,3);\t//remove undefined (2), from 1 to 3 without 3\n\narrayObject.sort();\t//remove undefined(2),  modify original array\n\narrayObject.splice(3,1,9);  // position/how-many/arguments - add 9 to position 3 return (array) value from this position, change original\narrayObject.splice(2,1)  // return array from position, change original\n\narrayObject.toString();  // 7,1,,3\narrayObject.unshift(-1);  // return new length, add first (-1)\narrayObject.valueOf();  // [-1,7...",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451942795376,
                "article": {
                    "title": "CSS",
                    "header": null,
                    "content": "<link rel=\"stylesheet\" href=\"css/main.css\" type=\"text/css\" media=\"all\">\n<link rel=\"stylesheet\" href=\"css/print.css\" type=\"text/css\" media=\"print\">\n\n@charset 'UTF-8';\n@import url('additional.css');\n/*comment*/\nbody {\n\tbackground-color: #7FFF00;\n\tcolor: white;\n\tfont-size: 20px;\n}\n\nInline override:\n<span class=\"overridenStyle\" style=\"color: white;\">Overriden by inline style</span>\n.overridenStyle {\n\tcolor: yellow;\n}\n\nCustom style:\n<span class=\"myFontStyle\" title=\"custom\">Custom Font</span>\n@font-face {\n\tfont-family: myFont;\n\tsrc: url('../font/OpenSans-Bold.eot'),\n\t     url('../font/GoodDog.otf'); /* IE9 */\n}\n.myFontStyle {\n\tfont-family: myFont;\n\tcolor: blue;\n} \n\nBasic selectors:\nbutton {}\n#twin {}\n.twin {}\n* {}  /*low performance*/\n\nli a {}  /*low performance, direct and indirect descendants*/\nli > span > a {}  /*good performance, direct descendants*/\n\np,sub {}\ndiv + span {}\t/*selects first span after div*/\ndiv ~ span {}\t/*select all span after div, limited in parent element*/\n\na[href]:hover:after {  /*link have href, add content*/\n\tcontent: attr(href);\n}\nspan[title='custom']:hover {} /*exact match*/\nspan[title*='sp']:hover {}\t/*contains*/\nspan[title^='start']:hover {}\t/*starts with*/\n\nimg[src$='jpg']:hover:after {  /*ends with*/\n\tcontent: \"Eva\";\n}\n\nspan[data-custom ~='one'] {}\t/*have match in several words separated by space*/\ninput[type='checkbox']:checked:hover:after {}  /*checked*/\ndiv > span:not(#exclude) {}  /*exclude*/\n\nli:nth-child(odd) {}\nli:nth-child(even) {}\nli:nth-child(2) {} /*one based*/\n\nli:first-of-type {} /*limited in parent*/\n\nOverride inline style:\n#important {\n\tcolor: green !important;\n}\n\nPrecedence ! :\nCount 3 digits 1-id, 2-Class, 3-name\n#main.content is 011\n#main ul + li.selected is 112\nBiggest number win\n\nColors:\nspan.rgb { \n\tbackground-color: rgb(255,0,0); \n\topacity: .5;\n}\nspan.transp { \n\tcolor: rgba(255,0,0,0.5); \n}\nspan.hsl { \n\tcolor: hsl(180, 100%, 25%); \n}\n\nText:\ndiv#text { \n\tfont-family: \"times new roman\", serif; \n\t/*font-size: 26px;\n\tfont-size: 200%;*/\t/*procent from parent*/\n\tfont-size: 1.2em;\t/*relative to parent*/\n\t/*font-size: 1in;\n\tfont-size: 2cm;*/\n\n\tmargin: 10px;\n\tborder: 5px;\n\tpadding: 5px 5px 5px 5px; /*top, right, bottom, and left*/\n\t/*padding: 5px 5px; top-bottom and left-right*/\n\tbackground-color: black;\n\tborder-style: solid;\n\tborder-color: green;\n\t/*border-bottom: 10px;\n\tborder-right: 5px;\n\tborder-left: 1px;\n\tborder-top: 0px;*/\n\n}\n\nBox model:\nmargin-border-padding\n\nPositioning:\nposition: static - default\n#relative_position {  /*shifted from where it should be*/\n\tposition: relative;\n\ttop: 20px;\n\tleft: 100px;\n\twidth: 225px;\n\theight: 80px;\n\tborder: 1px solid;\n}\n<div id=\"relative_position\"> Relative to parent! \n\t<div id=\"absolute_inside_position\"> Absolute to relative </div>\n</div>\n#absolute_inside_position {  /*the parent is non-static(have position), absolute to parent*/\n\tposition: absolute;\n\ttop: 30px;\n\tleft: 15px;\n\tborder: 1px solid;\n}\n#absolute_position {  /*when parent is static(didn't have position), absolute to window*/\n\tposition: absolute;\n\ttop: 20px;\n\tleft: 900px;\n}\n#fixed_position {  /*fixed to position in browser*/\n\tposition: fixed;\n\ttop: 50px;\n\tleft: 900px;\n}\n\nFloat:\n<div>\n\t<div id=\"float\">Float</div>\n\tSome text.....\n</div>\n#float {  /*picture surrounded by text, next elements float around*/\n\tfloat: left;\n\tpadding: 5px;\n\tmargin: 5px;\n\tbackground-color: white;\n\tcolor: black;\n}\n<div>\n\t<div id=\"float\">Float</div>\n\t<div id=\"float_clear\">Clear</div>\n\tSome text.....\n</div>\n#float_clear {\n\tfloat: left;\n\tpadding: 5px;\n\tmargin: 5px;\n\tbackground-color: white;\n\tcolor: black;\n\tclear: both;\t/*go below last float element, No floating elements allowed on the left or the right side of a specified element*/\n}\n.size {  /*1 and 2 from 3 elements*/\n\tfloat: left;\n\twidth: 33%;\n\tborder: 1px solid;\n\tbox-sizing: border-box;  /*Calculates the width based on the border, padding, and content width*/\n\ttext-align: center;\n}\n.sizePlus {  /*last element*/\n\tfloat: left;\n\twidth: 34%;\n\tborder: 1px solid;\n\tbox-sizing: border-box;\n\ttext-align: center;\n}\n-moz-box-sizing: border-box; /*change firefox*/\n\nCenter:\n#center{\n\twidth: 300px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\ttext-align: center;\n}\n\nTransition:\ndiv:hover { /*on hover after 5s turn red*/\n\tcolor: red;\n\ttransition-property: color;\n\ttransition-duration: 5s;\n}\n\nRotate;\nimg {\n\ttransform: rotate(90deg);\n}",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451944030315,
                        "article": {
                            "title": "media",
                            "header": null,
                            "content": "@media screen and (min-width: 200px) and (max-width: 480px) {\n\tbody {\n        background-color: red;\n    }\n}\n@media screen and (min-width: 480px) {\n\tbody {\n        background-color: blue;\n    }\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451944067219,
                        "article": {
                            "title": "Flex",
                            "header": null,
                            "content": "CSS:\n.wrapper {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;  \n  \n  -webkit-flex-flow: row wrap;\n  flex-flow: row wrap;\n  \n  font-weight: bold;\n  text-align: center;\n}\n\n.wrapper > * {\n  padding: 10px;\n  flex: 1 100%;\n}\n\n.header {\n  background: tomato;\n}\n\n.footer {\n  background: lightgreen;\n}\n\n.main {\n  text-align: left;\n  background: deepskyblue;\n}\n\n.aside-1 {\n  background: gold;\n}\n\n.aside-2 {\n  background: hotpink;\n}\n\n@media all and (min-width: 600px) {\n  .aside { flex: 1 auto; }\n}\n\n@media all and (min-width: 800px) {\n  .main    { flex: 3 0px; }\n  .aside-1 { order: 1; } \n  .main    { order: 2; }\n  .aside-2 { order: 3; }\n  .footer  { order: 4; }\n}\n\nbody {\n  padding: 2em; \n}\n\nHTML:\n<div class=\"wrapper\">\n  <header class=\"header\">Header</header>\n  <article class=\"main\">\n    <p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.</p>  \n  </article>\n  <aside class=\"aside aside-1\">Aside 1</aside>\n  <aside class=\"aside aside-2\">Aside 2</aside>\n  <footer class=\"footer\">Footer</footer>\n</div>",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451944136304,
                        "article": {
                            "title": "Center panel",
                            "header": null,
                            "content": "div[role=\"login\"] {\n    width: 300px;\n    height: 250px;\n    margin: auto;\n    position: absolute;\n    top: 0; bottom: 0; left: 0; right: 0;\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451944261152,
                "article": {
                    "title": "Semantics",
                    "header": null,
                    "content": "<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Basic HTML5 Tags</title>\n\t\t<meta http-equiv='Content-Type' content='text/html;charset=UTF-8' >\n\t\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n\t\t<meta name=\"description\" content=\"Template\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<link rel=\"stylesheet\" href=\"css/semantic.css\" type=\"text/css\" media=\"all\">\n\t\t<style></style>\n\t</head>\n\t<body>\n\t\t<header>\n\t\t\t<hgroup>\n\t\t\t\t<h2>Header</h2>\n\t\t\t\t<img src=\"img/logo.jpg\">\n\t\t\t</hgroup>\n\t\t</header>\n\n\t\t<nav>\n\t\t\t<a href=\"#\">Nav 1</a>\n\t\t\t<a href=\"#\">Nav 2</a>\n\t\t\t<a href=\"#\">Nav 3</a>\n\t\t</nav>\n\n\t\t<aside>\n\t\t\tAside Place for advertisement\n\t\t</aside>\n\n\t\t<div role=\"main\">\t<!-- ROLE application, banner, complementary, contentinfo, form, main, navigation, search -->\n\t\t\t<section>\n\t\t\t\t<header>Header</header>\n\t\t\t\t<article>Attention: <b>b element</b> Importance: <strong>Strong</strong></article>\n\t\t\t\t<footer>Footer</footer>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<header>Header</header>\n\t\t\t\t<article>Alternate: <i>i element</i> Emphasis: <em>em element</em></article>\n\t\t\t\t<footer>Footer</footer>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<header>Header</header>\n\t\t\t\t<article>Abbreviation: <abbr title=\"Short from\">SF</abbr> Variable: <var>var = i;</var></article>\n\t\t\t\t<footer>Footer</footer>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<header>Header</header>\n\t\t\t\t<article>Brake word if needed: PartA<wbr/>PartB <a href=\"#eva\">Eva</a></article>\n\t\t\t\t<footer>Footer</footer>\n\t\t\t</section>\n\n\t\t\t<div>Formating div</div>\n\t\t\t<span>Formating span</span>\n\t\t\t<hr/>\n\n\t\t\t<blockquote><cite>Theme</cite> blockquote (citation) <q>q(<q>q inside</q>)</q></blockquote>\n\n\t\t\t<div id=\"code\">\n\t\t\t\t<section>\n\t\t\t\t\t<code>\nfunction test(parameter){\n\treturn parameter;\n}\n\t\t\t\t\t</code>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<samp>\nfunction test(parameter){\n\treturn parameter;\n}\n\t\t\t\t\t</samp>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<pre>\n\t\t\t\t\t\t<code>\nfunction test(parameter){\n\treturn parameter;\n}\n\t\t\t\t\t\t</code>\n\t\t\t\t\t</pre>\n\t\t\t\t</section>\n\t\t\t</div>\n\n\t\t\t<p>Text <dfn>Definition <abbr title=\"Vehicle Identification Number\">VIN</abbr></dfn> ends here.</p>\n\n\t\t\t<figure id=\"eva\">\n\t\t\t\t<img src=\"img/eva.jpg\" alt=\"woman\" height=\"50\"/>\n\t\t\t\t<figcaption>Figure</figcaption>\n\t\t\t</figure>\n\n\t\t\t<details>\t<!-- only chrome ! -->\n\t\t\t\tDetails\n\t\t\t\t<summary>Summary</summary>\n\t\t\t</details>\n\n\t\t</div>\n\n\t\t<footer>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\tCopyright (C) 2012, Contoso Ltd., All rights reserved\n\t\t\t\t\t<address>\n\t\t\t\t\t\t<a href=\"mailto:malin2014sb@yahoo.com?subject=hi&body=call me.\">Address (autor)</a>\n\t\t\t\t\t</address>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</footer>\n\t</body>\n</html>",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451944324647,
                        "article": {
                            "title": "CSS",
                            "header": null,
                            "content": "Header compatibility, header is like div:\nheader {\n\tdisplay: block;\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451944346783,
                        "article": {
                            "title": "Tags",
                            "header": null,
                            "content": "header - titles like h1\nfooter - copyright, address\naside - advertisement \ndiv attribute role=\"main\"\n  - application - not document\n  - banner - site name, logo\n  - complementary \n  - contentinfo - footer content \n  - form\n  - main - main content max one\n  - navigation\n  - search\nb - bold, not used\nstrong - importance (replace b)\nem - emphasis, like \"i\"\n<abbr title=\"Short from\">SF</abbr> - hold on top show title (acronym)\naddress - contact information, in footer\n<q>text <q>text inside</q></q> - \"text 'text inside'\"\nblockquote - separate text element, inline\n  - cite - Theme of blockquote\ncode, samp - result is one line\n<pre><code> Coede </code></pre> - preserve white space!\nvar\n<wbr/> - word can brake here\ndfn - definition\n<figure><img/><figcaption>Caption</figcaption></figure> - picture with name",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451944448094,
                "article": {
                    "title": "Lists",
                    "header": null,
                    "content": "Numbers:\n<ol>  <!-- 1,2,3 -->\n\t<li>Apples</li>\n\t<li>Oranges</li>\n\t<li>Grapes</li>\n</ol>\n<ol reversed=\"reversed\">  <!-- 3,2,1 -->\n<ol start=\"3\">  <!-- start from 3,4,5 -->\n<ol type=\"A\">  <!-- A,B,C -->\n<ol type=\"I\">  <!-- I,II,III -->\n\nDots:\n<ul>\n\t<li>A jack</li>\n\t<li>A lug wrench with a socket on one end and a pry bar on the other</li>\n\t<li>A spare tire</li>\n</ul>\n\nDescription (title,content):\n<dl>\n\t<dt>Boat</dt>\n\t\t<dd>A small vehicle propelled on water by oars, sails, or an engine</dd>\n\t<dt>Car</dt>\n\t\t<dd>An automobile</dd>\n\t\t<dd>A passenger vehicle designed for operation on ordinary roads</dd>\n\t<dt>Bicycle</dt>\n\t<dt>Bike</dt>\n\t\t<dd>A vehicle with two wheels in tandem, typically propelled by pedals</dd>\n</dl>\n\nCount number or abc:\n<ul class=\"level1\">\n\t<li>\n\t\tAutomobiles\n\t\t<ul class=\"level2\">\n\t\t\t<li>\n\t\t\t\tBMW\n\t\t\t\t<ul class=\"level3\">\n\t\t\t\t\t<li>X1</li>\n\t\t\t\t\t<li>X3</li>\n\t\t\t\t\t<li>Z4</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\tChevrolet\n\t\t\t\t<ul class=\"level3\">\n\t\t\t\t\t<li>Cobalt</li>\n\t\t\t\t\t<li>Impala</li>\n\t\t\t\t\t<li>Volt</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\tFord\n\t\t\t\t<ul class=\"level3\">\n\t\t\t\t\t<li>Edge</li>\n\t\t\t\t\t<li>Focus</li>\n\t\t\t\t\t<li>Mustang</li>\n\t\t\t\t</ul>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n\t<li>\n\t\tBoats\n\t\t<ul class=\"level2\">\n\t\t\t<li>Sea Ray</li>\n\t\t\t<li>Cobalt</li>\n\t\t</ul>\n\t</li>\n</ul>\nbody {\n\tcounter-reset: section;\n}\nul.level1 > li:before {\n\tcounter-increment: section;\n\tcontent: counter(section) \". \";\n\tcounter-reset: subsection;\n}\nul.level2 > li:before {\n\tcounter-increment: subsection;\n\tcontent: counter(subsection, lower-alpha) \": \";\n}\nul.level1 > li, ul.level2 > li {\n\tlist-style-type: none;\n}\nul.level3 > li {\n\tlist-style-type: disc;\n}\n\nList inside list - different marks.",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451944651176,
                "article": {
                    "title": "Table",
                    "header": null,
                    "content": "<table>\n\t<caption>Cars</caption>\n\t<colgroup>\n\t\t<col/>  <!-- 1 column -->\n\t\t<col/>  <!-- 2 column -->\n\t\t<col span=\"2\" class=\"verticalHeader\" />  <!-- 3,4 columns  -->\n\t</colgroup>\n\t<thead>\n\t\t<tr>\n\t\t\t<th>Vehicle #</th>\n\t\t\t<th>Category</th>\n\t\t\t<th>Year</th>\n\t\t\t<th>Make</th>\n\t\t\t<th>Model</th>\n\t\t\t<th>Price</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>1</th>\n\t\t\t<td rowspan=\"2\">Antique</td>\n\t\t\t<td>1957</td>\n\t\t\t<td>Ford</td>\n\t\t\t<td>Thunderbird</td>\n\t\t\t<td>14,000</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th>2</th>\n\t\t\t<td>1958</td>\n\t\t\t<td>Chevrolet</td>\n\t\t\t<td>Impala</td>\n\t\t\t<td>3,000</td>\n\t\t</tr>\n\t</tbody>\n\t<tfoot>\n\t\t<tr>\n\t\t\t<th colspan=\"5\">Total:</th>\n\t\t\t<th>17,000</th>\n\t\t</tr>\n\t</tfoot>\n</table>\n\nthead th {\n\tbackground-color: #BDEAFF;\n\twidth: 100px;\n}\ntbody th {\n\tbackground-color: #FFFF99;\n}\ntfoot th {\n\tbackground-color: #C2FE9A;\n}\ntfoot th:last-of-type {\n\ttext-align: right;\n}\ntfoot th:first-of-type {\n\ttext-align: right;\n}\ntd {\n\ttext-align: center;\n\tborder: 1px solid;\n}\ntd:last-of-type {\n\ttext-align: right;\n}\nth {\n\tborder: 1px solid;\n}\ntable {\n\tborder: 1px solid;\n}\n.verticalHeader {\n\tbackground-color: #C0C0C0;\n}",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451944704377,
                "article": {
                    "title": "Objects",
                    "header": null,
                    "content": "var car = {  // no prototype object, does not create type\n\tbrand: 'Mitsubishi',\n\tmodel: 'Colt',\n\tinfo: function(){\n\t\treturn this.brand + ' ' + this.model;\n\t}\n}\nconsole.log(car, car.info());\n// Object {brand: \"Mitsubishi\", model: \"Colt\"} \"Mitsubishi Colt\"\n\nfunction getInstance(){  //  factory pattern\n\tvar vehicle = new Object();  // has type (actual type is Object), has prototype (new)\n\tvehicle.speed = 240;\n\tvehicle.model = 'eclipse';\n\tvehicle.info = function(){\n\t\treturn vehicle.model+' '+vehicle.speed;\n\t}\n\treturn vehicle;\n}\nconsole.log(getInstance(),getInstance().info(),getInstance() == getInstance());\n// Object {speed: 240, model: \"eclipse\"} \"eclipse 240\" false\n\nPrototype Object methods:\n- constructor  The function that is called to initialize a new object\n- hasOwnProperty  Returns a Boolean indicator of whether the current object has the specified property\n- isPrototypeOf  Returns a Boolean indicator of whether the current object is in the specified object’s prototype object chain\n- propertyIsEnumerable  Returns true if the object can be enumerated in a for...in loop\n- toLocalString  Converts a date to a string value based on the current local\n- toString  Returns the string representation of the current object\n- valueOf  Returns the value of the current object converted to its most meaningful primitive value\n\nfunction NotEncapsulated() {  // this can be used only with new\n\tthis.i = 'info method!';\n\tthis.a = 'private';\n\tthis.info = function(){\n\t\treturn this.i;\n\t}\n}\nNotEncapsulated.prototype.newInfo = function(){ // add method, for all instances\n\treturn this.i+' '+this.a;  // can not access private (var x=1)\n}\n\nvar notEncapsulated = new NotEncapsulated();  // new instance\nconsole.log(notEncapsulated .info());\n// info method!\n\nnotEncapsulated.info = function(){  // override, only object notEncapsulated\n\treturn 'overriden!';\n}\nconsole.log(notEncapsulated.info());\n//overriden!\n\nvar notEncapsulated1 = new NotEncapsulated();\nconsole.log(notEncapsulated.newInfo(), notEncapsulated1.newInfo());\n// info method! private info method! private\n\nfunction Getter(){  // encapsulation\n\tvar private = 1;\n\tthis.getPrivate = function(){  // getter (privileged method)\n\t\treturn private;\n\t}\n}\nGetter.prototype.info = function(){\n\treturn this.getPrivate();\n}\nconsole.log(new Getter().info());  // new - this\n// 1\n\nvar myApp = myApp || {};  // namespace!\nmyApp.count = 1;\nconsole.log(myApp);\n// Object {count: 1}\n\n(function(){  // singleton \n\tthis.myApp = this.myApp || {};\n\tvar ns = this.myApp;\n\n\tvar private = 'private';\n\tns.public = function() {\n\t\treturn 'public';\n\t}\n})();\nconsole.log(myApp, myApp.public());\n// Object {} \"public\"\n\nvar Item = (function(){\n\tvar private = 'private';\n\tfunction Item () {\n\t\tconsole.log('constructor');\n\t\tthis.color = 'red';\n\t}\n\tItem.prototype.info = function(){\n\t\treturn this.color;\n\t}\n\tItem.prototype.getPrivate = function(){\n\t\treturn private;\n\t}\n\treturn Item;\n})();\nvar item = new Item();\n// constructor\nconsole.log(item, item.info(), item.getPrivate(), item.private, typeof item, item instanceof Item);\n// Item {color: \"red\"} \"red\" \"private\" undefined \"object\" true\n\nvar SubItem = (function(parent){\n\tSubItem.prototype = new Item();  // inherit methods\n\tSubItem.prototype.constructor = SubItem;  // inherit methods\n\tfunction SubItem(){\n\t\tparent.call(this);\t/*add parent properties to object ({color: \"red\"}), after this can have parameters*/\n\t\tthis.type = 'type';\n\t}\n\tSubItem.prototype.info = function(){  // override\n\t\treturn 'blue';\n\t}\n\tSubItem.prototype.callParent = function(){\n\t\treturn parent.prototype.info.call(this); \n\t}\n\treturn SubItem;\n})(Item);\nvar subItem = new SubItem();\n// constructor\n// constructor\nconsole.log(subItem, subItem.info(), subItem.callParent(), subItem.type, typeof subItem, subItem instanceof SubItem, subItem instanceof Item);\n// SubItem {color: \"red\", type: \"type\"} \"blue\" \"red\" \"type\" \"object\" true true",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451944765787,
                        "article": {
                            "title": "Example",
                            "header": null,
                            "content": "var myApp = myApp || {};\n(function(){\n\tthis.add = function(c,d){\n\t\treturn add.call({c:c,d:d},1,2).result();\n\t};\n\tfunction add(a,b){\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.result = function(){\n\t\t\treturn this.a + this.b + (this.c ? this.c : 0) + (this.d ? this.d : 0);\n\t\t}\n\t\treturn this;\n\t};\n}).apply(myApp);\nconsole.log(myApp.add(3,4));\n\n(function(){\n\tvar Parent = (function () {\n\t\tfunction Parent() {\n\t\t\tthis.a = 1;\n\t\t}\n\t\tParent.prototype.add = function(){\n\t\t\treturn 7;\n\t\t}\n\t\treturn Parent;  \n\t}());\n\tvar Child = (function () {\n\t\tfunction Child() {\n\t\t\tParent.call(this);\n\t\t}\n\t\tChild.prototype = new Parent();\n\t\tChild.prototype.constructor = Child; \n\t\treturn Child;  \n\t}());\n\tthis.child = new Child();\n}).apply(myApp);\n\nconsole.log(myApp.child.add(),myApp.child.a);",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451944798314,
                        "article": {
                            "title": "Constructor",
                            "header": null,
                            "content": "console.log(guess('A'));\nfunction guess(obj){\n\tconsole.log(obj.constructor == String);\n\tswitch(obj.constructor){\n\t\tcase String:\n\t\t\treturn 'String';\n\t\tcase Number:\n\t\t\treturn 'Number';\n\t\tdefault:\n\t\t\treturn 'Other';\n\t}\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451944854648,
                "article": {
                    "title": "jQuery",
                    "header": null,
                    "content": "<script src=\"lib/jquery.js\"></script>\n$(element) - wrapper object, can use jQuery methods\n<input id=\"one\">\n<button id=\"btn1\">Click</button>\n<button id=\"btn2\">Trigger</button>\n\nconsole.log($('#one'), $('#one').length, $('#one')[0], document.getElementById('one'));\n// [input#one, context: document, selector: \"#one\"] 1 <input id=​\"one\">​ <input id=​\"one\">\n\n$('#one').val('hello');\nconsole.log( $(document.getElementById('one')).val() );\n\n$('#btn1').on('click', function(){\n\tconsole.log($('#one').val());\n\t$('#btn1').off('click');  // remove click event\n});\n\n$('#btn2').on('click', function(){\n\t$('#btn1').triggerHandler('click');  // trigger click event\n});\n\n$(document).ready(function(){\n\tconsole.log('loaded');\n})\n\nAnother way to get by ID:\n<div id=\"aha\">AHA</div>\n$(aha).html()\n\n$('ul li').each(function(){\n\tconsole.log(this.innerHTML);\n});",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451944904264,
                "article": {
                    "title": "Forms",
                    "header": null,
                    "content": "placeholder=\"Enter ID\" - suggested text in input, not send with form request\ntitle=\"0.0.1\" - on mouse over\npattern=\"\\d+[.]\\d+[.]\\d+\"> - validation\nrequired=\"required\" - validation\n:valid {\n\tborder:solid 1px green;\n}\n:invalid {\n\tborder:solid 1px red;\n\tfont-weight:bold;\n}\n:required{\n\tbackground-color: LightGray;\n}\nautofocus=\"autofocus\"\ndisabled=\"disabled\"\nchecked=\"checked\"\nautocomplete=\"off\" - remove auto fill of a field\n\n<form id=\"validation\">\n\t<label for=\"id\">ID:</label><input name=\"id\" placeholder=\"Enter ID\" required=\"required\"><br/>\n\n\t<label for=\"url\">URL:</label><input type=\"url\" name=\"url\" value=\"http://aha.com\" autofocus=\"autofocus\" required=\"required\"><br/>\n\n\t<label for=\"date\">Date:</label><input type=\"date\" name=\"date\" required=\"required\"><br/>\n\t<label for=\"email\">Email:</label><input type=\"email\" name=\"email\" required=\"required\"><br/>\n\t<label for=\"file\">Upload:</label><input type=\"file\" name=\"file\" required=\"required\"><br/>\n\n\t<label for=\"number\">Number:</label><input type=\"number\" name=\"number\" min=\"3\" max=\"7\" required=\"required\"><br/>\n\t<label for=\"range\">Range:</label><input type=\"range\" name=\"number\" min=\"2\" max=\"6\" step=\"1\" value=\"6\" required=\"required\"><br/>\n\n\t<label for=\"pass\">Password:</label><input type=\"password\" value=\"ha\" name=\"pass\" required=\"required\"><br/>\n\t<label for=\"search\">Search:</label><input type=\"search\" name=\"search\" required=\"required\"><br/>\n\t<label for=\"tel\">Phone:</label><input type=\"tel\" name=\"tel\" required=\"required\"><br/>\n\n\t<label for=\"text\">Text:</label><textarea rows=\"4\" cols=\"20\" name=\"text\" required=\"required\">Some text</textarea><br/>\n\n\t<label for=\"select\">Select:</label>\n\t<select size=\"1\" name=\"select\" required=\"required\"><br/> <!--size - 1 row  -->\n\t  \t<option value=\"volvo\">Volvo</option>\n\t  \t<option value=\"saab\">Saab</option>\n\t  \t<option value=\"mercedes\" selected=\"selected\">Mercedes</option>\n\t  \t<option value=\"audi\">Audi</option>\n\t</select><br/>\n\n\t<label for=\"version\">Version:</label><input type=\"text\" name=\"version\" required=\"required\" title=\"0.0.1\" pattern=\"\\d+[.]\\d+[.]\\d+\"><br/>\n\n\t<button type=\"submit\">Go</button>\n\t<button type=\"reset\">Reset</button>\n\t\n</form>\n\n<form method=\"get\" action=\"test.html\" id=\"myForm\">\n\t<label for=\"id\">ID:</label><input name=\"id\"><br/>\n\t<label for=\"url\">URL:</label><input type=\"url\" name=\"url\" value=\"http://aha.com\" autofocus=\"autofocus\"><br/>\n\n\t<input name=\"none\" value=\"Disabled\" disabled=\"disabled\"><br/> <!-- not send with form -->\n\n\t<input name=\"array\" value=\"1\">  <!-- send both like array -->\n\t<input name=\"array\" value=\"2\"><br/>\n\t\n\t<input type=\"button\" value=\"Type button Serialize\" id=\"serialize\"><br/>\n\t<input type=\"checkbox\" checked=\"checked\" name=\"check\">Checked</input><br/>\n\t<input type=\"color\" name=\"color\"><br/> <!-- #00ff00 -->\n\n\t<input type=\"date\" name=\"date\"><br/>\n\t<!-- <input type=\"datetime\"><br/> -->\n\t<input type=\"datetime-local\"><br/>\n\t<input type=\"month\"><br/>\n\t<input type=\"time\" name=\"time\"><br/>\n\t<input type=\"week\"><br/>\n\n\t<!-- <input type=\"email\" required><br/> -->\n\t<input type=\"file\" name=\"file\"><br/>\n\t<input type=\"hidden\"><br/>\n\t<input type=\"image\" src=\"img/mail.png\" alt=\"Submit\"><br/>\n\t<input type=\"number\" required=\"required\" name=\"number\"><br/>\n\t<input type=\"password\" value=\"ha\" name=\"pass\"><br/>\n\t<input type=\"radio\" name=\"radio\" value=\"1\" checked=\"checked\">Checked1</input><br/>\n\t<input type=\"radio\" name=\"radio\" value=\"2\">Checked2</input><br/>\n\t<input type=\"reset\"><br/>\n\t<input type=\"search\" name=\"search\"><br/>\n\t<input type=\"tel\" name=\"tel\"><br/>\n\n\t<textarea rows=\"4\" cols=\"20\" name=\"text\">Some text</textarea><br/>\n\t<select size=\"1\" name=\"select\"><br/>\n\t  \t<option value=\"volvo\">Volvo</option>\n\t  \t<option value=\"saab\">Saab</option>\n\t  \t<option value=\"mercedes\" selected=\"selected\">Mercedes</option>\n\t  \t<option value=\"audi\">Audi</option>\n\t</select><br/>\n\t<button type=\"reset\">Reset</button><br/>\n\n\t<input type=\"submit\" value=\"Just do it!\">\n</form>\n<button form=\"myForm\">Otside form Submit</button>\n\nconsole.log($('option:selected').val(),$('input[type=checkbox]:checked').val(), $('input[type=radio]:checked').val());\n$('#myForm').submit();\n$('#serialize').click(function(){\n\tvar formData = $('#myForm').serialize();\n\tconsole.log(formData);\n        // id=&url=http%3A%2F%2Faha.com&array=123&array=2&check=on&color=%23000000&date=2015-09-10&time=&number=&pass=ha&radio=1&search=&tel=&text=Some+text&select=mercedes\n\tconsole.log(decodeURIComponent(formData));\n        // id=&url=http://aha.com&array=123&array=2&check=on&color=#000000&date=2015-09-10&time=&number=&pass=ha&radio=1&search=&tel=&text=Some+text&select=mercedes\n});\nlabel {\n\tclear: both;\n\tdisplay: block;\n\tfloat: left;\n\twidth: 125px;\n}\ninput, textarea, select {\n\twidth: 150px;\n\tmargin: 2px;\n\tbox-sizing: border-box;\n}",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451944944760,
                        "article": {
                            "title": "Server",
                            "header": null,
                            "content": "1xx  Informational message\n2xx  Success\n3xx  Redirect\n4xx  Client error\n5xx  Server error\n\nOPTIONS  Arequest for information about the communication options available. This method enables the browser to determine the options and requirements associated with a resource without retrieving it.\nGET  A request to retrieve a resource such as an HTML file or an image file.\nHEAD  Operates like the GET method except that the server does not return a message body in the response. The HEAD method retrieves metadata about a resource.\nPOST  Request for the server to accept the data being sent from the client to modify existing server data. \nPUT  Request for the server to accept the data being sent from the client to insert new server data.\nDELETE  Request for the server to delete a specific resource.\nTRACE  Invokes a remote, application-layer loopback of the request message, which enables the client to see what the server is receiving. This is typically used for testing or diagnostic information.",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451944996318,
                "article": {
                    "title": "Node",
                    "header": null,
                    "content": "start from cmd, when node.exe is present:\nnode name\n\ninstall package:\nfrom root directory using console of installed on windows node\nnpm install math\n\nnpm uninstall math\n\nwhen only package.json, from the same folder:\nnpm install\n\nframework for node http://expressjs.com/:\nnpm install\nnpm info express version\n\nExample:\nvar http = require('http');  // build-in\nvar url = require('url');  // build-in\nhttp.createServer(function (request, response) {\n\tvar url_parts = url.parse(request.url, true);  //  true - parses the QueryString\n\tresponse.writeHead(200, {'Content-Type': 'text/plain'});\n\tresponse.end('Hello ' + url_parts.query.name + '!\\n');\n\tconsole.log('Handled request from ' + url_parts.query.name);\n}).listen(8080, 'localhost');\nconsole.log('Server running at http://localhost:8080/');\nhttp://localhost:8080/?name=Malin\n\nModule:\nvar http = require('http');\nvar url = require('url');\nfunction start(){\n\thttp.createServer(function (request, response) {\n\t\tvar url_parts = url.parse(request.url, true);\n\t\tresponse.writeHead(200, {'Content-Type': 'text/plain'});\n\t\tresponse.end('Hello ' + url_parts.query.name + '!\\n');\n\t\tconsole.log('Handled request from ' + url_parts.query.name);\n\t}).listen(8080, 'localhost');\n\tconsole.log('Server running at http://localhost:8080/');\n}\nexports.start = start;\nUse this module:\nvar hello = require('./module1.js');\nhello.start();\n\nPackage:\nnpm init; // create package.json\n{\n\t\"name\": \"math\",\n\t\"version\": \"0.0.0\",\n\t\"description\": \"An example of creating a package\",\n\t\"main\": \"bin/main.js\",\n\t\"scripts\": {\n\t\t\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n\t},\n\t\"repository\": \"\",\n\t\"keywords\": [\n\t\t\"math\",\n\t\t\"example\",\n\t\t\"addition\",\n\t\t\"subtraction\",\n\t\t\"multiplication\",\n\t\t\"division\",\n\t\t\"fibonacci\"\n\t],\n\t\"author\": \"Malin\",\n\t\"license\": \"BSD\"\n}\nmain - entry point:\nvar path = require('path');\nvar fs = require('fs');\nvar lib = path.join(path.dirname(fs.realpathSync(__filename)), '../lib');\nvar simple = require(lib + '/simple_math.js');\nvar advanced = require(lib + '/advanced_math.js');\nmodule.exports = {\n\taddition: simple.addition,\n\tmultiplication: advanced.multiplication\n}\nAdvanced module:\nvar call_counter = require('./call_counter');\nfunction multiply(x, y){\n\tcall_counter();\n\treturn x * y;\n}\nmodule.exports = {\n\tmultiplication: multiply\n}\nInstall Package:\nnpm install math  // install package locally\nnpm install -g math  // gobaly\nStart Package:\nvar math_example = require('math');\nvar result = 0;\nconsole.log();\nresult = math_example.addition(5,10);\nconsole.log('addition(5,10) = ' + result);",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451945042277,
                        "article": {
                            "title": "WebSite simple",
                            "header": null,
                            "content": "framework for node http://expressjs.com/:\nnpm install\nnpm info express version\n{\n\t\"name\": \"express-project\",\n\t\"version\": \"0.0.0\",\n\t\"description\": \"A simple Web site\",\n\t\"main\": \"index.js\",\n\t\"scripts\": {\n\t\t\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n\t},\n\t\"repository\": \"\",\n\t\"author\": \"Malin\",\n\t\"license\": \"BSD\",\n\t\"private\": true,\n\t\"dependencies\": {\n\t\t\"formidable\": \"1.x\",\n\t\t\"express\": \"3.0.0\"\n\t}\n}\n\nvar express = require('express');\nvar app = express();\nvar formidable = require('formidable');\napp.get('/', function (request, response) {\n\tresponse.send('Hello World');\n});\napp.use(express.static(__dirname + '/public'));\napp.get('/SubmitHello', function (request, response) {\n\tresponse.writeHead(200, { 'Content-Type': 'text/html' });\n\tresponse.write('Hello ' + request.query.userName + '!<br />');\n\tresponse.end('Have a great day!');\n\tconsole.log('Handled request from ' + request.query.userName);\n});\napp.post('/SubmitHelloPost', function (request, response) {\n\tif (request.method.toLowerCase() == 'post') {\n\t\tvar form = new formidable.IncomingForm();\n\t\tform.parse(request, function (err, fields) {\n\t\t\tresponse.writeHead(200, { 'Content-Type': 'text/html' });\n\t\t\tresponse.write('Hello ' + fields.userName + '!<br />');\n\t\t\tresponse.end('Have a POST great day!');\n\t\t\tconsole.log('Handled request from ' + fields.userName);\n\t\t});\n\t}\n});\nvar port = 8080;\napp.listen(port);\nconsole.log('Listening on port: ' + port);",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451945106901,
                        "article": {
                            "title": "REST cors",
                            "header": null,
                            "content": "Representational State Transfer (REST), in which the primary purpose of the service is to manipulate web resources by using a uniform set of stateless operations.\nRESTful - no PUT and DELETE\nArbitrary web services require the client to assemble a request, or message, by using a specially formatted XML message called a Simple Object Access Protocol (SOAP) message.\n{\n\t\"name\": \"math_service\",\n\t\"version\": \"0.0.0\",\n\t\"description\": \"A simple Web site\",\n\t\"main\": \"index.js\",\n\t\"scripts\": {\n\t\t\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n\t},\n\t\"repository\": \"\",\n\t\"author\": \"Malin\",\n\t\"license\": \"BSD\",\n\t\"private\": true,\n\t\"dependencies\": {\n\t\t\"formidable\": \"1.x\",\n\t\t\"express\": \"3.0.0\",\n\t\t\"math\": \"0.0.0\"\n\t}\n}\n\nvar express = require('express');\nvar app = express();\nvar formidable = require('formidable');\nvar math = require('math');\n\nvar cors = require('cors');\t// npm install cors https://www.npmjs.com/package/cors\napp.use(cors());\n\napp.get('/', function (request, response) {\n\tresponse.send('Hello World');\n});\n\napp.use(express.static(__dirname + '/public'));\n\napp.get('/addition', function (request, response) {\n\tvar x = Number(request.query.x),\n\ty = Number(request.query.y),\n\tresult = math.addition(x, y);\n\tresponse.writeHead(200, { 'Content-Type': 'application/json' });\n\tresponse.end('{ \"result\": ' + result + '}');\n\tconsole.log('Handled addition request for x=' + x + ' : y=' + y);\n});\n\napp.post('/subtraction', function (request, response) {\n\tvar form = new formidable.IncomingForm();\n\tform.parse(request, function (err, fields) {\n\t\tvar x = Number(fields.x),\n\t\ty = Number(fields.y),\n\t\tresult = math.subtraction(x, y);\n\t\tresponse.writeHead(200, { 'Content-Type': 'application/json' });\n\t\tresponse.end('{ \"result\": ' + result + '}');\n\t\tconsole.log('Handled subtraction request for x=' + x + ' : y=' + y);\n\t});\n});\n\napp.put('/multiply', function (request, response) {\n\tvar form = new formidable.IncomingForm();\n\tform.parse(request, function (err, fields) {\n\t\tvar x = Number(fields.x),\n\t\ty = Number(fields.y),\n\t\tresult = math.multiplication(x, y);\n\t\tresponse.writeHead(200, { 'Content-Type': 'application/json' });\n\t\tresponse.end('{ \"result\": ' + result + '}');\n\t\tconsole.log('Handled multiplication request for x=' + x + ' : y=' + y);\n\t});\n});\n\napp.delete('/divide', function (request, response) {\n\tvar form = new formidable.IncomingForm();\n\tform.parse(request, function (err, fields) {\n\t\tvar x = Number(fields.x),\n\t\ty = Number(fields.y),\n\t\tresult = math.division(x, y);\n\t\tresponse.writeHead(200, { 'Content-Type': 'application/json' });\n\t\tresponse.end('{ \"result\": ' + result + '}');\n\t\tconsole.log('Handled division request for x=' + x + ' : y=' + y);\n\t});\n});\n\napp.get('/delay', function (request, response) {\n\tvar x = Number(request.query.ms);\n\tsetTimeout(function () { \n\t\tresponse.writeHead(200, { 'Content-Type': 'application/json' });\n\t\tresponse.end('{ \"delay\": ' + x + '}');\n\t\tconsole.log('delay ' + x );\n\t}, x);\n});\n\nvar port = 8080;\napp.listen(port);\nconsole.log('Listening on port: ' + port);",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451945190730,
                        "article": {
                            "title": "XMLHttpRequest",
                            "header": null,
                            "content": "0 Uninitialized  The open method has not been called yet.\n1 Loading  The send method has not been called yet.\n2 Loaded  The send method has been called; headers and status are available.\n3 Interactive  Downloading; the response properties hold the partial data.\n4 Completed  All operations are finished\nfunction addNumbers() {\n\tvar x = document.getElementById('x').value;\n\tvar y = document.getElementById('y').value;\n\tvar result = document.getElementById('result');\n\tvar xmlhttp = new XMLHttpRequest();\n\txmlhttp.onreadystatechange = function () {\n\t\tif (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n\t\t\tvar jsonObject = JSON.parse(xmlhttp.response);\n\t\t\tresult.innerHTML = jsonObject.result;\n\t\t}\n\t}\n\txmlhttp.addEventListener(\"progress\", updateProgress, false);\n\txmlhttp.addEventListener(\"error\", failed, false);\n\txmlhttp.addEventListener(\"abort\", canceled, false);\n\txmlhttp.open(\"GET\", \"/addition?x=\" + x + \"&y=\" + y , true);\n\txmlhttp.send();\n}\n\nfunction updateProgress(evt) {\n\tif (evt.lengthComputable) {\n\t\tvar percentComplete = evt.loaded / evt.total;\n\t\tconsole.log(percentComplete);\n\t} else {\n\t\tconsole.log('no progress information');\n\t}\n}\n\nfunction failed(evt) {\n\tconsole.log('An error occurred');\n}\n\nfunction canceled(evt) {\n\tconsole.log('canceled by the user');\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451945246922,
                        "article": {
                            "title": "Ajax",
                            "header": null,
                            "content": "function addNumbersAjax() {\n \tvar x = $('#x').val();\n \tvar y = $('#y').val();\n \tvar data = { \"x\": x, \"y\": y };\n \t$.ajax({\n \t\turl: '/addition',\n \t\tdata: data,\n \t\ttype: 'GET',\n \t\tcache: false,\n \t\tdataType: 'json',\n \t\tsuccess: function (data) {\n \t\t\t$('#result').html(data.result);\n \t\t}\n \t});\n}\n\nfunction addNumbersAjax() {\n\tvar x = $('#x').val();\n\tvar y = $('#y').val();\n\tvar data = { \"x\": x, \"y\": y };\n\t$.getJSON('/addition', data, function (data) {\n\t\t$('#result').html(data.result);\n\t});\n}\n\nfunction subtractNumbers() {\n\tvar x = $('#x').val();\n\tvar y = $('#y').val();\n\tvar data = { \"x\": x, \"y\": y };\n\t$.post('/subtraction', data, function (data) {\n\t\t$('#result').html(data.result);\n\t}, 'json');\n}\n\nfunction multiplyNumbers() {\n\tvar x = $('#x').val();\n\tvar y = $('#y').val();\n\tvar data = { \"x\": x, \"y\": y };\n\t$.ajax({\n\t\turl: '/multiply',\n\t\tdata: data,\n\t\ttype: 'PUT',\n\t\tdataType: 'json',\n\t\tcache: false,\n\t\tsuccess: function (data) {\n\t\t\t$('#result').html(data.result);\n\t\t}\n\t});\n}\n\nfunction divideNumbers() {\n\tvar x = $('#x').val();\n\tvar y = $('#y').val();\n\tvar data = { \"x\": x, \"y\": y };\n\t$.ajax({\n\t\turl: '/divide',\n\t\tdata: data,\n\t\ttype: 'DELETE',\n\t\tdataType: 'json',\n\t\tcache: false,\n\t\tsuccess: function (data) {\n\t\t\t$('#result').html(data.result);\n\t\t}\n\t});\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    },
                    {
                        "id": 1451945275974,
                        "article": {
                            "title": "CORS",
                            "header": null,
                            "content": "Cross-origin resource sharing\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Origin: http://contoso.com:8080 http://www.adventure-works.com/\n\nNode:\nvar cors = require('cors');\t// npm install cors https://www.npmjs.com/package/cors\napp.use(cors());",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451945718068,
                "article": {
                    "title": "Promise",
                    "header": null,
                    "content": "function timeoutAsync(milliseconds) {\n\tvar deferred = $.Deferred();\n\t//deferred.reject();\n\t//return deferred.promise();\n\tsetTimeout(function () { \n\t\tdeferred.resolve(); \n\t}, milliseconds);\n\treturn deferred.promise();\n}\n\nvar promise = timeoutAsync(1000)\n.done(function(){\n\tconsole.log('done');\n\t// promise.done(function(){\t// no waiting already finished\n\t// \tconsole.log('done1'); \n\t// })\n})\n.fail(function(){\n\tconsole.log('faild');\n})\n.always(function(){\n\tconsole.log('always');\n});\n\nChain:\nfunction timeoutAsync(milliseconds) {\n\tvar deferred = $.Deferred();\n\tsetTimeout(function () { \n\t\tdeferred.resolve(); \n\t}, milliseconds);\n\treturn deferred.promise();\n}\nvar p1 = timeoutAsync(2000);\nvar p2 = p1.pipe(function(){\n\tconsole.log('p1');\n\treturn timeoutAsync(1000);\n})\nvar p3 = p2.pipe(function(){\n\tconsole.log('p2');\n\treturn timeoutAsync(1001);\n})\nvar p4 = p3.pipe(function(){\n\tconsole.log('p3');\n\treturn timeoutAsync(1002);\n})\np4.done(function(){\n\tconsole.log('finished');\n}).fail(function(){  // if one fail skip the rest with error\n\tconsole.log('faild');\n})\n\nParallel:\n<progress value=\"0\" max=\"100\"></progress>\nfunction timeoutAsync(milliseconds) {\n\tvar deferred = $.Deferred();\n\tsetTimeout(function () { \n\t\tdeferred.resolve(); \n\t}, milliseconds);\n\treturn deferred.promise();\n}\n\nfunction abcAsync() {\n\tvar deferred = $.Deferred();\n\n\tvar firstPromise = timeoutAsync(1000);\n\tvar secondPromise = timeoutAsync(2000);\n\tvar thirdPromise = timeoutAsync(3000);\n\tvar fourthPromise = timeoutAsync(4000);\n\n\tvar c = 0;\n\tfirstPromise.always(function () { deferred.notify(c=c+25); });\n\tsecondPromise.always(function () { deferred.notify(c=c+25); });\n\tthirdPromise.always(function () { deferred.notify(c=c+25); });\n\tfourthPromise.always(function () { deferred.notify(c=c+25); });\n\n\t$.when(firstPromise, secondPromise, thirdPromise, fourthPromise)\n\t.then(function () { \n\t\tdeferred.resolve(); \n\t}, function () { \n\t\tdeferred.reject(); \n\t});\n\n\treturn deferred.promise();\n}\nabcAsync().progress(function (msg) { \n\tconsole.log(msg);\n\t$('progress').val(msg);\n}).done(function(){\n\tconsole.log('done');\n});\n\nQ:\nfunction qTimeoutAsync(milliseconds) {\n\tvar deferred = Q.defer();\n\tsetTimeout(function () { \n\t\tdeferred.resolve(new Date().getTime()); \n\t}, milliseconds);\n\treturn deferred.promise;\n}\n\nqTimeoutAsync(1000)\n.then(\n    function (result) {\n\tconsole.log('q1',result);\n        // throw { message: \"oops\", name: \"some exception\" };\n        return qTimeoutAsync(1000);\n    }\n).then(\n    function (result) {\n\tconsole.log('q2',result);\n    }, \n    function (error) {\n        console.log(\"err: \" + error.message);\n    }\n).done();\n<script type=\"text/javascript\" src=\"lib/q.js\"></script>",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451945750145,
                        "article": {
                            "title": "Ajax",
                            "header": null,
                            "content": "function addNumbersPromise() {\n\tvar data = getFormData();\n\tserverAddition(data).done(displayResult).fail(displayError);\n}\nfunction getFormData() {\n\tvar x = $('#x').val();\n\tvar y = $('#y').val();\n\treturn { \"x\": x, \"y\": y };\n}\nfunction serverAddition(data) {\n\treturn $.getJSON('/addition', data);\n}\nfunction displayResult(serverData) {\n\t$('#result').html(serverData.result);\n}\nfunction displayError(serverData, error) {\n\tvar value = 'No result';\n\tif ('result' in serverData) \n\t\tvalue = serverData.result;\n\t$('#result').html(value + ' - ' + error);\n}\n\n//app.get('/delay', function (request, response) {\n//\tvar x = Number(request.query.ms);\n//\tsetTimeout(function () { \n//\t\tresponse.writeHead(200, { 'Content-Type': 'application/json' });\n//\t\tresponse.end('{ \"delay\": ' + x + '}');\n//\t\tconsole.log('delay ' + x );\n//\t}, x);\n//});\nvar received = '';\nfunction timeoutAsync(milliseconds) {\n\tvar deferred = $.Deferred();\n\n\tvar data = { \"ms\": 3000 };\n\t$.getJSON('/delay', data, function (data) {\n\t\treceived = data.delay;\n\t\tdeferred.resolve();\n\t});\n\n\treturn deferred.promise();\n}\nconsole.log('start',new Date().getTime());\n\ntimeoutAsync(2000)\n.done(function(){\n\tconsole.log('done',new Date().getTime(),received);\n})\n.fail(function(){\n\tconsole.log('faild');\n});",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451945841847,
                "article": {
                    "title": "Web worker",
                    "header": null,
                    "content": "A web worker is a JavaScript running in the background, without affecting the performance of the page.\nif(typeof(Worker) !== \"undefined\")\nvar worker = new Worker('myWork.js');  // js file\nworker.onmessage = function (e) {\n\tconsole.log(e.data);\n}\nworker.onerror = function (e) {\n\tconsole.log(e.data);\n}\n\nmyWork.js:\nself.onmessage = function (e) {  // self - send back to creator\n\tpostMessage(e.data.name);\n\t// close();  // stop worker\n}\n\n// worker.terminate()  // stop worker\nworker.postMessage({name:'malin'});",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451945914452,
                "article": {
                    "title": "Web socket",
                    "header": null,
                    "content": "//var wsUri = 'ws://echo.websocket.org/'; \nvar wsUri = 'ws://localhost:1337';\nvar webSocket;\nvar timerId = 0;\nvar checkOn = 0;\n\n$(document).ready(function () {\n\tif (checkSupported()) {\n\t\tconnect();\n\t\t$('#btnSend').click(doSend);\n\t}\n});\n\nfunction writeOutput(message) {}\n\nfunction checkSupported() {\n\tif (window.WebSocket) {\n\t\twriteOutput('WebSockets supported!');\n\t\treturn true;\n\t} else {\n\t\twriteOutput('WebSockets NOT supported');\n\t\treturn false;\n\t}\n}\n\nfunction connect() {\n\twebSocket = new WebSocket(wsUri);  // create webSocket and automaticly open connection\n\twebSocket.onopen = function (evt) { onOpen(evt) };\n\twebSocket.onclose = function (evt) { onClose(evt) };\n\twebSocket.onmessage = function (evt) { onMessage(evt) };\n\twebSocket.onerror = function (evt) { onError(evt) };\n}\n\nfunction keepAlive() {\n\tvar timeout = 15000;\n\tif (webSocket.readyState == webSocket.OPEN) {\n\t\twebSocket.send('');\n\t}\n\ttimerId = setTimeout(keepAlive, timeout);  // recursive send empty\n}\n\nfunction cancelKeepAlive() {\n\tif (timerId) {\n\t\tclearTimeout(timerId);  // js clears a timer set with the setTimeout()\n\t}\n}\n\nfunction doSend() {\n\tif (webSocket.readyState != webSocket.OPEN) {\n\t\twriteOutput(\"NOT OPEN: \" + $('#txtMessage').val());\n\t\treturn;\n\t}\n\twebSocket.send($('#txtMessage').val());  // send message\n}\n\nfunction onOpen(evt) {\n\tkeepAlive();\n\tclearInterval(checkOn);  // js clears a timer set with the setInterval()\n}\n\nfunction onClose(evt) {\n\tcancelKeepAlive();\n\tcheckOn = setInterval(function(){ // connection is closed, reopen it, try every 10 sec\n\t\tconnect();\n\t}, 10000);\n}\n\nfunction onMessage(evt) {\n\twriteOutput('RESPONSE: ' + evt.data);\n}\n\nfunction onError(evt) {\n\twriteOutput('ERROR: ' + evt.data);\n}\n\n\nnode implementation:\n// npm install websocket\nvar server = require('websocket').server, http = require('http');\n\nvar socket = new server({\n    httpServer: http.createServer().listen(1337)\n});\n\nconsole.log('lsten on 1337');\nsocket.on('request', function(request) {\n    var connection = request.accept(null, request.origin);\n\n    connection.on('message', function(message) {\n        var received = message.utf8Data;\n        if(received.length > 0){\n             console.log(received);\n            connection.sendUTF('hello');\n            setTimeout(function() {\n                connection.sendUTF('this is a websocket example 3 sec');\n            }, 3000);\n        }\n    });\n\n    connection.on('close', function(connection) {\n        console.log('connection closed');\n    });\n}); \nCONNECTING = 0  Connection is not yet open.\nOPEN = 1  Connection is open and ready to communicate. \nCLOSING = 2  Connection is in the process of closing. \nCLOSED = 3  Connection is closed or couldn’t be opened",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451945957449,
                "article": {
                    "title": "Multimedia",
                    "header": null,
                    "content": "Video:\n<video width=\"320\" height=\"240\" controls=\"controls\" id=\"media\">\n\t<source src=\"video/small.webm\" />\n\t<source src=\"video/small.ogv\" />\n\t<source src=\"video/small.mp4\" />\n\tYou need a browser that supports HTML5!\n</video>\n\nwidth=\"320\" \nheight=\"240\"\ncontrols=\"controls\"\nmuted=\"muted\"\nposter=\"img/logo.jpg\" - show image before play\nautoplay=\"autoplay\" \nloop=\"loop\"\npreload=\"preload\" - starts load with page load\n\n<track label=\"English subtitles\" kind=\"subtitles\" srclang=\"en\" src=\"video/sub.vtt\" default=\"\"></track> <!-- from server, cross origin -->\n\nvar media = $('#media')[0];\nif (media.paused) {\n\tmedia.play();\n} else {\n\tmedia.pause(); \n}\n\nOgg/Theora (.ogv extension) Firefox, Chrome, and Opera\nWebM/VP8 (.webm extension) Firefox, Chrome, Opera, Android and Internet Explorer 9+\nMPEG-4/H.264 (.mp4 extension) Internet Explorer, Chrome, and Safari\n\nThe recommended order is to start with the .webm file because it’s royalty free and open source, and it’s becoming more popular. Next, use the .ogv file because it is also royalty free, but the quality is not as good as the .webm file. Finally, use the .mp4 format for browsers that don’t support .webm or .ogv files.\n\nAudio:\n<audio controls=\"controls\">\n\t<source src=\"audio/tada.mp3\" />\n\t<source src=\"audio/tada.wav\" />\n\tYou need a browser that supports HTML5!\n</audio>\ndocument.getElementsByTagName(\"audio\")[0].volume = 0.2;\n\nOgg/Vorbis (.oga, .ogg extention) Firefox, Chrome, and Opera\nMP3 (.mp3 extension) Safari, Chrome, and Internet Explorer\nMP4 (.mp4, .mp4a, .aac extension) Internet Explorer and Safari\nWAV (.wav extension) Firefox, Chrome, and Opera browsers\n\nThe recommended order is to start with the .oga file because it’s royalty free, open source, and becoming more popular for the web. Next, use the .wav file, because it is also quite popular. Finally, use the .mp3 for browsers that don’t support .oga and .wav files.\nMiro Video Converter",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451945986013,
                "article": {
                    "title": "Canvas",
                    "header": null,
                    "content": "<canvas id=\"myCanvas\" width=\"800\" height=\"600\">\n\tYou need a browser that supports HTML5!\n</canvas>\n\nRectangle:\nvar canvas = document.getElementById('myCanvas');\nvar ctx = canvas.getContext('2d');  // 3d (chrome)\nctx.fillRect(10, 10, 10, 10);\t//x,y,width,height (the color is black)\n\nRed rectangle, half white inside:\nctx.fillStyle = \"red\"; \nctx.fillRect(30, 10, 10, 10);\nctx.clearRect(31, 11, 8, 4);  // remove fill\n\nColor gradient:\nvar gradient = ctx.createLinearGradient(50, 10, 100, 20);  //x,y,width,height\ngradient.addColorStop(0,\"black\");  // left\ngradient.addColorStop(0.5,\"blue\");  // midle\ngradient.addColorStop(1,\"white\");  // right\nctx.fillStyle = gradient;\nctx.fillRect(50, 10, 50, 10);\n\nSave and restore properties:\nctx.strokeRect(10, 30, 10, 10);\nctx.lineWidth = 5;\nctx.strokeRect(30, 30, 10, 10);\nctx.lineJoin = 'round';  // round corners\nctx.strokeRect(50, 30, 10, 10);\nctx.save();\t// properties stack FIFO\nctx.strokeStyle = \"blue\";  // new property not saved\nctx.strokeRect(70, 30, 10, 10);\nctx.restore();  // return properties to saved\nctx.strokeRect(90, 30, 10, 10);\n\nRepeating image:\nvar img = new Image();\nimg.src = 'img/small.png';\nimg.onload = function () {\n\tvar ptrn = ctx.createPattern(img, 'repeat');\n\tctx.fillStyle = ptrn;\n\tctx.fillRect(0, 0, 200, 200);\n}\n\nPiramid:\nctx.fillStyle = 'yellow';  // color inside\nctx.strokeStyle = 'blue';  // border color\nctx.lineWidth = 2;\nctx.beginPath();\nctx.moveTo(20, 50); //start point\nctx.lineTo(10, 70);\nctx.lineTo(30, 70);\nctx.closePath();  // to start point\nctx.fill();\nctx.stroke();\n\nRectangle:\nctx.beginPath();\nctx.rect(40, 50, 20, 20);\t//x,y,width,height\nctx.fill();\n\nElipse:\nctx.beginPath();\nctx.moveTo(80, 50);\t\t// x0,y0\nctx.arcTo(90, 60, 80, 70, 14);\t// x1,y1,x2,y2,r\nctx.moveTo(80, 50);\nctx.arcTo(70, 60, 80, 70, 14);\nctx.stroke();\nctx.fill();\n\nSemi circle:\nctx.beginPath();\nctx.arc(110, 60, 10, 0 * Math.PI, 1 * Math.PI, false);\t// x,y,r,angle(start),angle(end),clockwise\nctx.stroke();\n\nWords:\nctx.beginPath();\nctx.lineWidth = 1;\nctx.strokeStyle = 'black';\nctx.moveTo(10, 110);\nctx.lineTo(150, 110);\t//base line, above, under\nctx.stroke();\nctx.font = \"bold 30pt TimesNewRoman\";\nctx.strokeStyle = 'blue';\nctx.textBaseline=\"bottom\";\t//base line is benith\nctx.fillText(\"Malin\", 10, 110);\t  // text,x,y lower left\nctx.strokeText(\"Malin\", 10, 110);  // text,x,y\nctx.textBaseline=\"top\";\t//base line is above\nctx.fillText(\"Boyanov\", 10, 110); // text,x,y\nctx.strokeText(\"Boyanov\", 10, 110);  // text,x,y\n\nResize img:\nvar img = new Image();\nimg.src = \"img/small.png\";\nimg.onload = function () {\n\tctx.drawImage(img, 10, 150, 30, 30);\t//img,x,y,width,height\n}",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451946012029,
                "article": {
                    "title": "SVG",
                    "header": null,
                    "content": "https://code.google.com/p/svg-edit/\n<svg width=\"100%\" height=\"100%\" viewBox=\"50 70 280 140\" xmlns=\"http://www.w3.org/2000/svg\">\t\n\t<path d=\"M100 100 L50 200 150 200 z\" fill=\"blue\" id=\"shape\"/>\n\t<path d=\"M200 100 h50 v50 h-50 z\" fill=\"red\" id=\"shape1\"/>\n\t<circle r=\"25\" cx=\"300\" cy=\"100\" fill=\"black\" id=\"shape3\" />\n</svg>\nviewBox (removeFromX, removeFromY, width, height) - eliminate the extra white space\nm - moveTo relative\nM - moveTo absolute \nl - line\nh - horizontal line\nv - vertical line\nz - close to begining\n\nFrom file:\n<img src=\"img/name.svg\" />\n<svg width=\"640\" height=\"480\" xmlns=\"http://www.w3.org/2000/svg\">\n <g>\n  <title>Layer 1</title>\n  <text fill=\"#000000\" stroke=\"#000000\" stroke-width=\"0\" x=\"65\" y=\"58\" id=\"svg_3\" font-size=\"24\" font-family=\"serif\" text-anchor=\"middle\" xml:space=\"preserve\">Malin</text>\n </g>\n</svg>",
                    "footer": "http://editor.method.ac/",
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451946093240,
                        "article": {
                            "title": "Rotate animation",
                            "header": null,
                            "content": "<svg width=\"200\" height=\"200\">\n\t<rect x=\"50\" y=\"50\" width=\"20\" height=\"20\" style=\"fill:rgb(0,0,255);stroke-width:3;stroke:rgb(0,0,0)\" />\n</svg>\n\nvar rect = document.getElementsByTagName('rect')[0];\nrect.currentTheta = 0;\nsetInterval(animate,10);\nfunction animate(){\n\trect.setAttribute(\"transform\",\"rotate(\" + rect.currentTheta + \" 60 60 )\" );\n\trect.currentTheta += 0.1;\n}",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451946137310,
                "article": {
                    "title": "Drag Drop",
                    "header": null,
                    "content": "Item:\n<div id=\"container\">\n\t<div class=\"hole\"><div draggable=\"true\" class=\"item\">1</div></div>\n\t<div class=\"hole\"><div draggable=\"true\" class=\"item\">2</div></div>\n\t<div class=\"hole\"><div draggable=\"true\" class=\"item\">3</div></div>\n\t<div class=\"hole\"></div>\n</div>\n<!-- draggable - not every element is draggable by default -->\n\nvar $draggedItem;\n\n$('.item').on('dragstart', dragging);\n$('.item').on('dragend', draggingEnded);\n\n$('.hole').on('dragenter', preventDefault);  // default to rejecting dragged items\n$('.hole').on('dragover', preventDefault);  // default to rejecting dragged items\n$('.hole').on('drop', dropItem);\n\nfunction dragging(e) {\n\t$(e.target).addClass('dragging');\n\t$draggedItem = $(e.target);\n}\n\nfunction draggingEnded(e) {\n\t$(e.target).removeClass('dragging'); \n}\n\nfunction preventDefault(e) {\n\te.preventDefault();\n}\n\nfunction dropItem(e) {\n\tvar hole = $(e.target);\n\tif (hole.hasClass('hole') && hole.children().length == 0) {\n\t\t$draggedItem.detach();\n\t\t$draggedItem.appendTo($(e.target));\n\t}\n}\n\nWords:\n<p>What cars do you like?</p>\n<ul id=\"carList\">\n\t<li draggable=\"true\" data-value=\"car,Chevrolet\">Chevrolet</li>\n\t<li draggable=\"true\" data-value=\"car,Ford\">Ford</li>\n\t<li draggable=\"true\" data-value=\"car,BMW\">BMW</li>\n</ul>\n<p>Drop your favorite cars below:</p>\n<ul id=\"favoriteCars\" style=\"min-height:100px;background-color:green;\"></ul>\n\njQuery.event.props.push('dataTransfer');  // add dataTransfer object to jQuery (setData())\n$('#carList').on('dragstart', draggingTO);\n$('#favoriteCars').on('dragenter', preventDefault);\n$('#favoriteCars').on('dragover', preventDefault); \n$('#favoriteCars').on('drop', dropItemTO);\n\nfunction draggingTO(e) {\n\tvar val = e.target.getAttribute('data-value');\n\te.dataTransfer.setData('text', val);  // pass data to drop object\n\te.dataTransfer.effectAllowed = 'copy';  // copy, link, move, or none\n}\n\nfunction preventDefault(e) {\n\te.preventDefault();\n}\n\nfunction dropItemTO(e) {\n        // e.dataTransfer.clearData()\n\tvar data = e.dataTransfer.getData('text').split(',');  // get passed data from dragging object\n\tif (data[0] == 'car') {\n\t\tvar li = document.createElement('li');\n\t\tli.textContent = data[1];\n\t\te.target.appendChild(li);\n\t}\n}\n\nFiles:\n<div id=\"target\">\n<p>Drag and drop files here...</p>\n</div>\n<table id=\"fileInfo\"></table>\n\njQuery.event.props.push('dataTransfer');\n$('#target').on('dragenter', preventDefault);\n$('#target').on('dragover', preventDefault);\n$('#target').on('drop', dropItemFile);\n\nfunction preventDefault(e) {\n        e.preventDefault();\n}\nfunction dropItemFile(e) {\n\tvar files = e.dataTransfer.files, $table = $('#fileInfo'), i = 0;\n\t$table.html('<thead><tr><th>Name</th><th>Type</th><th>Size</th></tr></thead>');\n\tfor (i = 0; i < files.length; i++) {\n\t\t$('<tr><td>'\n\t\t+ files[i].name + '</td><td>'\n\t\t+ files[i].type + '</td><td>'\n\t\t+ files[i].size + '</td></tr>').appendTo($table);\n\t}\n\tpreventDefault(e);\n}",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451946182419,
                "article": {
                    "title": "Location",
                    "header": null,
                    "content": "'geolocation' in navigator\nfunction supportsGeolocation() {\n\treturn 'geolocation' in navigator;\n}\n\nfunction showMessage(message) {\n\tconsole.log(message);\n}\n\nfunction getLocation() {\n\tif (supportsGeolocation()) {\n\t\tvar options = {\n\t\t\tenableHighAccuracy: true,\n\t\t\ttimeout: 3000,\n\t\t\tmaximumAge: 20000\n\t\t};\n\t\tnavigator.geolocation.getCurrentPosition(showPosition,showError,options);\n\t} else {\n\t\tshowMessage(\"Geolocation is not supported by this browser.\");\n\t}\n}\n\nfunction showPosition(position) {\n\tvar datetime = new Date(position.timestamp).toLocaleString();\n\tshowMessage(       \"Latitude: \" + position.coords.latitude + \"<br />\" \n\t\t\t + \"Longitude: \" + position.coords.longitude + \"<br />\" \n\t\t\t + \"Altitude: \" +  position.coords.altitude + \"<br />\" \n\t\t\t + \"Accuracy: \" +  position.coords.accuracy + \"<br />\" \n\t\t\t + \"Timestamp: \" + datetime);\n}\n\nfunction showError(error) {\n\tswitch (error.code) {\n\t\tcase error.PERMISSION_DENIED:\n\t\t\tshowMessage(\"User denied Geolocation access request.\");\n\t\t\tbreak;\n\t\tcase error.POSITION_UNAVAILABLE:\n\t\t\tshowMessage(\"Location information unavailable.\");\n\t\t\tbreak;\n\t\tcase error.TIMEOUT:\n\t\t\tshowMessage(\"Get user location request timed out.\");\n\t\t\tbreak;\n\t\tcase error.UNKNOWN_ERROR:\n\t\t\tshowMessage(\"An unknown error occurred.\");\n\t\t\tbreak;\n\t}\n}\n\nTrace location:\nvar watchId = 0;\nfunction startWatch() {\n\tif (supportsGeolocation()) {\n\t\tvar options = {\n\t\t\tenableHighAccuracy: true\n\t\t};\n\t\twatchId = navigator.geolocation.watchPosition(showPosition, showError, options);\n\t} else {\n\t\tshowMessage(\"Geolocation is not supported by this browser.\");\n\t}\n}\n\nfunction endWatch() {\n\tif (watchId != 0) {\n\t\tnavigator.geolocation.clearWatch(watchId);\n\t\twatchId = 0;\n\t\tshowMessage(\"Monitoring ended.\");\n\t}\n}\n\nDistance:\nfunction getDistance(lat1, lon1, lat2, lon2) {\n\tvar earthRadius = 3959; //miles\n\tvar latRadians = getRadians(lat2 - lat1);\n\tvar lonRadians = getRadians(lon2 - lon1);\n\tvar a = Math.sin(latRadians / 2) * Math.sin(latRadians / 2) +\n\tMath.cos(getRadians(lat1)) * Math.cos(getRadians(lat2)) *\n\tMath.sin(lonRadians / 2) * Math.sin(lonRadians / 2);\n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\tvar distance = earthRadius * c;\n\treturn distance;\n}\n\nfunction getRadians (latlongDistance) {\n\treturn latlongDistance * Math.PI / 180;\n}\n\nShow in map:\n<script src=\"http://maps.googleapis.com/maps/api/js\"></script>\n<div id=\"googleMap\" style=\"width:500px;height:380px;\"></div>\n\nfunction initialize() {\n    var options = {\n      enableHighAccuracy: true,\n      timeout: 3000,\n      maximumAge: 20000\n    };\n    navigator.geolocation.getCurrentPosition(function(position){\n    \tvar myCenter = new google.maps.LatLng(position.coords.latitude,position.coords.longitude)\n        var mapProp = {\n        \tcenter: myCenter,\n            zoom: 8,\n            mapTypeId: google.maps.MapTypeId.ROADMAP \n        };\n        var map=new google.maps.Map(document.getElementById(\"googleMap\"), mapProp);\n        var marker=new google.maps.Marker({\n\t  \t\tposition:myCenter,\n\t    });\n\t    marker.setMap(map);\n    },showError,options);\n}\ngoogle.maps.event.addDomListener(window, 'load', initialize);\nhttp://www.w3schools.com/googleapi/google_maps_overlays.asp",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451946215584,
                "article": {
                    "title": "Cookie",
                    "header": null,
                    "content": "JS:\n/*limit 4kb, max 30*/\nfunction setCookie(cookieName, cookieValue, expirationDays) {\n\tvar expirationDate = new Date();\n\texpirationDate.setDate(expirationDate.getDate() + expirationDays);\n\tcookieValue = cookieValue + \"; expires=\" + expirationDate.toUTCString();\n\tdocument.cookie = cookieName + \"=\" + cookieValue;\n}\n\nfunction getCookie(cookieName) {\n\tvar cookies = document.cookie.split(\";\");\n\tfor (var i = 0; i < cookies.length; i++) {\n\t\tvar cookie = cookies[i];\n\t\tvar array = cookie.split(\"=\");\n\t\tvar key = array[0];\n\t\tvar val = array[1];\n\t\tif (key.trim() == cookieName.trim())\n\t\t\treturn val;\n\t}\n}\n\nsetCookie('firstName', 'Malin', 1);\nvar firstName = getCookie('firstName');\nconsole.log(firstName);\n\njQuery:\nhttps://github.com/carhartl/jquery-cookie\n<script src=\"lib/jquery-cookie.js\"></script>\n$.cookie('jquery', 'Glenn');\nvar jq = $.cookie('jquery');\nconsole.log(jq);",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451946254076,
                "article": {
                    "title": "Web storage",
                    "header": null,
                    "content": "Storage objects\nSynchronously reading and writing to the hard drive\nsessionStorage\nlocalStorage\n5 MB\n'localStorage' in window\n\nlocalStorage.setItem('One',1);\nlocalStorage['Two'] = '2';\nlocalStorage.Three = 'Three';\n\nlocalStorage.getItem('One')\nlocalStorage['Two']\nlocalStorage.Three\n\nlocalStorage.removeItem('Three');\nlocalStorage.clear();\nlocalStorage.length\nlocalStorage.key(0) // One\n\nAdd object:\nvar person = {name: 'Malin',age: 39};\nlocalStorage.jsonOb = JSON.stringify(person);\nvar fromStorage = JSON.parse(localStorage.jsonOb);\n\nWatch for storage change in another tab:\n$('#button1').click(function(){\n\tlocalStorage.setItem('input',$('#1').val());\n})\nfunction respondToChange(e) {\n\tconsole.log(e.key,e.newValue,e.oldValue,e.url,e.storageArea);\t// check result in second tab!\n}\nwindow.addEventListener('storage', respondToChange, false);\njQuery:\nfunction respondToChangeJq(e) {\n\tconsole.log(e.originalEvent.key,e.originalEvent.newValue);\n}\n$(window).on('storage', respondToChangeJq);\n\nStorage limit:\ntry{ localStorage.setItem('x', x); } catch(e) {// degrade gracefully}",
                    "footer": null,
                    "personal": false
                },
                "children": [
                    {
                        "id": 1451946325541,
                        "article": {
                            "title": "Image in localStorage",
                            "header": null,
                            "content": "<img id=\"take\" src=\"img/img_logo_locale.gif\">\n<!-- <img src=\"\" id=\"tableBanner\" /> -->\n<script>\n\tvar bannerImage = document.getElementById('take');\n\tvar imgData = getBase64Image(bannerImage);\n\tlocalStorage.setItem(\"imgData\", imgData);\n\n\tfunction getBase64Image(img) {\n\t    var canvas = document.createElement(\"canvas\");\n\t    canvas.width = img.width;\n\t    canvas.height = img.height;\n\n\t    var ctx = canvas.getContext(\"2d\");\n\t    ctx.drawImage(img, 0, 0);\n\n\t    var dataURL = canvas.toDataURL(\"image/png\");\n\n\t    return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n\t}\n\n\t/*var dataImage = localStorage.getItem('imgData');\n\tbannerImg = document.getElementById('tableBanner');\n\tbannerImg.src = \"data:image/png;base64,\" + dataImage;*/\n</script>",
                            "footer": null,
                            "personal": false
                        },
                        "children": []
                    }
                ]
            },
            {
                "id": 1451946375812,
                "article": {
                    "title": "Web SQL",
                    "header": null,
                    "content": "connection - auto close!\nCreate DB and Table:\nfunction createTable(transaction) {\n\ttransaction.executeSql(\t\"CREATE TABLE IF NOT EXISTS authors(\" + \n\t\t\t\t\"id INTEGER PRIMARY KEY AUTOINCREMENT, \" +\n\t\t\t\t\"firstName TEXT, \"+ \n\t\t\t\t\"lastName TEXT, \" +\n\t\t\t\t\"dateCreated TIMESTAMP DEFAULT(datetime('now', 'localtime')))\");\n}\nfunction onError(error) {\n\tconsole.log(\"Error code: \" + error.code + \" Message: \" + error.message);\n}\nfunction onSuccess() {\n\tconsole.log(\"Migration complete!\");\n}\nvar db = openDatabase('Store', '1.0', 'My library', 5 * 1024 * 1024);  // name, version, displayName, estimatedSize (5 MB)\ndb.changeVersion('1.0' , '2.0', createTable, onError, onSuccess);\n\nInsert row:\nfunction itemInserted(transaction, results) {\n\tconsole.log(\"Id: \" + results.insertId, results);\n}\nvar db = openDatabase('Store', '2.0', 'My library', 5 * 1024 * 1024);\ndb.transaction(function(t){\n\tt.executeSql(\"INSERT INTO authors(firstName, lastName) VALUES(?, ?)\", ['Malin', 'Boyanov'], itemInserted);\n\t// t.executeSql(\"DROP TABLE books\");\n});\n\nUpdate row:\nvar db = openDatabase('Store', '2.0', 'My library', 5 * 1024 * 1024);\ndb.transaction(function(t){\n\tt.executeSql(\"UPDATE authors SET lastName = ? WHERE id = ?\", ['Stoychev', 1]);\n});\n\nDelete row:\ndb.transaction(function(t){\n \tt.executeSql(\"DELETE FROM authors WHERE id = ?\", [1]);\n});\n\nSelect:\nfunction displayResults(transaction, results) {\n\tfor (var i = 0; i < results.rows.length; i++) {\n\t\tvar item = results.rows.item(i);\n\t\tconsole.log(item.firstName, item.lastName, item.title ? item.title : '', item.numOfBooks ? item.numOfBooks : '');\n\t}\n}\nvar db = openDatabase('Store', '2.0', 'My library', 5 * 1024 * 1024);\ndb.transaction(function(t){\n\tt.executeSql(\"SELECT * FROM authors\", [], displayResults)\n});\ndb.transaction(function(t){\n\tt.executeSql(\"SELECT * FROM authors WHERE lastName = ?\", ['Stoychev'], displayResults)\n});\ndb.transaction(function(t){\n\tt.executeSql(\"SELECT * FROM authors WHERE lastName LIKE ?\", ['S%'], displayResults)\n});\ndb.transaction(function(t){\n\tt.executeSql(\t\"SELECT a.firstName, a.lastName, b.title FROM authors a \" +\n\t\t\t\"INNER JOIN books b ON a.id = b.authorId \" +\n\t\t\t\"WHERE a.lastName LIKE ?\", ['S%'], displayResults)\n});\ndb.transaction(function(t){\n\tt.executeSql(\"SELECT a.firstName, a.lastName, COUNT(b.id) AS numOfBooks FROM authors a \" +\n\t\"INNER JOIN books b ON a.id = b.authorId \" +\n\t\"GROUP BY a.id\", [], displayResults)\n});",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451946415485,
                "article": {
                    "title": "Indexed DB",
                    "header": null,
                    "content": "window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\nwindow.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction;\nwindow.IDBCursor = window.IDBCursor || window.webkitIDBCursor;\nwindow.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange;\nCreate DB and Table:\nvar indexedDB = window.indexedDB;\nvar library = indexedDB.open('Store', 1);  // changing version triger onupgradeneeded event!\n//indexedDB.deleteDatabase('Store');\nvar db;\nlibrary.onupgradeneeded = function(response) {\n\tresponse.currentTarget.result.createObjectStore(\"authors\", { keypath: 'id', autoIncrement: true });\n\t// response.currentTarget.transaction.objectStore(\"authors\").createIndex('lastName', 'lastName', { unique: true });\n\t// response.currentTarget.result.deleteObjectStore(\"authors\");\n};\n\nAdd row:\nvar indexedDB = window.indexedDB;\nvar library = indexedDB.open('Store', 1);\nvar db;\nlibrary.onsuccess = function(response) {\n\tdb = library.result;\n\taddAuthor();\n};\nlibrary.onerror = function (response) {\n\tconsole.log(\"Error code: \" + response.target.errorCode);\n};\nfunction addAuthor() {\n\tvar trans = db.transaction('authors', 'readwrite');\n\tvar authors = trans.objectStore(\"authors\");\n\tvar request = authors.add({firstName: 'Mark', lastName: 'Twain'});\n\trequest.onsuccess = function(response) {\n\t\tconsole.log('New record id: ' + request.result);\n\t};\n\trequest.onerror = function(response) { console.log(response.target.error.message) };\n}\n\nUpdate row:\nfunction updateAuthor() {\n\tvar trans = db.transaction('authors', 'readwrite');\n\tvar authors = trans.objectStore(\"authors\");\n\tvar request = authors.put({firstName: 'Bob', lastName: 'Defoe'}, 1);\n\trequest.onsuccess = function(response) {\n\t\tconsole.log('Updated record id: ' + request.result);\n\t};\n\trequest.onerror = function(response) {  };\n}\n\nGet row:\nfunction getAuthor() {\n\tvar trans = db.transaction('authors', 'readonly');\n\tvar authors = trans.objectStore(\"authors\");\n\tvar request = authors.get(1);\n\trequest.onsuccess = function(response) {\n\t\tvar author = response.target.result;\n\t\tconsole.log('Last name: ' + author.lastName, author);\n\t}; \n\trequest.onerror = function(response) { console.log(response.target.errorCode) };\n}\n\nDelete row:\nfunction deleteAuthor() {\n\tvar trans = db.transaction('authors', 'readwrite');\n\tvar authors = trans.objectStore(\"authors\");\n\tvar request = authors.delete(2);\n\trequest.onsuccess = function(response) {  };\n\trequest.onerror = function(response) {  };\n}\n\nGet ALL:\nfunction findAuthors() {\n\tvar trans = db.transaction('authors', 'readonly');\n\tvar authors = trans.objectStore(\"authors\");\n\tvar request = authors.openCursor();\n\trequest.onsuccess = function(response) {\n\t\tvar cursor = response.target.result;\n\t\tif (!cursor) { //console.log('No records found.');\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('Id: ' + cursor.key + ' Last name: ' + cursor.value.lastName);\n\t\tcursor.continue(); // iterate over every result\n\t};\n\trequest.onerror = function(response) { };\n}\n\nGet ordered, require index:\nfunction findAuthorsOrderByLastNameDESC() {\n\tvar trans = db.transaction('authors', 'readonly');\n\tvar authors = trans.objectStore('authors');\n\tvar index = authors.index('lastName');\n\tvar request = index.openCursor(null, IDBCursor.PREV); // DESC\n\trequest.onsuccess = function(response) {\n\t\tvar cursor = response.target.result;\n\t\tif (!cursor) {\n\t\t\t//console.log('No records found.');\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('Index value (lastName): ' + cursor.key + ' First name: ' + cursor.value.firstName);\n\t\tcursor.continue();\n\t};\n\trequest.onerror = function(response) { };\n}\n\nRange rows:\nfunction rangeFromTo() {\n\tvar trans = db.transaction('authors', 'readonly');\n\tvar authors = trans.objectStore('authors');\n\tvar index = authors.index('lastName');\n\t// var request = authors.openCursor(IDBKeyRange.bound(1, 3, false, false));\t//filter by id, false(incuded)\n\tvar request = index.openCursor(IDBKeyRange.bound('Defoe', 'Verne', false, false));\t//range by lastName: Defoe-Verne\n\t// var request = index.openCursor(IDBKeyRange.upperBound('Verne', false));\t//A-Verne\n\t// var request = index.openCursor(IDBKeyRange.lowerBound('Defoe', false));\t//Defoe-Z\n\t// var request = index.openCursor(IDBKeyRange.only('Twain'));\n\trequest.onsuccess = function(response) {\n\t\tvar cursor = response.target.result;\n\t\tif (!cursor) {\n\t\t\t//console.log('No records found.');\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('Index value (lastName): ' + cursor.key + ' First name: ' + cursor.value.firstName);\n\t\tcursor.continue();\n\t};\n\trequest.onerror = function(response) { };\n}",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1451946447128,
                "article": {
                    "title": "App cache",
                    "header": null,
                    "content": "<html xmlns=\"http://www.w3.org/1999/xhtml\" manifest=\"demo.appcache\">\n\ndemo.appcache:\nCACHE MANIFEST\n# 2012-02-21 v2.0.0 - change version to update cache\nlib/jquery.js\nhttp://www.w3schools.com/tags/img_logo.gif\n\nNETWORK:\n# never be cached\nimg/img_logo_locale.gif\n\nFALLBACK:\n# replace resource offline\n\nJS:\nvar appCache = window.applicationCache;\n\n$('button').click(function(){\n\tappCache.update(); // Attempt to update the user's cache.\n})\n\nif (appCache.status == window.applicationCache.UPDATEREADY) {  // The fetch was successful\n\tappCache.swapCache();  // replace the old cache with the new.\n}\n\nappCache.addEventListener('updateready', function(){\n\tconsole.log('updated')\n}, false);",
                    "footer": null,
                    "personal": false
                },
                "children": []
            }
        ]
    },
    {
        "id": 1480492835587,
        "article": {
            "title": "SOLID",
            "header": "OOP",
            "content": "# Single Responsibility Principle\n\"One class should have one and only one responsibility\"\nIn other words, you should write, change and maintain a class for only one purpose. If it is model class then it should strictly represent only one actor/ entity. This will give you the flexibility to make changes in future without worrying the impacts of changes for another entity.\n\nOpen Closed Principle\n\"Software components should be open for extension, but closed for modification\"\nIt means that your classes should be designed such a way that whenever fellow developers wants to change the flow of control in specific conditions in application, all they need to extend your class and override some functions and that’s it.\n\nLiskov’s Substitution Principle\n\"Derived types must be completely substitutable for their base types\"\nIt means that the classes fellow developer created by extending your class should be able to fit in application without failure. I.e. if a fellow developer poorly extended some part of your class and injected into framework/ application then it should not break the application or should not throw fatal exceptions.\n\nInterface Segregation Principle\n\"Clients should not be forced to implement unnecessary methods which they will not use\"\nTake an example. Developer Alex created an interface Reportable and added two methods generateExcel() and generatedPdf(). Now client ‘A’ wants to use this interface but he intend to use reports only in PDF format and not in excel. Will he achieve the functionality easily.\n\nDependency Inversion Principle\n\"Depend on abstractions, not on concretions\"\nIn other words. you should design your software in such a way that various modules can be separated from each other using an abstract layer to bind them together. The classical use of this principle of BeanFactory in spring framework. In spring framework, all modules are provided as separate components which can work together by simply injected dependencies in other module. They are so well closed in their boundaries that you can use them in other software modules apart from spring with same ease.",
            "footer": null,
            "personal": false
        },
        "children": []
    },
    {
        "id": 1480493313699,
        "article": {
            "title": "Design Patterns",
            "header": "http://www.dofactory.com/javascript/design-patterns",
            "content": "Creational Patterns\n  Abstract Factory\tCreates an instance of several families of classes\n  Builder               Separates object construction from its representation\n  Factory Method\tCreates an instance of several derived classes\n  Prototype\t        A fully initialized instance to be copied or cloned\n  Singleton\t        A class of which only a single instance can exist\n\nStructural Patterns\n  Adapter\tMatch interfaces of different classes\n  Bridge\tSeparates an object’s interface from its implementation\n  Composite\tA tree structure of simple and composite objects\n  Decorator\tAdd responsibilities to objects dynamically\n  Facade\tA single class that represents an entire subsystem\n  Flyweight\tA fine-grained instance used for efficient sharing\n  Proxy\t        An object representing another object\n\nBehavioral Patterns\n  Chain of Resp.\tA way of passing a request between a chain of objects\n  Command\tEncapsulate a command request as an object\n  Interpreter\tA way to include language elements in a program\n  Iterator\tSequentially access the elements of a collection\n  Mediator\tDefines simplified communication between classes\n  Memento\tCapture and restore an object's internal state\n  Observer\tA way of notifying change to a number of classes\n  State\t        Alter an object's behavior when its state changes\n  Strategy\tEncapsulates an algorithm inside a class\n  Template Method\tDefer the exact steps of an algorithm to a subclass\n  Visitor\tDefines a new operation to a class without change",
            "footer": null,
            "personal": false
        },
        "children": [
            {
                "id": 1482948096856,
                "article": {
                    "title": "book",
                    "header": null,
                    "content": "Pattern name and a description\nContext outline – the contexts in which the pattern is effective in responding to the users needs.\nProblem statement – a statement of the problem being addressed so we can understand the intent of the pattern.\nSolution – a description of how the user’s problem is being solved in an understandable list of steps and perceptions.\nDesign – a description of the pattern’s design and in particular, the user’s behavior in interacting with it\nImplementation – a guide to how the pattern would be implemented\nIllustrations – a visual representation of classes in the pattern (e.g. a diagram)\nExamples – an implementation of the pattern in a minimal form\nCo-requisites – what other patterns may be needed to support use of the pattern being described?\nRelations – what patterns does this pattern resemble? does it closely mimic any others?\nKnown usage – is the pattern being used in the wild? If so, where and how?\nDiscussions – the team or author’s thoughts on the exciting benefits of the pattern",
                    "footer": null,
                    "personal": false
                },
                "children": []
            }
        ]
    },
    {
        "id": 1481580642439,
        "article": {
            "title": "Gulp",
            "header": null,
            "content": "npm install --global gulp-cli;\nnpm init;\nnpm install --save gulp;\n\ncompress js files:\nnpm install --save gulp-uglify\ngulp.src('app/app.js').pipe(uglify()).pipe(gulp.dest('build'));\ngulp.src(['app/**/*.js','!app/lib/*.js']).pipe(uglify()).pipe(gulp.dest('build'));\n\ncodding statndarts:\nnpm install --save gulp-jshint;\n\nconcat:\nnpm install --save gulp-concat;\n.pipe(concat('app.js'))\n\nSynchronize:\nnpm install --save browser-sync;\ngulp.task('browser-sync', function () {\n   var files = [\n   \t  'app/**/*.js',\n      'app/**/*.html',\n      'app/css/**/*.css',\n      'app/imgs/**/*.png'\n   ];\n   browserSync.init(files, {\n      server: {\n         baseDir: './app'\n      }\n   });\n});\n\ngulpfile.js:\nvar gulp = require('gulp');\ngulp.task('default', function() {  // default run only with gulp\n  // place code for your default task here\n});\ngulp;\n\nrun several tasks:\ngulp.task('build', ['css', 'js']); // asynchronious\ngulp.task('css', ['js'], function() { // dependency js is compiled before css !\n\tconsole.log('css');\n});\ngulp.task('js', function() {\n\tconsole.log('js');\n});\ngulp build;\n\nwatch:\ngulp.task('watch', function () {\n   gulp.watch('app/**/templates/*.tpl.html', ['build']);\n});\n\n\n---------------\n\nnpm install --save typescript gulp gulp-typescript\n\ntsconfig.json:\n{\n    \"compilerOptions\": {\n        \"noImplicitAny\": true,\n        \"target\": \"es5\"\n    }\n}\n\nvar ts = require(\"gulp-typescript\");\nvar tsProject = ts.createProject(\"tsconfig.json\");\ngulp.task(\"typescript\", function () {\n    return tsProject.src('app/**/*.ts')\n        .pipe(tsProject())\n        .js.pipe(gulp.dest(\"build\"));\n});\n\nnpm install --save browserify tsify vinyl-source-stream\ngulp.task(\"copy-html\", function () {\n    return gulp.src(['app/*.html'])\n        .pipe(gulp.dest(\"build\"));\n});\ngulp.task(\"typeplus\", [\"copy-html\"], function () {\n    return browserify({\n        basedir: '.',\n        debug: true,\n        entries: ['app/js/main.ts'],\n        cache: {},\n        packageCache: {}\n    })\n    .plugin(tsify)\n    .bundle()\n    .pipe(source('bundle.js'))\n    .pipe(gulp.dest(\"build\"));\n});\n\n----------------\n\nnpm install --save watchify gulp-util\nvar watchify = require(\"watchify\");\nvar gutil = require(\"gulp-util\");\nvar watchedBrowserify = watchify(browserify({\n    basedir: '.',\n    debug: true,\n    entries: ['app/js/main.ts'],\n    cache: {},\n    packageCache: {}\n}).plugin(tsify));\nfunction bundle() {\n    return watchedBrowserify\n        .bundle()\n        .pipe(source('bundle.js'))\n        .pipe(gulp.dest(\"build\"));\n}\ngulp.task(\"typewatch\", [\"copy-html\"], bundle);\nwatchedBrowserify.on(\"update\", bundle);\nwatchedBrowserify.on(\"log\", gutil.log);\n\n-------------------\n\n!es5!\n\nnpm install --save gulp-uglify vinyl-buffer gulp-sourcemaps\nvar uglify = require('gulp-uglify');\nvar sourcemaps = require('gulp-sourcemaps');\nvar buffer = require('vinyl-buffer');\ngulp.task(\"typeugly\", [\"copy-html\"], function () {\n    return browserify({\n        basedir: '.',\n        debug: true,\n        entries: ['app/js/main.ts'],\n        cache: {},\n        packageCache: {}\n    })\n    .plugin(tsify)\n    .bundle()\n    .pipe(source('bundle.js'))\n    .pipe(buffer())\n    .pipe(sourcemaps.init({loadMaps: true}))\n    .pipe(uglify())\n    .pipe(sourcemaps.write('./'))\n    .pipe(gulp.dest(\"build\"));\n});\n\n----------------------\n\ngulp.task('copy-html', function () {\n    return gulp.src(['src/app/**/*.html'])\n        .pipe(gulp.dest('build'));\n});\ngulp.task('watch', function() {\n    gulp.watch('src/app/**/*.html', ['copy-html']);\n})\ngulp.task('default', ['copy-html','watch'], bundle);\nwatchedBrowserify.on('update', bundle);\nwatchedBrowserify.on('log', gutil.log);\n\n----------------------\ntsd:\nnpm install tsd -g\ntsd install jquery --save\ntsd install angular --save\ntsd install angular-route --save\ntsconfig.json:\n\"moduleResolution\": \"node\",",
            "footer": null,
            "personal": false
        },
        "children": [
            {
                "id": 1481580830090,
                "article": {
                    "title": "Typescript",
                    "header": null,
                    "content": "package.json:\n{\n  \"name\": \"seed\",\n  \"version\": \"1.0.0\",\n  \"description\": \"sceleton\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"test\"\n  },\n  \"keywords\": [\n    \"run\"\n  ],\n  \"author\": \"malin\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {},\n  \"dependencies\": {\n    \"angular\": \"^1.6.0\",\n    \"angular-route\": \"^1.6.0\",\n    \"browser-sync\": \"^2.18.5\",\n    \"browserify\": \"^13.1.1\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-concat\": \"^2.6.1\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"gulp-sourcemaps\": \"^1.9.1\",\n    \"gulp-typescript\": \"^3.1.3\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"gulp-util\": \"^3.0.7\",\n    \"jquery\": \"^3.1.1\",\n    \"jshint\": \"^2.9.4\",\n    \"tsd\": \"^0.6.5\",\n    \"tsify\": \"^2.0.3\",\n    \"typescript\": \"^2.1.4\",\n    \"vinyl-buffer\": \"^1.0.0\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"watchify\": \"^3.7.0\"\n  }\n}\n\ntsconfig.json;\n{\n    \"compilerOptions\": {\n        \"noImplicitAny\": true,\n        \"target\": \"es6\",\n\t    \"moduleResolution\": \"node\",\n\t    \"preserveConstEnums\": true,\n\t    \"experimentalDecorators\": true\n    },\n\t\"exclude\": [\n\t    \"node_modules\"\n\t]\n}\n\ngulpfile.js:\nvar gulp = require('gulp');\nvar browserify = require('browserify');\nvar source = require('vinyl-source-stream');\nvar tsify = require('tsify');\nvar watchify = require('watchify');\nvar gutil = require('gulp-util');\nvar browserSync = require('browser-sync');\nvar uglify = require('gulp-uglify');\nvar sourcemaps = require('gulp-sourcemaps');\nvar buffer = require('vinyl-buffer');\n\nvar watchedBrowserify = watchify(browserify({\n    basedir: '.',\n    debug: false,\n    entries: ['src/app/main.ts'],\n    cache: {},\n    packageCache: {}\n}).plugin(tsify));\nfunction bundle() {\n    return watchedBrowserify.bundle().pipe(source('bundle.js')).pipe(gulp.dest('build'));\n}\nwatchedBrowserify.on('update', bundle);\nwatchedBrowserify.on('log', gutil.log);\n\n/*copy all files but .ts to build folder*/\ngulp.task('copy', function () {\n    return gulp.src(['src/app/**/*.*','!src/app/**/*.ts']).pipe(gulp.dest('build'));\n});\n/*watch for changes and copy*/\ngulp.task('watch', ['copy'], function() {\n    gulp.watch(['src/app/**/*.*','!src/app/**/*.ts'], ['copy']);\n})\n/*create bundle.js composite js file*/\ngulp.task('static', ['watch'], bundle);\n/*start server and watch for changes*/\ngulp.task('default', ['static'], function () {\n   var files = [\n      'build/**/*.js',\n      'build/**/*.html',\n      'build/css/**/*.*'\n   ];\n   browserSync.init(files, {\n      server: {\n         baseDir: './build'\n      }\n   });\n});\n/*!es5!*/\ngulp.task(\"prod\", [\"copy\"], function () {\n    return browserify({\n        basedir: '.',\n        debug: true,\n        entries: ['src/app/main.ts'],\n        cache: {},\n        packageCache: {}\n    })\n    .plugin(tsify)\n    .bundle()\n    .pipe(source('bundle.js'))\n    .pipe(buffer())\n    .pipe(sourcemaps.init({loadMaps: true}))\n    .pipe(uglify())\n    .pipe(sourcemaps.write('./'))\n    .pipe(gulp.dest(\"build\"));\n});\n\nnpm install tsd -g\ntsd install jquery --save\ntsd install angular --save\ntsd install angular-route --save",
                    "footer": null,
                    "personal": false
                },
                "children": []
            }
        ]
    },
    {
        "id": 1482514573623,
        "article": {
            "title": "Angular",
            "header": null,
            "content": "Anonymous app: \n<html ng-app>\n<input ng-model=\"name\" type=\"text\">\n<h1>{{ name }}</h1>\n\nTwo-way binding:\ndigest - check for changes, executes on the $rootScope, all of the children scopes will perform dirty digest checking.\n\nSimplest controller:\nng-controller=\"MyController\"\nfunction MyController($scope) {}\n\nScope variables:\n$scope.object = {} - not primitives but objects - angular nature!\n\nShow changes in view:\n$scope.$apply(function(){});\n\nModule:\nangular.module('myApp', ['dependency']);\nvar app = angular.module('myApp');\nangular.module('myApp', []).run(function($rootScope) { // use .run to access $rootScope, check authenticated user\n    $rootScope.name = \"World\";\n});\n\n$scope:\nparent - child inheritance, overriding.\nng-app -> $rootScope -> $scope \nisolate scope - inside directive.\n\nController:\nWe use it to set up an initial state and to add custom behavior to the scope object. Not the appropriate place to do any DOM manipulation or formatting, data manipulation, or state maintenance.\nangular.module(\"myApp\", []).controller('MyController',\nfunction($scope) {\n    $scope.name = \"Ari\";\n});\n\nExpressions:\n{{}} no conditions, do not throw.\n\nWatch:\n$scope.$watch('expr', function(newVal, oldVal, scope) {\n    if (newVal !== oldVal) { }\n});\n\nInterpolate:\n$scope.previewText = Interpolate.parse('before {{var}} after', {var: 'replacement'});\nangular.module('interpolate', []).factory('Interpolate', ['$interpolate', function($interpolate) {\n\treturn {\n\t\tparse: function(text, context) {\n\t\t\treturn $interpolate(text)(context);\n\t\t}\n\t}\n}]);\n\nFilters:\n{{ name | uppercase }}\n{{ 123.456789 | number:2 }}\n{{ today | date:'shortDate' }} <!-- 8/9/13 -->\n{{ today | date:'MMM d, y' }} <!-- Aug 09, 2013 -->\n{{ ['Ari', 'Lerner', 'Likes', 'To', 'Eat', 'Pizza'] | filter:'e' }}\n{{ [{...}, {...}] | filter:{'property': 'Pizza'} }}\n{{ ['Ari', 'likes', 'to', 'travel'] | filter:isCapitalized }} - $scope.isCapitalized = function(str) { return str[0] == str[0].toUpperCase(); }\n{{ San Francisco is very cloudy | limitTo:3 }} <!-- San -->\n{{ San Francisco is very cloudy | limitTo:-6 }} <!-- cloudy -->\n{{ ['a', 'b', 'c', 'd', 'e', 'f'] | limitTo:1 }} <!-- [\"a\"] -->\n{{ [{...}, {...}, {...}] | orderBy: 'name' }}\n{{ [{...}, {...}, {...}] | orderBy: 'name':true }} - reverse\n$scope.name = $filter('lowercase')('Ari');\n\nCustom filter:\n{{ 'ginger loves dog treats' | lowercase | capitalize }}\nangular.module('myApp.filters', []).filter('capitalize', function() {\n   if (input)\n      return input[0].toUpperCase() + input.slice(1);\n});\n\nForm:\n<form name=\"signup_form\" novalidate ng-submit=\"signupForm()\">\n  <fieldset>\n    <legend>Signup</legend>\n      <label name=\"email\">Your email</label>\n      <input type=\"text\" name=\"name\" ng-model=\"name\" placeholder=\"Name\" ng-minlength=3  ng-maxlength=20 ng-pattern=\"/a-zA-Z/\" required />\n    <div class=\"error\" ng-show=\"signup_form.name.$dirty && signup_form.name.$invalid\">\n      <small class=\"error\" ng-show=\"signup_form.name.$error.required\">Your name is required.</small>\n      <small class=\"error\" ng-show=\"signup_form.name.$error.minlength\">Your name is required to be at least 3 characters</small>\n    </div>\n   <button type=\"submit\" ng-disabled=\"signup_form.$invalid\">Submit</button>\n  </fieldset>\n</form>\nformName.inputFieldName.$pristine;\nformName.inputFieldName.$dirty\nformName.inputFieldName.$valid\nformName.inputFieldName.$invalid\nformName.inputfieldName.$error\nng-required\n\nDirective:\n<my-directive></my-directive>\n<div my-directive></div>\n<div class=\"my-directive\"></div>\nangular.module('myApp', []).directive('myDirective', function() {\n  return {\n    restrict: 'E',\n    template: '<a href=\"http://google.com\">Click me to go to Google</a>',\n    replace: true,\n  }\n});\nShare data:\n<div my-directive my-url=\"http://google.com\" my-link-text=\"Click me to go to Google\"></div>\nangular.module('myApp', []).directive('myDirective', function() {\n  return {\n    restrict: 'A',\n    replace: true,\n    scope: {\n      myUrl: '=',  // two way binding, can change from inside directive\n      myLinkText: '@' // one way binding attr=\"{{expression}}\"\n      // & one way up\n    },\n    template: '<a href=\"{{myUrl}}\">' + '{{myLinkText}}</a>'\n  }\n})\nangular.module('myApp', []).directive('myDirective', function() {\nreturn {\nrestrict: String, // EACM\npriority: Number,\nterminal: Boolean,\ntemplate: String or Template Function: function(tElement, tAttrs) (...},\ntemplateUrl: String,\nreplace: Boolean or String,\nscope: Boolean or Object, // true inherit parent scope. {} isolated scope\ntransclude: Boolean,  // element content is set inside directive content, directive wrap element content.\ncontroller: String or function(scope, element, attrs, transclude, otherInjectables) { ... }, // can share logic between directives\ncontrollerAs: String,\nrequire: String, // dependency '?ngModel' not working in isolated scope\nlink: function(scope, iElement, iAttrs) { ... },  // specific logic for directive do not share. Link scope to DOM\ncompile: return an Object OR // transform DOM\n  function(tElement, tAttrs, transclude) {\n    return {\n       pre: function(scope, iElement, iAttrs, controller) { ... },\n       post: function(scope, iElement, iAttrs, controller) { ... }\n    }\n    // or\n    return function postLink(...) { ... }\n  }\n};\n});\nrequire 'SomeController',\nlink: function (scope, element, attrs, SomeController) {}\n\nng-disabled, ng-readonly:\n<input> (text, checkbox, radio, number, url, email, submit) <textarea> <select> <button>\n\nObjects:\nobject declared in rootScope can be changed in child scope by reference.\napp.run(function($rootScope) {\n    $rootScope.obj = {name:'root'};\n    $rootScope.changeRoot = function() {\n        $rootScope.obj.name = 'root';\n    }\n});\n$scope.changeRoot = function() {\n    $scope.obj.name = 'child';\n}\n\nInclude:\n<div ng-include=\"'some.html'\" ng-controller=\"FirstController\" ng-init=\"name = 'World'\"></div>\n<script type=\"text/ng-template\" id=\"some.html\">\n\tHi there... {{name}}\n</script>\n\nng-repeat:\n$index: iterator offset of the repeated element (0..length-1)\n$first: true if the repeated element is first in the iterator\n$middle: true if the repeated element is between the first and last in the iterator\n$last: true if the repeated element is last in the iterator\n$even: true if the iterator position $index is even (otherwise false)\n$odd: true if the iterator position $index is odd (otherwise false)\n<li ng-repeat=\"person in people\" ng-class=\"{even: !$even, odd: !$odd}\">\n    {{person.name}} lives in {{person.city}}\n</li>\n\nSelect:\n<select ng-model=\"city\" ng-options=\"city.name for city in cities\">\n    <option value=\"\">Choose City</option>\n</select>\n\nClass:\nng-class=\"{red: x > 5}\" - set class by condition.\n\nConfiguration:\nangular.module('myApp', []).config(function($provide) {});\napp..config(function($provide, $compileProvider) {\n    $provide.factory('myFactory', function() {return {};});\n    $compileProvider.directive('myDirective',function() {return {template: '<button>Click me</button>'}\n})\n\nInjector:\nvar injector = angular.injector(['ng', 'myApp']);\nvar $controller = injector.get('$controller');\nvar scope = injector.get('$rootScope').$new();\nvar MyController = $controller('MyController', {$scope: scope})\ninjector.invoke(function($http, dependency) {});\n\nDependency injection:\nangular.module('myApp').controller('MyController', ['$scope', 'greeter', function($scope, greeter) { }]);\n\nFactory:\nSingleton\nangular.module('myApp.services', []).factory('githubService', function() { return {}; });\n\nService:\nvar Person = function() {}\nangular.service('personService', Person); // new Person() on instance\n\nProvider:\nParent\n.provider('myService', { $get: function() { return { 'username': 'auser' } }});\n\nConstant:\nangular.module('myApp').constant('apiKey', '123123123')\n\nValue:\nangular.module('myApp').value('apiKey', '123123123');\n\nDecorator:\nvar githubDecorator = function($delegate, $log) {}\n.config(function($provide) { $provide.decorator('githubService', githubDecorator);});\n\nhttp:\nvar promise = $http({method: 'GET', url: '/api/users.json'});\npromise.success(function(data, status, headers, config) { });\npromise.error(function(data, status, headers, config) { });\n$scope.$apply(function() {$http({method: 'GET',url: '/api/users.json'});});\n$http.get('/api/users.json', { cache: true })\n\ninterceptor:\nangular.module('myApp').factory('myInterceptor',function($q) {\nvar interceptor = {\n'request': function(config) {\n    return config;\n},\n'response': function(response) {\n    return response;\n},\n'requestError': function(rejection) {\n    return response;\n},\n'responseError': function(rejection) {\n    return rejection; // or new promise\n}\n};\nreturn interceptor;\n});\nangular.module('myApp').config(function($httpProvider) { $httpProvider.interceptors.push('myInterceptor'); });\nangular.module('myApp').config(function($httpProvider) {$httpProvider.defaults.headers.common['X-Requested-By'] = 'MyAngularApp'; });\n$http.defaults.common['X-Auth'] = \"RandomString\";\n\nresource:\nREST\nangular.module('myApp', ['ngResource']);\nvar User = $resource('/api/users/:userId.json',{userId: '@id'});\nUser.get(function(resp) {})\nUser.get({id: '123'}, function(resp) {})\nUser.query(function(users) {})\nUser.save({}, {name: 'Ari'}, function(response) {})\nUser.remove({}, {id: '123'}, function(response) {})\nUser.get({id: '123'}, function(user) {\n    user.name = 'Ari';\n    user.$save(); // Save the user or $remove() $delete()\n});\n\nCORS:\nangular.module('myApp').config(function($httpProvider) {\n    $httpProvider.defaults.useXDomain = true;\n    delete $httpProvider.defaults.headers.common['X-Requested-With'];\n});\n\nEvents:\nscope.$emit('user:logged_in', scope.user); - Up to rootScope, stopPropagation() \nscope.$broadcast('cart:checking_out', scope.cart); - Down to child scopes\nscope.$on('$routeChangeStart', function(evt, next, current) { });\n$scope.$on('$destroy', function() {\n    if (timer) { $timeout.cancel(timer); }\n});\n\nWatch:\nwe should never use $watch in a controller move to service.\n$scope.$watch('full_name', function(newVal, oldVal, scope) {\n    if (newVal === oldVal) { } else { }\n});\n$scope.$watchCollection('names',\nfunction(newNames, oldNames, scope) { });\n\nTranslate:\nangular-translate\nvar app = angular.module('myApp', ['pascalprecht.translate']);\napp.config(function ['$translateProvider', ($translateProvider) {\n$translateProvider.translations('en', {\n    HEADLINE: 'Hello there, This is my awesome app!',\n    INTRO_TEXT: 'And it has i18n support!'\n})\n.translations('de', {\n    HEADLINE: 'Hey, das ist meine großartige App!',\n    INTRO_TEXT: 'Und sie untersützt mehrere Sprachen!'\n});\n$translateProvider.preferredLanguage('en');\n}]);\n<h2>{{ 'TRANSLATION_ID' | translate }}</h2>\n$translate.uses(langKey); // change language\nangular-translate-loader-url\nangular-translate-loader-static-files\n$translateProvider.useStaticFilesLoader({\n    prefix: '/languages/',\n    suffix: '.json'\n});\n\nCache:\nvar cache = $cacheFactory.create('myCache');\ncache.put(\"hello\", \"world\");\ncache.get(\"hello\");\ncache.remove(\"hello\");\n$http({method: 'GET', url: '/api/users.json', cache: true});\n$http.get('/api/users.json', {cache: true});\nvar cache = $cacheFactory.get('$http');\nvar usersCache =cache.get('http://example.com/api/users.json');\ncache.remove('http://example.com/api/users.json');\nvar myCache = $cacheFactory.get('myCache');\nangular.module('myApp')\n.config(function($httpProvider) {\n$httpProvider.defaults.cache =$cacheFactory('myCache', {capacity: 20});});\n\nSecurity:\n$scope.$watch('email.rawHtml', function(v) {\n  if (v) {\n    $scope.email.htmlBody = $sce.trustAsHtml($scope.email.rawHtml);\n  }\n})\n$sce.trustAsJs($scope.email.rawJs);\n$scope.runJs = function() {\n    eval($scope.email.jsBody.toString());\n}\nangular.module('myApp', []).config(['$sceDelegateProvider', function($sceDelegateProvider) {\n    $sceDelegateProvider.resourceUrlWhitelist(['.*']);\n}]);\n\nDebug:\nvar rootEle = document.querySelector(\"html\");\nvar ele = angular.element(rootEle);\nvar scope = ele.scope();\nvar ctrl = ele.controller();\nvar ctrl = ele.controller('ngModel');\nvar injector = ele.injector();\ndebugger;\nBatarang - tool\n\nStatis:\nLineman - static web app\nnpm install -g lineman\ngit clone https://github.com/davemo/lineman-angular-template my-app\nlineman run\n\nRouter-ui typescript:\nimport angularUiRouter from 'angular-ui-router'\nangular.module('travelAgency', [angularUiRouter])\n.config(($stateProvider: ng.ui.IStateProvider) => {\n        const template = require('./travelAgency/travel/travel-list-directive.tpl.html')\n        $stateProvider.state('travel', {\n            url: '/travel',\n            template: template\n        })\n});\n<div ui-view></div>",
            "footer": null,
            "personal": false
        },
        "children": [
            {
                "id": 1482515076747,
                "article": {
                    "title": "Example",
                    "header": null,
                    "content": "setInterval(function() {\n\t$scope.$apply(updateClock);\n}, 1000);\n\nangular.module('myApp', []);\nangular.module('myApp') - getter\n\nangular.module('myApp', []).run(function($rootScope) {\n\t$rootScope.name = \"World\";\n});\n\nangular.module(\"myApp\", []).controller('MyController',function($scope) {\n\t$scope.name = \"Ari\";\n});\n\nfunction FirstController($scope) {\n\t$scope.message = \"hello\";\n}\n\nvar app = angular.module('app', []);\napp.controller('FirstController', function($scope) {\n\t$scope.message = \"hello\";\n});\n\napp.controller('ParentController', function($scope) {\n\t$scope.person = { is: 'parent' };\n});\napp.controller('ChildController', function($scope) {\n\t$scope.person = { is: 'overriden' };\n});\n\nangular.module('interpolate', []).factory('Interpolate', ['$interpolate', function($interpolate) {\n\treturn {\n\t\tparse: function(text, context) {\n\t\t\treturn $interpolate(text)(context);\n\t\t}\n\t}\n}]);\n\nangular.module('filters', []).filter('capitalize', function() {\n\treturn function(input) {\n\t\tif (input && isNaN(input))\n\t\t\treturn input[0].toUpperCase() + input.slice(1);\n\t\t}\n});\n\napp.directive('myDirective', function() {\n\treturn {\n\t\trestrict: 'EA',\n\t\treplace: true,\n\t\ttemplate: '<a href=\"{{myUrl}}\">Click me to go to Google</a>',\n\t\tscope: {\n\t\t\tmyUrl: '@'\n\t\t}\n\t}\n});\n\n<input type=\"text\" ng-model=\"myUrl\" placeholder=\"URL\"/>\n<div my-directive my-url=\"myUrl\" my-text=\"Click\"></div>\napp.directive('myDirective', function() {\n\treturn {\n\t\trestrict: 'EA',\n\t\treplace: true,\n\t\ttemplate: '\\\n\t\t\t<div>\\\n\t\t\t\t<label>My Url Field:</label>\\\n\t\t\t\t<input type=\"text\" ng-model=\"myUrl\" />\\\n\t\t\t\t<a href=\"{{myUrl}}\">{{myText}}</a>\\\n\t\t\t</div>\\\n\t\t',\n\t\tscope: {\n\t\t\tmyUrl: '=',\n\t\t\tmyText: '@'\n\t\t}\n\t}\n});\n\n<input type=\"checkbox\" ng-checked=\"someProperty\" ng-init=\"someProperty = true\" ng-model=\"someProperty\">\n<input type=\"text\" ng-readonly=\"someProperty\" value=\"Some text here\"/>\n\n<div ng-include=\"'some.html'\" ng-controller=\"FirstController\" ng-init=\"name = 'World'\">Hello {{ name }}</div>\n\nangular.module('myApp', [])\n\t.directive('myDirective', function() {\n\t\treturn {\n\t\t\trestrict: String,\n\t\t\tpriority: Number,\n\t\t\tterminal: Boolean,\n\t\t\ttemplate: String or Template Function:\n\t\t\tfunction(tElement, tAttrs) (...},\n\t\t\ttemplateUrl: String,\n\t\t\treplace: Boolean or String,\n\t\t\tscope: Boolean or Object,\n\t\t\ttransclude: Boolean,\n\t\t\tcontroller: String or\n\t\t\tfunction(scope, element, attrs, transclude, otherInjectables) { ... },\n\t\t\tcontrollerAs: String,\n\t\t\trequire: String,\n\t\t\tlink: function(scope, iElement, iAttrs) { ... },\n\t\t\tcompile: return an Object OR\n\t\t\tfunction(tElement, tAttrs, transclude) {\n\t\t\treturn {\n\t\t\t\tpre: function(scope, iElement, iAttrs, controller) { ... },\n\t\t\t\tpost: function(scope, iElement, iAttrs, controller) { ... }\n\t\t\t}\n\t\t\t// or\n\t\t\treturn function postLink(...) { ... }\n\t\t}\n\t};\n});\n\napp.directive('requireObject', function() {\n\treturn {\n\t\trestrict: 'AE',\n\t\trequire: 'ngModel',\n\t\ttemplate: '<h4>{{cities}}</h4>'\n\t}\n});\n\napp.run(function($rootScope) { \n\t$rootScope.$on('$routeChangeStart', function(evt, next, current) {\n\t\tconsole.log(next.templateUrl);\n\t});\n});",
                    "footer": null,
                    "personal": false
                },
                "children": []
            },
            {
                "id": 1482515449921,
                "article": {
                    "title": "Definitions",
                    "header": null,
                    "content": "$digest() - on the value to check whether the value is “dirty.” it will look for potential changes on the value.\n$scope object whose properties are all available to the view and with which the controller can interact.\n$scope.variable = {x:var}; {{variable.x}} - best practice - work by objects\n$scope - local context for the DOM, extends parent scope OOP\n$scope.$apply -> $digest() - propagate model changes throughout the application. If the callback executes outside of the Angular context.\n$rootScope - parent of all $scope objects. On $digest all of the children scopes will perform dirty digest checking.\n$destroy() - clean up the child scope.\nng-repeat - create own child scope.\nisolate scope - created inside of a directive.\ncontroller - It’s bad practice to allow any DOM interaction or data manipulation inside the controller.\n{{}} - expression - no error or conditions\n$parse - $parse('person')($scope) - digest variable from scope\n$interpolate - $interpolate('befor {{var}} after')({var: 'replacement'}) - evaluate expression in variable\n$interpolateProvider - change expression wrapper symbols {{}}\n$filter('lowercase')('TeXt') - {{ var | lovercase }} - {{ today | date:'dd.MM.yyyy' }} - {{ toBeFitered | filter:isCapitalized }} - filters\nnovalidate - prevent native HTML5 validation\nrequired, ng-pattern=\"/a-zA-Z/\"\nformName.inputFieldName.property - accsess to property in form\nformName.inputFieldName.$valid\nsignup_form.email.$error.email\n$parsers -> $setValidity('name', true) - <input type=\"text\" name=\"name\" ng-model=\"name\" ensure-unique=\"name\" required /> - custom validation\n$formatters -> $filter('number')(v) - format value\n.directive - restrict -  element (E), an attribute (A), a class (C), or a comment (M)\ndirective restrict: 'EA'\ndirective scope: { myUrl: '@' } - binding strategy\ndirective scope: true - inherit parent scope\ndirective transclude - capture html content and set it inside directive temlete content, styling and more, Decorator.\ndirective compile - change DOM\ndirective link - is invoked after the compiled template has been linked to the scope, and is therefore responsible for setting up event listeners, watching for data changes, and manipulating the live DOM.\nng-include=\"'some.html'\"\nng-repeat - $index, $first, $last\nng-bind - like {{}} but wait for page toload, no flashing unrendered content.\nng-bind-template=\"{{ message }} {{ name }}\" - multiple\nng-change=\"change()\"\nng-form - nest forms, parent is valid when all children are valid\nng-submit\nng-attr-(suffix) - for special attribute.\nangular.module('myApp', []).run(function($rootScope - execute befor config, is user authenticated when change route\nng-view - own scope load route\nwhen('/dashboard/:id' -> $routeParams.id - parameters\n$location.path('/home')\n$provider - use if you want to use configuration. parent of factory(singelton) and service\ndecorator - $provider interceptor?",
                    "footer": null,
                    "personal": false
                },
                "children": []
            }
        ]
    },
    {
        "id": 1482877928026,
        "article": {
            "title": "es6",
            "header": null,
            "content": "\"use strict\";\n\nconst PI = 3.141593\nconsole.log('constant: ',PI);\n\nlet array = [1,2,3];\nlet callbacks = [];\nfor (let i = 0; i < 1; i++) {\n    let x = array[i]\n   \tcallbacks[i] = function() { return array[i] * 2 }\n}\n//console.log('no ',x);\nconsole.log('for scope: ',callbacks[0]());\n\n{\n    function foo () { return 1 }\n    foo() === 1\n    {\n        function foo () { return 2 }\n        foo() === 2\n    }\n    console.log('block scope: ',foo() === 1);\n}\n\nlet odds  = array.map(v => v + 1);\nconsole.log('add one: ',array,odds);\n\nlet pairs = array.map(v => ({ even: v, odd: v + 1 }));\nconsole.log('create object: ',array,pairs);\n\nlet nums = array.map((v, index) => v + index);\nconsole.log('index: ',array,nums);\n\nlet twos = [];\narray.forEach(v => {\n   if (v % 2 === 0)\n       twos.push(v)\n})\nconsole.log('separate two: ',twos);\n\nclass One {\n\tconstructor(){\n\t\tthis.array = [1,2,3];\n\t\tthis.twos = [];\n\t}\n\trotate() {\n\t\tthis.array.forEach((v) => {\n\t\t    if (v % 2 === 0)\n\t\t        this.twos.push(v)\n\t\t})\n\t\treturn this;\n\t}\n\tshow(){\n\t\tconsole.log('this in class: ',this.twos);\n\t}\n}\nnew One().rotate().show();\n\nfunction f (x, y = 7, z = 42) {\n    return x + y + z\n}\nconsole.log('default parameter values: ',f(1) === 50);\n\nfunction f (x, y, ...a) {\n    return (x + y) * a.length\n}\nconsole.log('varargs: ',f(1, 2, \"hello\", true, 7) === 9);\n\nvar str = \"foo\";\nvar chars = [...str];\nconsole.log('toArray: ',chars);\n\nvar customer = { name: \"Foo\" }\nvar card = { amount: 7, product: \"Bar\", unitprice: 42 }\nvar message = `Hello ${customer.name},\nwant to buy ${card.amount} ${card.product} for\na total of ${card.amount * card.unitprice} bucks?`\nconsole.log('string concatination: ',message);\n\nconsole.log('http: ',`http://example.com/foo?bar=${1 + 2}&quux=${3}`);\n\nfunction quux (strings, ...values) {\n\tconsole.log('all: ',strings,'raw: ',strings.raw,'value: ',values);\n}\nquux `foo${ 42 }bar` // no ()!\n\nconsole.log('interpolate: ',String.raw `foo${ 42 }bar` === \"foo42bar\")\n\nconsole.log('found matches in string: ',JSON.stringify(/^Foo\\s+(\\d+)/y.exec('Foo 1')));\n\nlet x = 2, y = 2;\nlet obj = {x,y};\nconsole.log('enchanced object: ',obj);\n\nlet num = function(){return 2;}\nlet dinObj = {\n    foo: \"bar\",\n    [\"baz\" + num()]: 42\n}\nconsole.log('dynamic object property: ',dinObj);\n\nlet operations = {\n    sum (a, b) {\n    \treturn a + b;\n    }\n}\nconsole.log('object method: ',operations.sum(2,3),operations);\n\nvar [a, , b] = array;  // a=1 b=3\n[b, a] = [a, b] // replace a and b\nconsole.log('fill variables from array: ',a,b);\n\nvar { op, lhs, rhs } = {op:1,lhs:2,rhs:3}\nconsole.log('fill variables from object: ',op,lhs,rhs);\n\nvar { op: a, lhs: { op: b }, rhs: c } = {op:1,lhs:{op:2},rhs:3}\nconsole.log('fill from object deep: ',a,b,c);\n\nfunction fromArray ([ name, val ]) {\n    console.log('extract from array: ',name, val)\n}\nfunction fromObject ({ name, val }) {\n    console.log('extract from object: ',name, val)\n}\nfromArray([\"bar\", 42, 5])\nfromObject({name: \"bar\", val: 42, not:6})\n\nvar list = [7, 42]\nvar [aDef = 1, bDef = 2, cDef = 3, d] = list\nconsole.log('defaults: ',aDef,bDef,cDef,d);\n\nimport * as math from \"./math\"\nconsole.log('from import 2π: ',math.sum(math.pi, math.pi))\n// import { sum, pi } from \"./math\"\n// console.log('from import 2π: ',sum(pi, pi))\nimport exp, { pi, e } from \"./plus\"  // exp is default\nconsole.log('from import e^{π} = ' + exp(pi))\n\nclass Animal {\n\tconstructor() {\n\t\tconsole.log('class Animal');\n\t}\n\teat() {\n\t\tconsole.log('food');\n\t}\n}\n\nclass Horse extends Animal {\n\tstatic instance() {\n\t\treturn new Horse();\n\t}\n\tconstructor(){\n\t\tsuper();\n\t\tconsole.log('class Horse');\n\t}\n\teat(){\n\t\tsuper.eat();\n\t\tconsole.log('Grass');\n\t}\n\tset years(years) { \n\t\tthis._years = years               \n\t}\n    get years() { \n    \treturn this._years                \n    }\n}\nconst horse = Horse.instance();\nhorse.eat();\nhorse.years = 20;\nconsole.log('set get: ',horse.years);\n\n/*-------------*/\nimport 'babel-polyfill';\nfunction* range (start, end, step) {\n    while (start < end) {\n        yield start\n        start += step\n    }\n}\nlet fillArray = [];\nfor(let i of range(0, 10, 2)) {\n    fillArray.push(i); // 0, 2, 4, 6, 8\n}\nconsole.log('generator: ',fillArray);\n\nlet fibonacci = function* (numbers) {\n    let pre = 0, cur = 1\n    while (numbers-- > 0) {\n        [ pre, cur ] = [ cur, pre + cur ]\n        yield cur\n    }\n}\nlet numbers = [...fibonacci(10)]\nconsole.log('fibonacci 10 iterations: ',numbers);\n\nclass Clz {\n    * bar () {\n        return 1;\n    }\n}\nconsole.log(new Clz().bar());\n\n/*------------*/\n\nlet s = new Set()\ns.add(\"hello\").add(\"goodbye\").add(\"hello\").add(\"no\")\ns.delete(\"no\");\ns.size === 2\ns.has(\"hello\") === true\nfor (let key of s.values()) {// insertion order\n    console.log('set key: ',key)\n}\n\nlet name = 'Malin';\nlet m = new Map()\nm.set(\"hello\", 30)\nm.set(name, 41)\nm.get(name) === 41\nm.size === 2\nfor (let [key, val] of m.entries()) {\n    console.log(key + \" = \" + val)\n}\n\nlet isMarked = new WeakSet()\nlet attachedData = new WeakMap()\n\nexport class Node {\n    constructor (id) { \n    \tthis.id = id                  \n    }\n    mark() { \n    \tisMarked.add(this)            \n    }\n    unmark() { \n    \tisMarked.delete(this)         \n    }\n    marked() { \n    \treturn isMarked.has(this)     \n    }\n    set data(data) { \n    \tattachedData.set(this, data)  \n    }\n    get data()     { \n    \treturn attachedData.get(this) \n    }\n}\n\nlet foo = new Node(\"foo\")\n\nJSON.stringify(foo) === '{\"id\":\"foo\"}'\nfoo.mark()\nfoo.data = \"bar\"\nfoo.data === \"bar\"\nJSON.stringify(foo) === '{\"id\":\"foo\"}'\n\nisMarked.has(foo)     === true\nattachedData.has(foo) === true\nfoo = null  /* remove only reference to foo */\nattachedData.has(foo) === false\nisMarked.has(foo)     === false\n\n/*--------------*/\n\nvar dst  = { quux: 0 }\nvar src1 = { foo: 1, bar: 2 }\nvar src2 = { foo: 3, baz: 4 }\nObject.assign(dst, src1, src2)\nconsole.log('assign: ',dst.quux === 0,dst.foo === 3,dst.bar === 2,dst.baz === 4);\n\nconsole.log('find one: ',array.find(x => x > 0));\n\nconsole.log('repeat: ',\"foo\".repeat(3));\n\nconsole.log('search in string (, startSearchFrom): ', \n\t\"hello\".startsWith(\"ello\", 1),\n\t\"hello\".endsWith(\"hell\", 4),\n\t\"hello\".includes(\"ell\"),\n\t\"hello\".includes(\"ell\", 1),\"hello\".includes(\"ell\", 2));\n\nNumber.isNaN(42) === false\nNumber.isNaN(NaN) === true\nNumber.isFinite(123) === true\nNumber.isSafeInteger(42) === true\nNumber.isSafeInteger(9007199254740992) === false\nconsole.log('compare: ',Math.abs((0.1 + 0.2) - 0.3) < Number.EPSILON);\n\nconsole.log('truncate number: ',Math.trunc(42.7));\n\nconsole.log('positive or negative: ',Math.sign(7));\n\n/*-------------*/\n\nfunction asyncMsg(msg,timeout) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => \n        \tresolve(`promise: ${msg} ${timeout}ms`)\n        , timeout);\n    })\n}\nasyncMsg(\"Hi\",300).then((msg) =>\n    console.log(msg)\n);\nPromise.all([\n    asyncMsg(\"One\", 800),\n    asyncMsg(\"Two\", 500),\n    asyncMsg(\"Three\", 100)\n]).then((data) => {\n    let [ foo, bar, baz ] = data\n    console.log(`promise synch all: first=${foo} second=${bar} third=${baz}`)\n}, (err) => {\n    console.log(`error: ${err}`)\n})\n\nlet target = {\n    foo: \"Exist\"\n}\nlet proxy = new Proxy(target, {\n    get (receiver, name) {\n        return name in receiver ? receiver[name] : `not in object, ${name}`\n    }\n})\nconsole.log('proxy: ',proxy.foo === \"Exist\",proxy.find === \"not in object, find\");\n\nlet dummy = { a: 1 }\nObject.defineProperty(dummy, \"b\", { value: 2 })\ndummy[Symbol(\"c\")] = 3\nconsole.log('Reflection object: ',Reflect.ownKeys(dummy),Object.getOwnPropertyNames(dummy));\n\nvar list = [\"с\", \"а\", \"к\"]\nvar l10nBG = new Intl.Collator(\"bg\")\nconsole.log('sort bg: ',list.sort(l10nBG.compare))\n\nvar l10nEN = new Intl.NumberFormat(\"en-US\")\nconsole.log('format number: ',l10nEN.format(1234567.89))\n\nvar l10nUSD = new Intl.NumberFormat(\"en-US\", { style: \"currency\", currency: \"USD\" })\nconsole.log('format curency: ',l10nUSD.format(100200300.40));\n\nvar l10nDE = new Intl.DateTimeFormat(\"de-DE\")\nconsole.log('format date: ',l10nDE.format(new Date(\"2015-01-02\")))",
            "footer": "math.js:\nexport function sum (x, y) { return x + y }\nexport var pi = 3.141593\n\nplus.js:\nexport * from \"./math\"\nexport var e = 2.71828182846\nexport default (x) => Math.exp(x)",
            "personal": false
        },
        "children": [
            {
                "id": 1482878039226,
                "article": {
                    "title": "stage",
                    "header": null,
                    "content": "package.json:\n{\n  \"name\": \"play\",\n  \"version\": \"1.0.0\",\n  \"description\": \"playground\",\n  \"main\": \"index.js\",\n  \"dependencies\": {\n    \"babel-cli\": \"^6.18.0\",\n    \"babel-core\": \"^6.21.0\",\n    \"babel-polyfill\": \"^6.20.0\",\n    \"babel-preset-es2015\": \"^6.18.0\",\n    \"babelify\": \"^7.3.0\",\n    \"browserify\": \"^13.1.1\",\n    \"fs\": \"0.0.1-security\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-babel\": \"^6.1.2\",\n    \"gulp-util\": \"^3.0.7\",\n    \"vinyl-source-stream\": \"^1.1.0\"\n  },\n  \"devDependencies\": {},\n  \"scripts\": {\n    \"test\": \"run\"\n  },\n  \"author\": \"malin\",\n  \"license\": \"ISC\",\n  \"babel\": {\n    \"presets\": [\n      \"es2015\"\n    ],\n    \"plugins\": [\n      \"transform-regenerator\"\n    ]\n  }\n}\n\ngulpfile.js:\nvar gulp = require('gulp');\nvar fs = require(\"fs\");\nvar browserify = require(\"browserify\");\nvar babelify = require(\"babelify\");\nvar source = require('vinyl-source-stream');\nvar gutil = require('gulp-util');\n \ngulp.task('copy-html', function () {\n    return gulp.src(['src/**/*.html']).pipe(gulp.dest(\"dist\"));\n});\n\ngulp.task('es6', ['copy-html'], function() {\n\tbrowserify({ debug: true })\n\t\t.transform(babelify)\n\t\t.require(\"src/index.js\", { entry: true })\n\t\t.bundle()\n\t\t.on('error', gutil.log)\n\t\t.pipe(source('bundle.js'))\n    \t.pipe(gulp.dest('dist'));\n});\n \ngulp.task('watch',function() {\n\tgulp.watch(['src/**/*.js'],['es6'])\n});\n \ngulp.task('default', ['es6','watch']);\n\nindex.html:\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>ES6</title>\n</head>\n<body>\n\t<h1>Nothing here, check the console!</h1>\n\t<script src=\"bundle.js\"></script>\n</body>\n</html>",
                    "footer": null,
                    "personal": false
                },
                "children": []
            }
        ]
    },
    {
        "id": 1484759120693,
        "article": {
            "title": "Git",
            "header": null,
            "content": "git remote -v\ngit branch\ngit checkout -b name\n \ngit merge name // from develop\ngit branch -d name\n \ngit pull origin develop\n \n---\n \njspm modules:\ngit submodule init\ngit submodule update\ngit checkout\n \n---\n \ngit-flow:\ngit remote add origin https://github.com/MalinBoyanov/AngularSeedJspmES6.git\ngit pull origin master\ngit flow init\ngit flow feature start Flow\n// git flow feature publish Flow // publish on remote\n// git flow feature pull origin Flow //\ngit flow feature finish Flow\n \ngit pull origin master // from develop\ngit merge develop // from master\ngit push origin master // update server\n \n---\n \ngit remote show origin\ngit push origin :lab\n \n---\ngit submodules\nhttps://chrisjean.com/git-submodules-adding-using-removing-and-updating/",
            "footer": null,
            "personal": false
        },
        "children": []
    },
    {
        "id": 1484759205365,
        "article": {
            "title": "jspm",
            "header": null,
            "content": "npm install jspm --save\njspm init\n \njspm install npm:lodash-node\njspm install github:components/jquery\njspm install jquery\njspm install jquery bootstrap\njspm install jquery@2.1.0\n \nimport _ from 'lodash-node/modern/lang/isEqual.js';\nimport $ from 'jquery'\n \nbundle:\njspm bundle lib/main --inject\njspm bundle-sfx lib/main\njspm bundle-sfx --minify src/main bundle.min.js\n \njspm install -y // -y auto confirm\njspm update\njspm update jquery\njspm inspect - list dependecies\n \nResolve versions:\njspm resolve --only registry:package@version\n \nUninstall:\njspm uninstall jquery\n \nscript:\nvar jspm = require('jspm');\njspm.install('jquery');\n \ncss:\njspm install css\nimport './some/style.css!'; // ! is required\n \njson:\njspm install json\nimport config from './config-service!json';\n \nRun:\njspm run src/main.js\n \nCredentials:\njspm registry config github\n \nsubmodule:\ngit submodule add -f https://github.com/MalinBoyanov/es6.git ./lib/es6\njspm registry config github\njspm install myLib=github:MalinBoyanov/es6@master\njspm uninstall myLib\nimport Utils from 'myLib/src/index.js';\nconsole.log(new Utils().getValue());",
            "footer": null,
            "personal": false
        },
        "children": []
    }
]